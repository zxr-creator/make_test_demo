[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[  0%] Generating build details from Git
*******************************************************************************
[DEBUG] 总耗时: 9580 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 8895 微秒 (92.8497%)
[DEBUG]   Manifest Parsing and Rebuilding: 363 微秒 (3.78914%)
[DEBUG]   Initialization: 277 微秒 (2.89144%)
[DEBUG]   Execution Preparation: 1 微秒 (0.0104384%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 8920 微秒 (93.1106%)
[DEBUG]   Update goal chain: 8889 微秒 (92.7871%)
[DEBUG]   The whole process of reading the makefile: 233 微秒 (2.43215%)
[DEBUG]   Argument Parsing: 32 微秒 (0.334029%)
[DEBUG]   Dependency Graph Construction: 24 微秒 (0.250522%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 8632 微秒 (90.1044%)
[DEBUG]   Iterate over all double-colon entries for this file: 277 微秒 (2.89144%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 219 微秒 (2.28601%)
[DEBUG]   Free a chain of struct nameseq.: 36 微秒 (0.375783%)
[DEBUG]   Setup jobservers: 7 微秒 (0.0730689%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 8620 微秒 (89.9791%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 262 微秒 (2.73486%)
[DEBUG]   Read any stdin makefiles into temporary files: 210 微秒 (2.19207%)
[DEBUG]   Manage jobs: 2 微秒 (0.0208768%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 235 微秒 (2.45303%)
[DEBUG]   Read all makefiles and decode: 153 微秒 (1.59708%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
*******************************************************************************
[DEBUG] 总耗时: 9512 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 8757 微秒 (92.0627%)
[DEBUG]   Manifest Parsing and Rebuilding: 386 微秒 (4.05803%)
[DEBUG]   Initialization: 319 微秒 (3.35366%)
[DEBUG]   Execution Preparation: 1 微秒 (0.010513%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 8783 微秒 (92.336%)
[DEBUG]   Update goal chain: 8752 微秒 (92.0101%)
[DEBUG]   The whole process of reading the makefile: 260 微秒 (2.73339%)
[DEBUG]   Argument Parsing: 28 微秒 (0.294365%)
[DEBUG]   Dependency Graph Construction: 24 微秒 (0.252313%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 8519 微秒 (89.5606%)
[DEBUG]   Iterate over all double-colon entries for this file: 254 微秒 (2.67031%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 246 微秒 (2.58621%)
*******************************************************************************
[DEBUG]   Free a chain of struct nameseq.: 37 微秒 (0.388982%)
[DEBUG]   Setup jobservers: 7 微秒 (0.0735913%)
[DEBUG] 总耗时: 10302 微秒

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 8508 微秒 (89.4449%)
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling
[DEBUG]   Ensuring that build targets are checked and updated properly: 240 微秒 (2.52313%)
[DEBUG]   Read any stdin makefiles into temporary files: 237 微秒 (2.49159%)
[DEBUG]   Manage jobs: 2 微秒 (0.0210261%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)


[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 214 微秒 (2.24979%)
[DEBUG]   Read all makefiles and decode: 177 微秒 (1.86081%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG]   Run Build: 9484 微秒 (92.0598%)
[DEBUG]   Manifest Parsing and Rebuilding: 460 微秒 (4.46515%)
[DEBUG]   Initialization: 302 微秒 (2.93147%)
[DEBUG]   Execution Preparation: 3 微秒 (0.0291206%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 9515 微秒 (92.3607%)
[DEBUG]   Update goal chain: 9477 微秒 (91.9918%)
[DEBUG]   The whole process of reading the makefile: 320 微秒 (3.10619%)
[DEBUG]   Argument Parsing: 28 微秒 (0.271792%)
[DEBUG]   Dependency Graph Construction: 24 微秒 (0.232964%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 9203 微秒 (89.3322%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 306 微秒 (2.9703%)
[DEBUG]   Iterate over all double-colon entries for this file: 300 微秒 (2.91206%)
[DEBUG]   Free a chain of struct nameseq.: 47 微秒 (0.456222%)
[DEBUG]   Setup jobservers: 7 微秒 (0.067948%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 9191 微秒 (89.2157%)
[DEBUG]   Read any stdin makefiles into temporary files: 296 微秒 (2.87323%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 281 微秒 (2.72763%)
[DEBUG]   Manage jobs: 3 微秒 (0.0291206%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 249 微秒 (2.41701%)
[DEBUG]   Read all makefiles and decode: 236 微秒 (2.29082%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
*******************************************************************************
[DEBUG] 总耗时: 9835 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 9148 微秒 (93.0147%)
[DEBUG]   Manifest Parsing and Rebuilding: 365 微秒 (3.71124%)
[DEBUG]   Initialization: 274 微秒 (2.78597%)
[DEBUG]   Execution Preparation: 1 微秒 (0.0101678%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 9172 微秒 (93.2588%)
[DEBUG]   Update goal chain: 9142 微秒 (92.9537%)
[DEBUG]   The whole process of reading the makefile: 238 微秒 (2.41993%)
[DEBUG]   Argument Parsing: 30 微秒 (0.305033%)
[DEBUG]   Dependency Graph Construction: 23 微秒 (0.233859%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 8881 微秒 (90.2999%)
[DEBUG]   Iterate over all double-colon entries for this file: 280 微秒 (2.84698%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 225 微秒 (2.28775%)
[DEBUG]   Free a chain of struct nameseq.: 39 微秒 (0.396543%)
[DEBUG]   Setup jobservers: 7 微秒 (0.0711744%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 8870 微秒 (90.1881%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 267 微秒 (2.71479%)
[DEBUG]   Read any stdin makefiles into temporary files: 216 微秒 (2.19624%)
[DEBUG]   Manage jobs: 2 微秒 (0.0203355%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 238 微秒 (2.41993%)
[DEBUG]   Read all makefiles and decode: 155 微秒 (1.576%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[  1%] Building C object examples/gguf-hash/CMakeFiles/sha256.dir/deps/sha256/sha256.c.o
[  1%] Building C object examples/gguf-hash/CMakeFiles/sha1.dir/deps/sha1/sha1.c.o
[  2%] Building C object examples/gguf-hash/CMakeFiles/xxhash.dir/deps/xxhash/xxhash.c.o
-- Found Git: /usr/bin/git (found version "2.34.1") 
[  3%] Building C object ggml/src/CMakeFiles/ggml-base.dir/ggml.c.o
[  3%] Building C object ggml/src/CMakeFiles/ggml-base.dir/ggml-alloc.c.o
[  4%] Building CXX object ggml/src/CMakeFiles/ggml-base.dir/ggml-opt.cpp.o
[  4%] Building CXX object ggml/src/CMakeFiles/ggml-base.dir/ggml-backend.cpp.o
[  5%] Building CXX object ggml/src/CMakeFiles/ggml-base.dir/ggml-threading.cpp.o
[  5%] Building C object ggml/src/CMakeFiles/ggml-base.dir/ggml-quants.c.o
[  5%] Building CXX object ggml/src/CMakeFiles/ggml-base.dir/gguf.cpp.o
*******************************************************************************
[DEBUG] 总耗时: 88576 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 87884 微秒 (99.2188%)
[DEBUG]   Manifest Parsing and Rebuilding: 382 微秒 (0.431268%)
[DEBUG]   Initialization: 253 微秒 (0.28563%)
[DEBUG]   Execution Preparation: 1 微秒 (0.00112897%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 87903 微秒 (99.2402%)
[DEBUG]   Update goal chain: 87876 微秒 (99.2097%)
[DEBUG]   The whole process of reading the makefile: 264 微秒 (0.298049%)
[DEBUG]   Argument Parsing: 25 微秒 (0.0282243%)
[DEBUG]   Dependency Graph Construction: 24 微秒 (0.0270954%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 87318 微秒 (98.5798%)
[DEBUG]   Iterate over all double-colon entries for this file: 569 微秒 (0.642386%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 251 微秒 (0.283372%)
[DEBUG]   Free a chain of struct nameseq.: 37 微秒 (0.041772%)
[DEBUG]   Setup jobservers: 7 微秒 (0.00790282%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 87297 微秒 (98.556%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 552 微秒 (0.623194%)
[DEBUG]   Read any stdin makefiles into temporary files: 242 微秒 (0.273212%)
[DEBUG]   Manage jobs: 2 微秒 (0.00225795%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 520 微秒 (0.587066%)
[DEBUG]   Read all makefiles and decode: 176 微秒 (0.198699%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[  5%] Building CXX object common/CMakeFiles/build_info.dir/build-info.cpp.o
*******************************************************************************
[DEBUG] 总耗时: 25009 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 24229 微秒 (96.8811%)
[DEBUG]   Manifest Parsing and Rebuilding: 420 微秒 (1.6794%)
[DEBUG]   Initialization: 296 微秒 (1.18357%)
[DEBUG]   Execution Preparation: 1 微秒 (0.00399856%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 24250 微秒 (96.9651%)
[DEBUG]   Update goal chain: 24222 微秒 (96.8531%)
[DEBUG]   The whole process of reading the makefile: 260 微秒 (1.03963%)
[DEBUG]   Argument Parsing: 31 微秒 (0.123955%)
[DEBUG]   Dependency Graph Construction: 27 微秒 (0.107961%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 23924 微秒 (95.6616%)
[DEBUG]   Iterate over all double-colon entries for this file: 315 微秒 (1.25955%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 242 微秒 (0.967652%)
[DEBUG]   Free a chain of struct nameseq.: 37 微秒 (0.147947%)
[DEBUG]   Setup jobservers: 9 微秒 (0.035987%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 23910 微秒 (95.6056%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 302 微秒 (1.20757%)
[DEBUG]   Read any stdin makefiles into temporary files: 233 微秒 (0.931665%)
[DEBUG]   Manage jobs: 2 微秒 (0.00799712%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 273 微秒 (1.09161%)
[DEBUG]   Read all makefiles and decode: 161 微秒 (0.643768%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[  5%] Built target build_info
*******************************************************************************
[DEBUG] 总耗时: 149098 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 148415 微秒 (99.5419%)
[DEBUG]   Manifest Parsing and Rebuilding: 362 微秒 (0.242793%)
[DEBUG]   Initialization: 272 微秒 (0.18243%)
[DEBUG]   Execution Preparation: 1 微秒 (0.0006707%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 148440 微秒 (99.5587%)
[DEBUG]   Update goal chain: 148409 微秒 (99.5379%)
[DEBUG]   The whole process of reading the makefile: 239 微秒 (0.160297%)
[DEBUG]   Argument Parsing: 27 微秒 (0.0181089%)
[DEBUG]   Dependency Graph Construction: 23 微秒 (0.0154261%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 148122 微秒 (99.3454%)
[DEBUG]   Iterate over all double-colon entries for this file: 307 微秒 (0.205905%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 225 微秒 (0.150907%)
[DEBUG]   Free a chain of struct nameseq.: 37 微秒 (0.0248159%)
[DEBUG]   Setup jobservers: 7 微秒 (0.0046949%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 148107 微秒 (99.3353%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 293 微秒 (0.196515%)
[DEBUG]   Read any stdin makefiles into temporary files: 217 微秒 (0.145542%)
[DEBUG]   Manage jobs: 2 微秒 (0.0013414%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 265 微秒 (0.177735%)
[DEBUG]   Read all makefiles and decode: 147 微秒 (0.0985929%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[  5%] Built target sha1
*******************************************************************************
[DEBUG] 总耗时: 189301 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 188625 微秒 (99.6429%)
[DEBUG]   Manifest Parsing and Rebuilding: 380 微秒 (0.200739%)
[DEBUG]   Initialization: 249 微秒 (0.131537%)
[DEBUG]   Execution Preparation: 1 微秒 (0.000528259%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 188649 微秒 (99.6556%)
[DEBUG]   Update goal chain: 188619 微秒 (99.6397%)
[DEBUG]   The whole process of reading the makefile: 251 微秒 (0.132593%)
[DEBUG]   Argument Parsing: 31 微秒 (0.016376%)
[DEBUG]   Dependency Graph Construction: 23 微秒 (0.01215%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 188314 微秒 (99.4786%)
[DEBUG]   Iterate over all double-colon entries for this file: 325 微秒 (0.171684%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 236 微秒 (0.124669%)
[DEBUG]   Free a chain of struct nameseq.: 40 微秒 (0.0211304%)
[DEBUG]   Setup jobservers: 7 微秒 (0.00369781%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 188301 微秒 (99.4717%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 311 微秒 (0.164289%)
[DEBUG]   Read any stdin makefiles into temporary files: 227 微秒 (0.119915%)
[DEBUG]   Manage jobs: 2 微秒 (0.00105652%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 278 微秒 (0.146856%)
[DEBUG]   Read all makefiles and decode: 171 微秒 (0.0903323%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[  5%] Built target sha256
*******************************************************************************
[DEBUG] 总耗时: 729122 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 728466 微秒 (99.91%)
[DEBUG]   Manifest Parsing and Rebuilding: 354 微秒 (0.0485515%)
[DEBUG]   Initialization: 258 微秒 (0.035385%)
[DEBUG]   Execution Preparation: 1 微秒 (0.000137151%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 728487 微秒 (99.9129%)
[DEBUG]   Update goal chain: 728459 微秒 (99.9091%)
[DEBUG]   The whole process of reading the makefile: 234 微秒 (0.0320934%)
[DEBUG]   Dependency Graph Construction: 24 微秒 (0.00329163%)
[DEBUG]   Argument Parsing: 23 微秒 (0.00315448%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 728146 微秒 (99.8661%)
[DEBUG]   Iterate over all double-colon entries for this file: 329 微秒 (0.0451228%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 221 微秒 (0.0303104%)
[DEBUG]   Free a chain of struct nameseq.: 39 微秒 (0.0053489%)
[DEBUG]   Setup jobservers: 7 微秒 (0.000960059%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 728131 微秒 (99.8641%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 315 微秒 (0.0432026%)
[DEBUG]   Read any stdin makefiles into temporary files: 212 微秒 (0.0290761%)
[DEBUG]   Manage jobs: 2 微秒 (0.000274303%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 286 微秒 (0.0392253%)
[DEBUG]   Read all makefiles and decode: 149 微秒 (0.0204355%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[  5%] Built target xxhash
[  6%] Linking CXX shared library ../../bin/libggml-base.so
*******************************************************************************
[DEBUG] 总耗时: 4019900 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 4019176 微秒 (99.982%)
[DEBUG]   Manifest Parsing and Rebuilding: 425 微秒 (0.0105724%)
[DEBUG]   Initialization: 258 微秒 (0.00641807%)
[DEBUG]   Execution Preparation: 1 微秒 (2.48762e-05%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 4019196 微秒 (99.9825%)
[DEBUG]   Update goal chain: 4019170 微秒 (99.9818%)
[DEBUG]   The whole process of reading the makefile: 304 微秒 (0.00756238%)
[DEBUG]   Argument Parsing: 26 微秒 (0.000646782%)
[DEBUG]   Dependency Graph Construction: 24 微秒 (0.00059703%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 4016800 微秒 (99.9229%)
[DEBUG]   Iterate over all double-colon entries for this file: 2354 微秒 (0.0585587%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 290 微秒 (0.00721411%)
[DEBUG]   Free a chain of struct nameseq.: 44 微秒 (0.00109455%)
[DEBUG]   Setup jobservers: 7 微秒 (0.000174134%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 4016728 微秒 (99.9211%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 2316 微秒 (0.0576134%)
[DEBUG]   Read any stdin makefiles into temporary files: 282 微秒 (0.0070151%)
[DEBUG]   Manage jobs: 2 微秒 (4.97525e-05%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 2253 微秒 (0.0560462%)
[DEBUG]   Read all makefiles and decode: 223 微秒 (0.0055474%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[  6%] Built target ggml-base
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 10945 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 10148 微秒 (92.7181%)
[DEBUG]   Manifest Parsing and Rebuilding: 494 微秒 (4.51348%)
[DEBUG]   Initialization: 253 微秒 (2.31156%)
[DEBUG]   Execution Preparation: 1 微秒 (0.00913659%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 10174 微秒 (92.9557%)
[DEBUG]   Update goal chain: 10143 微秒 (92.6725%)
[DEBUG]   The whole process of reading the makefile: 347 微秒 (3.1704%)
[DEBUG]   Argument Parsing: 33 微秒 (0.301508%)
[DEBUG]   Dependency Graph Construction: 24 微秒 (0.219278%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 9757 微秒 (89.1457%)
[DEBUG]   Iterate over all double-colon entries for this file: 406 微秒 (3.70946%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 332 微秒 (3.03335%)
[DEBUG]   Free a chain of struct nameseq.: 53 微秒 (0.484239%)
[DEBUG]   Setup jobservers: 8 微秒 (0.0730927%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 9747 微秒 (89.0544%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 392 微秒 (3.58154%)
[DEBUG]   Read any stdin makefiles into temporary files: 323 微秒 (2.95112%)
[DEBUG]   Manage jobs: 2 微秒 (0.0182732%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 368 微秒 (3.36227%)
[DEBUG]   Read all makefiles and decode: 265 微秒 (2.4212%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[  6%] Building C object ggml/src/CMakeFiles/ggml-cpu.dir/ggml-cpu/ggml-cpu.c.o
[  6%] Building CXX object ggml/src/CMakeFiles/ggml-cpu.dir/ggml-cpu/ggml-cpu-aarch64.cpp.o
[  7%] Building CXX object ggml/src/CMakeFiles/ggml-cpu.dir/ggml-cpu/ggml-cpu.cpp.o
[  8%] Building CXX object ggml/src/CMakeFiles/ggml-cpu.dir/ggml-cpu/ggml-cpu-hbm.cpp.o
[  9%] Building C object ggml/src/CMakeFiles/ggml-cpu.dir/ggml-cpu/ggml-cpu-quants.c.o
[  9%] Building CXX object ggml/src/CMakeFiles/ggml-cpu.dir/ggml-cpu/ggml-cpu-traits.cpp.o
[  9%] Building CXX object ggml/src/CMakeFiles/ggml-cpu.dir/ggml-cpu/amx/amx.cpp.o
[  9%] Building CXX object ggml/src/CMakeFiles/ggml-cpu.dir/ggml-cpu/amx/mmq.cpp.o
[ 10%] Building CXX object ggml/src/CMakeFiles/ggml-cpu.dir/ggml-cpu/llamafile/sgemm.cpp.o
[ 10%] Linking CXX shared library ../../bin/libggml-cpu.so
*******************************************************************************
[DEBUG] 总耗时: 4067046 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 4066243 微秒 (99.9803%)
[DEBUG]   Manifest Parsing and Rebuilding: 517 微秒 (0.0127119%)
[DEBUG]   Initialization: 242 微秒 (0.00595026%)
[DEBUG]   Execution Preparation: 1 微秒 (2.45879e-05%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 4066264 微秒 (99.9808%)
[DEBUG]   Update goal chain: 4066237 微秒 (99.9801%)
[DEBUG]   The whole process of reading the makefile: 396 微秒 (0.0097368%)
[DEBUG]   Argument Parsing: 28 微秒 (0.00068846%)
[DEBUG]   Dependency Graph Construction: 24 微秒 (0.000590109%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 4062432 微秒 (99.8866%)
[DEBUG]   Iterate over all double-colon entries for this file: 3778 微秒 (0.092893%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 383 微秒 (0.00941715%)
[DEBUG]   Free a chain of struct nameseq.: 42 微秒 (0.00103269%)
[DEBUG]   Setup jobservers: 7 微秒 (0.000172115%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 4062352 微秒 (99.8846%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 3739 微秒 (0.091934%)
[DEBUG]   Read any stdin makefiles into temporary files: 373 微秒 (0.00917128%)
[DEBUG]   Manage jobs: 2 微秒 (4.91757e-05%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 3669 微秒 (0.0902129%)
[DEBUG]   Read all makefiles and decode: 315 微秒 (0.00774518%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 10%] Built target ggml-cpu
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 9888 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 9199 微秒 (93.032%)
[DEBUG]   Manifest Parsing and Rebuilding: 392 微秒 (3.9644%)
[DEBUG]   Initialization: 253 微秒 (2.55866%)
[DEBUG]   Execution Preparation: 2 微秒 (0.0202265%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 9246 微秒 (93.5073%)
[DEBUG]   Update goal chain: 9194 微秒 (92.9814%)
[DEBUG]   The whole process of reading the makefile: 243 微秒 (2.45752%)
[DEBUG]   Argument Parsing: 29 微秒 (0.293285%)
[DEBUG]   Dependency Graph Construction: 24 微秒 (0.242718%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 8811 微秒 (89.108%)
[DEBUG]   Iterate over all double-colon entries for this file: 424 微秒 (4.28803%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 229 微秒 (2.31594%)
[DEBUG]   Free a chain of struct nameseq.: 36 微秒 (0.364078%)
[DEBUG]   Setup jobservers: 7 微秒 (0.0707929%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 8802 微秒 (89.017%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 410 微秒 (4.14644%)
[DEBUG]   Read any stdin makefiles into temporary files: 220 微秒 (2.22492%)
[DEBUG]   Manage jobs: 3 微秒 (0.0303398%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 361 微秒 (3.65089%)
[DEBUG]   Read all makefiles and decode: 156 微秒 (1.57767%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[ 10%] Building CXX object ggml/src/CMakeFiles/ggml.dir/ggml-backend-reg.cpp.o
[ 11%] Linking CXX shared library ../../bin/libggml.so
*******************************************************************************
[DEBUG] 总耗时: 1167308 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1166645 微秒 (99.9432%)
[DEBUG]   Manifest Parsing and Rebuilding: 353 微秒 (0.0302405%)
[DEBUG]   Initialization: 266 微秒 (0.0227875%)
[DEBUG]   Execution Preparation: 1 微秒 (8.56672e-05%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1166668 微秒 (99.9452%)
[DEBUG]   Update goal chain: 1166639 微秒 (99.9427%)
[DEBUG]   The whole process of reading the makefile: 234 微秒 (0.0200461%)
[DEBUG]   Argument Parsing: 25 微秒 (0.00214168%)
[DEBUG]   Dependency Graph Construction: 23 微秒 (0.00197035%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1166011 微秒 (99.8889%)
[DEBUG]   Iterate over all double-colon entries for this file: 641 微秒 (0.0549127%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 221 微秒 (0.0189324%)
[DEBUG]   Free a chain of struct nameseq.: 37 微秒 (0.00316969%)
[DEBUG]   Setup jobservers: 7 微秒 (0.00059967%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1165991 微秒 (99.8872%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 626 微秒 (0.0536277%)
[DEBUG]   Read any stdin makefiles into temporary files: 212 微秒 (0.0181614%)
[DEBUG]   Manage jobs: 2 微秒 (0.000171334%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 592 微秒 (0.050715%)
[DEBUG]   Read all makefiles and decode: 151 微秒 (0.0129357%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 11%] Built target ggml
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 10272 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 9388 微秒 (91.3941%)
[DEBUG]   Manifest Parsing and Rebuilding: 590 微秒 (5.74377%)
[DEBUG]   Initialization: 246 微秒 (2.39486%)
[DEBUG]   Execution Preparation: 1 微秒 (0.0097352%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 9412 微秒 (91.6277%)
[DEBUG]   Update goal chain: 9383 微秒 (91.3454%)
[DEBUG]   The whole process of reading the makefile: 440 微秒 (4.28349%)
[DEBUG]   Dependency Graph Construction: 49 微秒 (0.477025%)
[DEBUG]   Argument Parsing: 28 微秒 (0.272586%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 9139 微秒 (88.97%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 426 微秒 (4.1472%)
[DEBUG]   Iterate over all double-colon entries for this file: 263 微秒 (2.56036%)
[DEBUG]   Free a chain of struct nameseq.: 54 微秒 (0.525701%)
[DEBUG]   Setup jobservers: 7 微秒 (0.0681464%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 9129 微秒 (88.8727%)
[DEBUG]   Read any stdin makefiles into temporary files: 416 微秒 (4.04984%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 250 微秒 (2.4338%)
[DEBUG]   Manage jobs: 2 微秒 (0.0194704%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Read all makefiles and decode: 350 微秒 (3.40732%)
[DEBUG]   Save the old value of 'commands_started': 225 微秒 (2.19042%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
*******************************************************************************
[DEBUG] 总耗时: 10333 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 9661 微秒 (93.4966%)
[DEBUG]   Manifest Parsing and Rebuilding: 362 微秒 (3.50334%)
[DEBUG]   Initialization: 264 微秒 (2.55492%)
*******************************************************************************
[DEBUG]   Execution Preparation: 1 微秒 (0.00967773%)
[DEBUG] 总耗时: 10170 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"

[DEBUG] finish profiling
[DEBUG] Level 1 前 5 个耗时最多的记录:

[DEBUG]   Update all the goals: 9683 微秒 (93.7095%)
[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Update goal chain: 9655 微秒 (93.4385%)
[DEBUG]   The whole process of reading the makefile: 244 微秒 (2.36137%)
[DEBUG]   Argument Parsing: 26 微秒 (0.251621%)
[DEBUG]   Dependency Graph Construction: 22 微秒 (0.21291%)
[DEBUG]   Run Build: 9459 微秒 (93.0088%)

[DEBUG]   Manifest Parsing and Rebuilding: 388 微秒 (3.81514%)
[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Initialization: 272 微秒 (2.67453%)
[DEBUG]   Execution Preparation: 1 微秒 (0.00983284%)
[DEBUG]   Variable initalzation: 9399 微秒 (90.961%)
[DEBUG]   Iterate over all double-colon entries for this file: 274 微秒 (2.6517%)

[DEBUG]   Set varibles and Read makefiles into temporary files: 230 微秒 (2.22588%)
[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 9480 微秒 (93.2153%)
[DEBUG]   Free a chain of struct nameseq.: 36 微秒 (0.348398%)
[DEBUG]   Update goal chain: 9453 微秒 (92.9499%)
[DEBUG]   The whole process of reading the makefile: 259 微秒 (2.54671%)
[DEBUG]   Setup jobservers: 7 微秒 (0.0677441%)
[DEBUG]   Argument Parsing: 34 微秒 (0.334317%)
[DEBUG]   Dependency Graph Construction: 25 微秒 (0.245821%)


[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 9189 微秒 (90.354%)
[DEBUG]   Wait for a child to die: 9388 微秒 (90.8545%)
[DEBUG]   Iterate over all double-colon entries for this file: 281 微秒 (2.76303%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 245 微秒 (2.40905%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 260 微秒 (2.51621%)
[DEBUG]   Free a chain of struct nameseq.: 34 微秒 (0.334317%)
[DEBUG]   Setup jobservers: 7 微秒 (0.0688299%)
[DEBUG]   Read any stdin makefiles into temporary files: 220 微秒 (2.1291%)
[DEBUG]   Manage jobs: 2 微秒 (0.0193555%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)
[DEBUG]   Wait for a child to die: 9179 微秒 (90.2557%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 266 微秒 (2.61554%)

[DEBUG]   Read any stdin makefiles into temporary files: 237 微秒 (2.33038%)
[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Manage jobs: 2 微秒 (0.0196657%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)
[DEBUG]   Save the old value of 'commands_started': 234 微秒 (2.26459%)

[DEBUG]   Read all makefiles and decode: 157 微秒 (1.5194%)
[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 241 微秒 (2.36971%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Read all makefiles and decode: 171 微秒 (1.68142%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[ 12%] Building CXX object src/CMakeFiles/llama.dir/llama-arch.cpp.o
[ 13%] Building CXX object examples/gguf-hash/CMakeFiles/llama-gguf-hash.dir/gguf-hash.cpp.o
[ 13%] Building CXX object src/CMakeFiles/llama.dir/llama-context.cpp.o
[ 14%] Building CXX object src/CMakeFiles/llama.dir/llama-chat.cpp.o
[ 15%] Building CXX object src/CMakeFiles/llama.dir/llama-grammar.cpp.o
[ 15%] Building CXX object src/CMakeFiles/llama.dir/llama-hparams.cpp.o
[ 16%] Building CXX object src/CMakeFiles/llama.dir/llama-adapter.cpp.o
[ 16%] Building CXX object src/CMakeFiles/llama.dir/llama.cpp.o
[ 16%] Building CXX object src/CMakeFiles/llama.dir/llama-batch.cpp.o
[ 17%] Building CXX object src/CMakeFiles/llama.dir/llama-impl.cpp.o
[ 17%] Building CXX object src/CMakeFiles/llama.dir/llama-kv-cache.cpp.o
[ 17%] Building CXX object src/CMakeFiles/llama.dir/llama-model-loader.cpp.o
[ 19%] Building CXX object src/CMakeFiles/llama.dir/llama-model.cpp.o
[ 19%] Building CXX object examples/gguf/CMakeFiles/llama-gguf.dir/gguf.cpp.o
[ 20%] Building CXX object src/CMakeFiles/llama.dir/llama-sampling.cpp.o
[ 21%] Building CXX object src/CMakeFiles/llama.dir/llama-mmap.cpp.o
[ 21%] Building CXX object src/CMakeFiles/llama.dir/unicode-data.cpp.o
[ 21%] Building CXX object src/CMakeFiles/llama.dir/llama-quant.cpp.o
[ 21%] Building CXX object src/CMakeFiles/llama.dir/llama-vocab.cpp.o
[ 22%] Building CXX object src/CMakeFiles/llama.dir/unicode.cpp.o
[ 22%] Linking CXX executable ../../bin/llama-gguf
*******************************************************************************
[DEBUG] 总耗时: 667356 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 666662 微秒 (99.896%)
[DEBUG]   Manifest Parsing and Rebuilding: 387 微秒 (0.05799%)
[DEBUG]   Initialization: 258 微秒 (0.03866%)
[DEBUG]   Execution Preparation: 1 微秒 (0.000149845%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 666679 微秒 (99.8986%)
[DEBUG]   Update goal chain: 666653 微秒 (99.8947%)
[DEBUG]   The whole process of reading the makefile: 266 微秒 (0.0398588%)
[DEBUG]   Argument Parsing: 27 微秒 (0.00404582%)
[DEBUG]   Dependency Graph Construction: 24 微秒 (0.00359628%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 665935 微秒 (99.7871%)
[DEBUG]   Iterate over all double-colon entries for this file: 726 微秒 (0.108788%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 253 微秒 (0.0379108%)
[DEBUG]   Free a chain of struct nameseq.: 36 微秒 (0.00539442%)
[DEBUG]   Setup jobservers: 6 微秒 (0.00089907%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 665907 微秒 (99.7829%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 705 微秒 (0.105641%)
[DEBUG]   Read any stdin makefiles into temporary files: 243 微秒 (0.0364123%)
[DEBUG]   Manage jobs: 3 微秒 (0.000449535%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 665 微秒 (0.099647%)
[DEBUG]   Read all makefiles and decode: 181 微秒 (0.027122%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 22%] Linking CXX executable ../../bin/llama-gguf-hash
[ 22%] Built target llama-gguf
*******************************************************************************
[DEBUG] 总耗时: 734319 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 733581 微秒 (99.8995%)
[DEBUG]   Manifest Parsing and Rebuilding: 415 微秒 (0.0565149%)
[DEBUG]   Initialization: 273 微秒 (0.0371773%)
[DEBUG]   Execution Preparation: 1 微秒 (0.000136181%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 733614 微秒 (99.904%)
[DEBUG]   Update goal chain: 733575 微秒 (99.8987%)
[DEBUG]   The whole process of reading the makefile: 279 微秒 (0.0379944%)
[DEBUG]   Argument Parsing: 27 微秒 (0.00367688%)
[DEBUG]   Dependency Graph Construction: 24 微秒 (0.00326833%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 732853 微秒 (99.8004%)
[DEBUG]   Iterate over all double-colon entries for this file: 733 微秒 (0.0998204%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 264 微秒 (0.0359517%)
[DEBUG]   Free a chain of struct nameseq.: 35 微秒 (0.00476632%)
[DEBUG]   Setup jobservers: 8 微秒 (0.00108944%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 732826 微秒 (99.7967%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 713 微秒 (0.0970968%)
[DEBUG]   Read any stdin makefiles into temporary files: 255 微秒 (0.0347261%)
[DEBUG]   Manage jobs: 2 微秒 (0.000272361%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 674 微秒 (0.0917857%)
[DEBUG]   Read all makefiles and decode: 188 微秒 (0.025602%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 22%] Built target llama-gguf-hash
[ 23%] Linking CXX shared library ../bin/libllama.so
*******************************************************************************
[DEBUG] 总耗时: 6248029 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 6247171 微秒 (99.9863%)
[DEBUG]   Manifest Parsing and Rebuilding: 565 微秒 (0.00904285%)
[DEBUG]   Initialization: 245 微秒 (0.00392124%)
[DEBUG]   Execution Preparation: 1 微秒 (1.6005e-05%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 6247192 微秒 (99.9866%)
[DEBUG]   Update goal chain: 6247165 微秒 (99.9862%)
[DEBUG]   The whole process of reading the makefile: 444 微秒 (0.00710624%)
[DEBUG]   Argument Parsing: 28 微秒 (0.000448141%)
[DEBUG]   Dependency Graph Construction: 25 微秒 (0.000400126%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 6241552 微秒 (99.8963%)
[DEBUG]   Iterate over all double-colon entries for this file: 5533 微秒 (0.0885559%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 430 微秒 (0.00688217%)
[DEBUG]   Free a chain of struct nameseq.: 35 微秒 (0.000560177%)
[DEBUG]   Setup jobservers: 7 微秒 (0.000112035%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 6241356 微秒 (99.8932%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 5461 微秒 (0.0874036%)
[DEBUG]   Read any stdin makefiles into temporary files: 420 微秒 (0.00672212%)
[DEBUG]   Manage jobs: 3 微秒 (4.80151e-05%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 5312 微秒 (0.0850188%)
[DEBUG]   Read all makefiles and decode: 362 微秒 (0.00579383%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 23%] Built target llama
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 10082 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 9384 微秒 (93.0768%)
[DEBUG]   Manifest Parsing and Rebuilding: 371 微秒 (3.67983%)
[DEBUG]   Initialization: 260 微秒 (2.57885%)
[DEBUG]   Execution Preparation: 1 微秒 (0.00991867%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 9407 微秒 (93.3049%)
[DEBUG]   Update goal chain: 9378 微秒 (93.0173%)
[DEBUG]   The whole process of reading the makefile: 248 微秒 (2.45983%)
[DEBUG]   Argument Parsing: 29 微秒 (0.287641%)
[DEBUG]   Dependency Graph Construction: 25 微秒 (0.247967%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 9100 微秒 (90.2599%)
[DEBUG]   Iterate over all double-colon entries for this file: 296 微秒 (2.93593%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 233 微秒 (2.31105%)
[DEBUG]   Free a chain of struct nameseq.: 35 微秒 (0.347153%)
[DEBUG]   Setup jobservers: 8 微秒 (0.0793493%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 9090 微秒 (90.1607%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 281 微秒 (2.78715%)
[DEBUG]   Read any stdin makefiles into temporary files: 224 微秒 (2.22178%)
[DEBUG]   Manage jobs: 2 微秒 (0.0198373%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 257 微秒 (2.5491%)
[DEBUG]   Read all makefiles and decode: 158 微秒 (1.56715%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
*******************************************************************************
[DEBUG] 总耗时: 9752 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
*******************************************************************************
[DEBUG]   Run Build: 9014 微秒 (92.4323%)
[DEBUG] 总耗时: 10123 微秒
[DEBUG]   Manifest Parsing and Rebuilding: 373 微秒 (3.82486%)
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling
[DEBUG]   Initialization: 317 微秒 (3.25062%)
[DEBUG]   Execution Preparation: 1 微秒 (0.0102543%)

[DEBUG] Level 0 前 5 个耗时最多的记录:

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 9038 微秒 (92.6784%)
[DEBUG]   Update goal chain: 9008 微秒 (92.3708%)
[DEBUG]   The whole process of reading the makefile: 247 微秒 (2.53281%)
[DEBUG]   Argument Parsing: 28 微秒 (0.287121%)
[DEBUG]   Dependency Graph Construction: 23 微秒 (0.235849%)
[DEBUG]   Run Build: 9351 微秒 (92.3738%)

[DEBUG]   Manifest Parsing and Rebuilding: 453 微秒 (4.47496%)
[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Initialization: 270 微秒 (2.66719%)
[DEBUG]   Variable initalzation: 8769 微秒 (89.92%)
[DEBUG]   Execution Preparation: 1 微秒 (0.00987849%)
[DEBUG]   Iterate over all double-colon entries for this file: 259 微秒 (2.65587%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 233 微秒 (2.38925%)

[DEBUG]   Free a chain of struct nameseq.: 36 微秒 (0.369155%)
[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Setup jobservers: 7 微秒 (0.0717801%)
[DEBUG]   Update all the goals: 9374 微秒 (92.601%)
[DEBUG]   Update goal chain: 9346 微秒 (92.3244%)

[DEBUG]   The whole process of reading the makefile: 333 微秒 (3.28954%)
[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Argument Parsing: 27 微秒 (0.266719%)
[DEBUG]   Dependency Graph Construction: 23 微秒 (0.227205%)
[DEBUG]   Wait for a child to die: 8756 微秒 (89.7867%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 244 微秒 (2.50205%)

[DEBUG]   Read any stdin makefiles into temporary files: 224 微秒 (2.29696%)
[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Manage jobs: 2 微秒 (0.0205086%)
[DEBUG]   Variable initalzation: 9104 微秒 (89.9338%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 319 微秒 (3.15124%)
[DEBUG]   Iterate over all double-colon entries for this file: 260 微秒 (2.56841%)
[DEBUG]   Free a chain of struct nameseq.: 69 微秒 (0.681616%)

[DEBUG]   Setup jobservers: 7 微秒 (0.0691495%)
[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 214 微秒 (2.19442%)

[DEBUG]   Read all makefiles and decode: 164 微秒 (1.68171%)
[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Wait for a child to die: 9093 微秒 (89.8252%)
[DEBUG]   Read any stdin makefiles into temporary files: 310 微秒 (3.06233%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 244 微秒 (2.41035%)
[DEBUG]   Manage jobs: 3 微秒 (0.0296355%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Read all makefiles and decode: 228 微秒 (2.2523%)
[DEBUG]   Save the old value of 'commands_started': 217 微秒 (2.14363%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
*******************************************************************************
*******************************************************************************
[DEBUG] 总耗时: 11084 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling
[DEBUG] 总耗时: 10752 微秒

[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling
[DEBUG] Level 0 前 5 个耗时最多的记录:

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 10245 微秒 (92.4305%)
[DEBUG]   Manifest Parsing and Rebuilding: 481 微秒 (4.33959%)
[DEBUG]   Run Build: 10088 微秒 (93.8244%)
[DEBUG]   Initialization: 299 微秒 (2.69758%)
[DEBUG]   Manifest Parsing and Rebuilding: 368 微秒 (3.42262%)
[DEBUG]   Execution Preparation: 1 微秒 (0.00902201%)
[DEBUG]   Initialization: 252 微秒 (2.34375%)
[DEBUG]   Execution Preparation: 1 微秒 (0.0093006%)

[DEBUG] Level 1 前 5 个耗时最多的记录:

[DEBUG]   Update all the goals: 10271 微秒 (92.6651%)
[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update goal chain: 10240 微秒 (92.3854%)
[DEBUG]   Update all the goals: 10112 微秒 (94.0476%)
[DEBUG]   The whole process of reading the makefile: 349 微秒 (3.14868%)
[DEBUG]   Update goal chain: 10083 微秒 (93.7779%)
[DEBUG]   Argument Parsing: 35 微秒 (0.31577%)
[DEBUG]   The whole process of reading the makefile: 245 微秒 (2.27865%)
[DEBUG]   Dependency Graph Construction: 25 微秒 (0.22555%)
[DEBUG]   Argument Parsing: 28 微秒 (0.260417%)
[DEBUG]   Dependency Graph Construction: 24 微秒 (0.223214%)

[DEBUG] Level 2 前 5 个耗时最多的记录:

[DEBUG]   Variable initalzation: 9986 微秒 (90.0938%)
[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Set varibles and Read makefiles into temporary files: 334 微秒 (3.01335%)
[DEBUG]   Variable initalzation: 9820 微秒 (91.3318%)
[DEBUG]   Iterate over all double-colon entries for this file: 275 微秒 (2.48105%)
[DEBUG]   Iterate over all double-colon entries for this file: 281 微秒 (2.61347%)
[DEBUG]   Free a chain of struct nameseq.: 35 微秒 (0.31577%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 232 微秒 (2.15774%)
[DEBUG]   Setup jobservers: 8 微秒 (0.0721761%)
[DEBUG]   Free a chain of struct nameseq.: 36 微秒 (0.334821%)
[DEBUG]   Setup jobservers: 7 微秒 (0.0651042%)

[DEBUG] Level 3 前 5 个耗时最多的记录:

[DEBUG]   Wait for a child to die: 9975 微秒 (89.9946%)
[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Read any stdin makefiles into temporary files: 324 微秒 (2.92313%)
[DEBUG]   Wait for a child to die: 9809 微秒 (91.2295%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 262 微秒 (2.36377%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 266 微秒 (2.47396%)
[DEBUG]   Manage jobs: 3 微秒 (0.027066%)
*******************************************************************************
[DEBUG]   Read any stdin makefiles into temporary files: 223 微秒 (2.07403%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)
[DEBUG]   Manage jobs: 2 微秒 (0.0186012%)

[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)
[DEBUG] 总耗时: 10265 微秒
[DEBUG] Level 4 前 5 个耗时最多的记录:

[DEBUG]   Read all makefiles and decode: 258 微秒 (2.32768%)
[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 237 微秒 (2.13822%)
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG]   Save the old value of 'commands_started': 242 微秒 (2.25074%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG] finish profiling
[DEBUG]   Read all makefiles and decode: 162 微秒 (1.5067%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 9551 微秒 (93.0443%)
[DEBUG]   Manifest Parsing and Rebuilding: 410 微秒 (3.99415%)
[DEBUG]   Initialization: 257 微秒 (2.50365%)
[DEBUG]   Execution Preparation: 1 微秒 (0.00974184%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 9575 微秒 (93.2781%)
[DEBUG]   Update goal chain: 9546 微秒 (92.9956%)
[DEBUG]   The whole process of reading the makefile: 291 微秒 (2.83488%)
[DEBUG]   Argument Parsing: 25 微秒 (0.243546%)
[DEBUG]   Dependency Graph Construction: 23 微秒 (0.224062%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 9307 微秒 (90.6673%)
[DEBUG]   Iterate over all double-colon entries for this file: 258 微秒 (2.5134%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 258 微秒 (2.5134%)
[DEBUG]   Free a chain of struct nameseq.: 36 微秒 (0.350706%)
[DEBUG]   Setup jobservers: 26 微秒 (0.253288%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 9296 微秒 (90.5602%)
[DEBUG]   Read any stdin makefiles into temporary files: 249 微秒 (2.42572%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 243 微秒 (2.36727%)
[DEBUG]   Manage jobs: 2 微秒 (0.0194837%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 216 微秒 (2.10424%)
[DEBUG]   Read all makefiles and decode: 183 微秒 (1.78276%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[ 24%] Building C object tests/CMakeFiles/test-c.dir/test-c.c.o
[ 24%] Building CXX object examples/simple-chat/CMakeFiles/llama-simple-chat.dir/simple-chat.cpp.o
[ 24%] Building CXX object examples/llava/CMakeFiles/llava.dir/llava.cpp.o
[ 26%] Building CXX object common/CMakeFiles/common.dir/arg.cpp.o
[ 26%] Building CXX object examples/simple/CMakeFiles/llama-simple.dir/simple.cpp.o
[ 26%] Building CXX object examples/llava/CMakeFiles/llava.dir/clip.cpp.o
[ 27%] Building CXX object common/CMakeFiles/common.dir/chat.cpp.o
[ 27%] Building CXX object common/CMakeFiles/common.dir/common.cpp.o
[ 27%] Building CXX object common/CMakeFiles/common.dir/console.cpp.o
[ 27%] Building CXX object examples/quantize-stats/CMakeFiles/llama-quantize-stats.dir/quantize-stats.cpp.o
[ 28%] Building CXX object common/CMakeFiles/common.dir/json-schema-to-grammar.cpp.o
[ 28%] Building CXX object common/CMakeFiles/common.dir/llguidance.cpp.o
[ 29%] Building CXX object common/CMakeFiles/common.dir/log.cpp.o
[ 29%] Building CXX object common/CMakeFiles/common.dir/ngram-cache.cpp.o
[ 30%] Building CXX object common/CMakeFiles/common.dir/sampling.cpp.o
[ 30%] Building CXX object common/CMakeFiles/common.dir/speculative.cpp.o
[ 30%] Linking C executable ../bin/test-c
*******************************************************************************
[DEBUG] 总耗时: 78698 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 78038 微秒 (99.1614%)
[DEBUG]   Manifest Parsing and Rebuilding: 359 微秒 (0.456174%)
[DEBUG]   Initialization: 254 微秒 (0.322753%)
[DEBUG]   Execution Preparation: 2 微秒 (0.00254136%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 78053 微秒 (99.1804%)
[DEBUG]   Update goal chain: 78028 微秒 (99.1486%)
[DEBUG]   The whole process of reading the makefile: 242 微秒 (0.307505%)
[DEBUG]   Argument Parsing: 26 微秒 (0.0330377%)
[DEBUG]   Dependency Graph Construction: 22 微秒 (0.027955%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 77372 微秒 (98.3151%)
[DEBUG]   Iterate over all double-colon entries for this file: 662 微秒 (0.84119%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 228 微秒 (0.289715%)
[DEBUG]   Free a chain of struct nameseq.: 39 微秒 (0.0495565%)
[DEBUG]   Setup jobservers: 7 微秒 (0.00889476%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 77344 微秒 (98.2795%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 645 微秒 (0.819589%)
[DEBUG]   Read any stdin makefiles into temporary files: 219 微秒 (0.278279%)
[DEBUG]   Manage jobs: 2 微秒 (0.00254136%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 610 微秒 (0.775115%)
[DEBUG]   Read all makefiles and decode: 157 微秒 (0.199497%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 30%] Built target test-c
[ 31%] Linking CXX executable ../../bin/llama-simple
*******************************************************************************
[DEBUG] 总耗时: 390801 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 390114 微秒 (99.8242%)
[DEBUG]   Manifest Parsing and Rebuilding: 367 微秒 (0.0939097%)
[DEBUG]   Initialization: 275 微秒 (0.0703683%)
[DEBUG]   Execution Preparation: 1 微秒 (0.000255885%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 390136 微秒 (99.8298%)
[DEBUG]   Update goal chain: 390108 微秒 (99.8227%)
[DEBUG]   The whole process of reading the makefile: 242 微秒 (0.0619241%)
[DEBUG]   Argument Parsing: 30 微秒 (0.00767654%)
[DEBUG]   Dependency Graph Construction: 23 微秒 (0.00588535%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 389443 微秒 (99.6525%)
[DEBUG]   Iterate over all double-colon entries for this file: 676 微秒 (0.172978%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 228 微秒 (0.0583417%)
[DEBUG]   Free a chain of struct nameseq.: 36 微秒 (0.00921185%)
[DEBUG]   Setup jobservers: 7 微秒 (0.00179119%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 389418 微秒 (99.6461%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 657 微秒 (0.168116%)
[DEBUG]   Read any stdin makefiles into temporary files: 219 微秒 (0.0560388%)
[DEBUG]   Manage jobs: 2 微秒 (0.000511769%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 623 微秒 (0.159416%)
[DEBUG]   Read all makefiles and decode: 159 微秒 (0.0406857%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 31%] Built target llama-simple
[ 32%] Linking CXX executable ../../bin/llama-simple-chat
*******************************************************************************
[DEBUG] 总耗时: 544446 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 543754 微秒 (99.8729%)
[DEBUG]   Manifest Parsing and Rebuilding: 407 微秒 (0.0747549%)
[DEBUG]   Initialization: 239 微秒 (0.0438978%)
[DEBUG]   Execution Preparation: 1 微秒 (0.000183673%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 543772 微秒 (99.8762%)
[DEBUG]   Update goal chain: 543746 微秒 (99.8714%)
[DEBUG]   The whole process of reading the makefile: 286 微秒 (0.0525305%)
[DEBUG]   Argument Parsing: 26 微秒 (0.0047755%)
[DEBUG]   Dependency Graph Construction: 25 微秒 (0.00459182%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 543151 微秒 (99.7621%)
[DEBUG]   Iterate over all double-colon entries for this file: 605 微秒 (0.111122%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 273 微秒 (0.0501427%)
[DEBUG]   Free a chain of struct nameseq.: 36 微秒 (0.00661223%)
[DEBUG]   Setup jobservers: 6 微秒 (0.00110204%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 543125 微秒 (99.7574%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 585 微秒 (0.107449%)
[DEBUG]   Read any stdin makefiles into temporary files: 264 微秒 (0.0484897%)
[DEBUG]   Manage jobs: 2 微秒 (0.000367346%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 552 微秒 (0.101387%)
[DEBUG]   Read all makefiles and decode: 179 微秒 (0.0328775%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 32%] Built target llama-simple-chat
[ 33%] Linking CXX executable ../../bin/llama-quantize-stats
*******************************************************************************
[DEBUG] 总耗时: 3614727 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 3614067 微秒 (99.9817%)
[DEBUG]   Manifest Parsing and Rebuilding: 369 微秒 (0.0102082%)
[DEBUG]   Initialization: 247 微秒 (0.00683316%)
[DEBUG]   Execution Preparation: 1 微秒 (2.76646e-05%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 3614088 微秒 (99.9823%)
[DEBUG]   Update goal chain: 3614059 微秒 (99.9815%)
[DEBUG]   The whole process of reading the makefile: 248 微秒 (0.00686082%)
[DEBUG]   Argument Parsing: 24 微秒 (0.000663951%)
[DEBUG]   Dependency Graph Construction: 23 微秒 (0.000636286%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 3613427 微秒 (99.964%)
[DEBUG]   Iterate over all double-colon entries for this file: 645 微秒 (0.0178437%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 235 微秒 (0.00650118%)
[DEBUG]   Free a chain of struct nameseq.: 35 微秒 (0.000968261%)
[DEBUG]   Setup jobservers: 7 微秒 (0.000193652%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 3613402 微秒 (99.9633%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 628 微秒 (0.0173734%)
[DEBUG]   Read any stdin makefiles into temporary files: 225 微秒 (0.00622454%)
[DEBUG]   Manage jobs: 2 微秒 (5.53292e-05%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 593 微秒 (0.0164051%)
[DEBUG]   Read all makefiles and decode: 165 微秒 (0.00456466%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 33%] Built target llama-quantize-stats
*******************************************************************************
[DEBUG] 总耗时: 8004524 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 8003836 微秒 (99.9914%)
[DEBUG]   Manifest Parsing and Rebuilding: 377 微秒 (0.00470984%)
[DEBUG]   Initialization: 264 微秒 (0.00329813%)
[DEBUG]   Execution Preparation: 1 微秒 (1.24929e-05%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 8003856 微秒 (99.9917%)
[DEBUG]   Update goal chain: 8003827 微秒 (99.9913%)
[DEBUG]   The whole process of reading the makefile: 257 微秒 (0.00321068%)
[DEBUG]   Argument Parsing: 24 微秒 (0.00029983%)
[DEBUG]   Dependency Graph Construction: 24 微秒 (0.00029983%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 8003273 微秒 (99.9844%)
[DEBUG]   Iterate over all double-colon entries for this file: 566 微秒 (0.007071%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 243 微秒 (0.00303578%)
[DEBUG]   Free a chain of struct nameseq.: 36 微秒 (0.000449746%)
[DEBUG]   Setup jobservers: 7 微秒 (8.74505e-05%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 8003249 微秒 (99.9841%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 547 微秒 (0.00683364%)
[DEBUG]   Read any stdin makefiles into temporary files: 234 微秒 (0.00292335%)
[DEBUG]   Manage jobs: 2 微秒 (2.49859e-05%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 513 微秒 (0.00640888%)
[DEBUG]   Read all makefiles and decode: 159 微秒 (0.00198638%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 33%] Built target llava
[DEBUG] starting profiling
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 9571 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
*******************************************************************************
[DEBUG] 总耗时: 9966 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 8901 微秒 (92.9997%)
[DEBUG]   Manifest Parsing and Rebuilding: 357 微秒 (3.73002%)
[DEBUG]   Initialization: 270 微秒 (2.82102%)
[DEBUG]   Execution Preparation: 1 微秒 (0.0104482%)

[DEBUG]   Run Build: 9272 微秒 (93.0363%)
[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Manifest Parsing and Rebuilding: 391 微秒 (3.92334%)
[DEBUG]   Update all the goals: 8926 微秒 (93.2609%)
[DEBUG]   Initialization: 252 微秒 (2.5286%)
[DEBUG]   Update goal chain: 8895 微秒 (92.937%)
[DEBUG]   Execution Preparation: 3 微秒 (0.0301023%)
[DEBUG]   The whole process of reading the makefile: 231 微秒 (2.41354%)
[DEBUG]   Argument Parsing: 30 微秒 (0.313447%)
[DEBUG]   Dependency Graph Construction: 23 微秒 (0.240309%)

[DEBUG] Level 1 前 5 个耗时最多的记录:

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 9298 微秒 (93.2972%)
[DEBUG]   Variable initalzation: 8666 微秒 (90.5444%)
[DEBUG]   Iterate over all double-colon entries for this file: 250 微秒 (2.61206%)
[DEBUG]   Update goal chain: 9267 微秒 (92.9862%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 217 微秒 (2.26727%)
[DEBUG]   Free a chain of struct nameseq.: 36 微秒 (0.376136%)
[DEBUG]   The whole process of reading the makefile: 259 微秒 (2.59884%)
[DEBUG]   Setup jobservers: 7 微秒 (0.0731376%)
[DEBUG]   Argument Parsing: 32 微秒 (0.321092%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Dependency Graph Construction: 25 微秒 (0.250853%)
[DEBUG]   Wait for a child to die: 8657 微秒 (90.4503%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 235 微秒 (2.45533%)
[DEBUG]   Read any stdin makefiles into temporary files: 208 微秒 (2.17323%)

[DEBUG]   Manage jobs: 2 微秒 (0.0208965%)
[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG]   Variable initalzation: 9027 微秒 (90.578%)
[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 211 微秒 (2.20458%)
[DEBUG]   Iterate over all double-colon entries for this file: 261 微秒 (2.6189%)
[DEBUG]   Read all makefiles and decode: 151 微秒 (1.57768%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 245 微秒 (2.45836%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG]   Free a chain of struct nameseq.: 37 微秒 (0.371262%)
[DEBUG]   Setup jobservers: 7 微秒 (0.0702388%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 9016 微秒 (90.4676%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 247 微秒 (2.47843%)
[DEBUG]   Read any stdin makefiles into temporary files: 236 微秒 (2.36805%)
[DEBUG]   Manage jobs: 2 微秒 (0.0200682%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 220 微秒 (2.20751%)
[DEBUG]   Read all makefiles and decode: 171 微秒 (1.71583%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[DEBUG] starting profiling
[ 34%] Linking CXX shared library ../../bin/libllava_shared.so
[ 34%] Linking CXX static library libllava_static.a
*******************************************************************************
[DEBUG] 总耗时: 37607 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 36956 微秒 (98.2689%)
[DEBUG]   Manifest Parsing and Rebuilding: 365 微秒 (0.970564%)
[DEBUG]   Initialization: 238 微秒 (0.632861%)
[DEBUG]   Execution Preparation: 3 微秒 (0.00797724%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 36975 微秒 (98.3195%)
[DEBUG]   Update goal chain: 36949 微秒 (98.2503%)
[DEBUG]   The whole process of reading the makefile: 221 微秒 (0.587657%)
[DEBUG]   Dependency Graph Construction: 46 微秒 (0.122318%)
[DEBUG]   Argument Parsing: 27 微秒 (0.0717951%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 36635 微秒 (97.4154%)
[DEBUG]   Iterate over all double-colon entries for this file: 329 微秒 (0.874837%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 208 微秒 (0.553089%)
[DEBUG]   Free a chain of struct nameseq.: 37 微秒 (0.0983859%)
[DEBUG]   Setup jobservers: 7 微秒 (0.0186136%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 36620 微秒 (97.3755%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 313 微秒 (0.832292%)
[DEBUG]   Read any stdin makefiles into temporary files: 200 微秒 (0.531816%)
[DEBUG]   Manage jobs: 2 微秒 (0.00531816%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 284 微秒 (0.755179%)
[DEBUG]   Read all makefiles and decode: 143 微秒 (0.380248%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 34%] Built target llava_static
*******************************************************************************
[DEBUG] 总耗时: 73521 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 72865 微秒 (99.1077%)
[DEBUG]   Manifest Parsing and Rebuilding: 345 微秒 (0.469254%)
[DEBUG]   Initialization: 266 微秒 (0.361801%)
[DEBUG]   Execution Preparation: 1 微秒 (0.00136016%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 72885 微秒 (99.1349%)
[DEBUG]   Update goal chain: 72859 微秒 (99.0996%)
[DEBUG]   The whole process of reading the makefile: 227 微秒 (0.308755%)
[DEBUG]   Argument Parsing: 27 微秒 (0.0367242%)
[DEBUG]   Dependency Graph Construction: 22 微秒 (0.0299234%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 72584 微秒 (98.7255%)
[DEBUG]   Iterate over all double-colon entries for this file: 291 微秒 (0.395805%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 213 微秒 (0.289713%)
[DEBUG]   Free a chain of struct nameseq.: 36 微秒 (0.0489656%)
[DEBUG]   Setup jobservers: 7 微秒 (0.00952109%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 72571 微秒 (98.7079%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 276 微秒 (0.375403%)
[DEBUG]   Read any stdin makefiles into temporary files: 204 微秒 (0.277472%)
[DEBUG]   Manage jobs: 2 微秒 (0.00272031%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 249 微秒 (0.338679%)
[DEBUG]   Read all makefiles and decode: 146 微秒 (0.198583%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 34%] Built target llava_shared
[ 35%] Linking CXX static library libcommon.a
*******************************************************************************
[DEBUG] 总耗时: 19305922 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 19305037 微秒 (99.9954%)
[DEBUG]   Manifest Parsing and Rebuilding: 485 微秒 (0.00251218%)
[DEBUG]   Initialization: 352 微秒 (0.00182327%)
[DEBUG]   Execution Preparation: 1 微秒 (5.17976e-06%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 19305048 微秒 (99.9955%)
[DEBUG]   Update goal chain: 19305026 微秒 (99.9954%)
[DEBUG]   The whole process of reading the makefile: 347 微秒 (0.00179738%)
[DEBUG]   Argument Parsing: 41 微秒 (0.00021237%)
[DEBUG]   Dependency Graph Construction: 26 微秒 (0.000134674%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 19301863 微秒 (99.979%)
[DEBUG]   Iterate over all double-colon entries for this file: 3119 微秒 (0.0161557%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 330 微秒 (0.00170932%)
[DEBUG]   Free a chain of struct nameseq.: 37 微秒 (0.000191651%)
[DEBUG]   Setup jobservers: 8 微秒 (4.14381e-05%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 19301749 微秒 (99.9784%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 3071 微秒 (0.015907%)
[DEBUG]   Read any stdin makefiles into temporary files: 321 微秒 (0.0016627%)
[DEBUG]   Manage jobs: 2 微秒 (1.03595e-05%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 2987 微秒 (0.0154719%)
[DEBUG]   Read all makefiles and decode: 260 微秒 (0.00134674%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 35%] Built target common
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 13064 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 12328 微秒 (94.3662%)
[DEBUG]   Manifest Parsing and Rebuilding: 419 微秒 (3.20729%)
[DEBUG]   Initialization: 268 微秒 (2.05144%)
[DEBUG]   Execution Preparation: 1 微秒 (0.00765462%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 12347 微秒 (94.5116%)
[DEBUG]   Update goal chain: 12320 微秒 (94.305%)
[DEBUG]   The whole process of reading the makefile: 289 微秒 (2.21219%)
[DEBUG]   Argument Parsing: 34 微秒 (0.260257%)
[DEBUG]   Dependency Graph Construction: 24 微秒 (0.183711%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 12099 微秒 (92.6133%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 274 微秒 (2.09737%)
[DEBUG]   Iterate over all double-colon entries for this file: 236 微秒 (1.80649%)
[DEBUG]   Free a chain of struct nameseq.: 37 微秒 (0.283221%)
[DEBUG]   Setup jobservers: 7 微秒 (0.0535824%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 12087 微秒 (92.5214%)
[DEBUG]   Read any stdin makefiles into temporary files: 265 微秒 (2.02848%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 222 微秒 (1.69933%)
[DEBUG]   Manage jobs: 2 微秒 (0.0153092%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Read all makefiles and decode: 204 微秒 (1.56154%)
[DEBUG]   Save the old value of 'commands_started': 195 微秒 (1.49265%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
*******************************************************************************
[DEBUG] 总耗时: 13009 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 12254 微秒 (94.1963%)
[DEBUG]   Manifest Parsing and Rebuilding: 402 微秒 (3.09017%)
[DEBUG]   Initialization: 301 微秒 (2.31378%)
[DEBUG]   Execution Preparation: 2 微秒 (0.015374%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 12285 微秒 (94.4346%)
[DEBUG]   Update goal chain: 12247 微秒 (94.1425%)
[DEBUG]   The whole process of reading the makefile: 265 微秒 (2.03705%)
[DEBUG]   Argument Parsing: 26 微秒 (0.199862%)
[DEBUG]   Dependency Graph Construction: 24 微秒 (0.184488%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 11982 微秒 (92.1055%)
[DEBUG]   Iterate over all double-colon entries for this file: 289 微秒 (2.22154%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 251 微秒 (1.92943%)
[DEBUG]   Free a chain of struct nameseq.: 35 微秒 (0.269045%)
[DEBUG]   Setup jobservers: 7 微秒 (0.0538089%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 11967 微秒 (91.9902%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 274 微秒 (2.10623%)
[DEBUG]   Read any stdin makefiles into temporary files: 242 微秒 (1.86025%)
[DEBUG]   Manage jobs: 2 微秒 (0.015374%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 241 微秒 (1.85256%)
[DEBUG]   Read all makefiles and decode: 181 微秒 (1.39134%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
*******************************************************************************
[DEBUG] 总耗时: 12809 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 12111 微秒 (94.5507%)
[DEBUG]   Manifest Parsing and Rebuilding: 383 微秒 (2.99009%)
[DEBUG]   Initialization: 263 微秒 (2.05324%)
[DEBUG]   Execution Preparation: 1 微秒 (0.00780701%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 12131 微秒 (94.7068%)
[DEBUG]   Update goal chain: 12104 微秒 (94.4961%)
[DEBUG]   The whole process of reading the makefile: 265 微秒 (2.06886%)
[DEBUG]   Argument Parsing: 25 微秒 (0.195175%)
[DEBUG]   Dependency Graph Construction: 23 微秒 (0.179561%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 11623 微秒 (90.7409%)
[DEBUG]   Iterate over all double-colon entries for this file: 495 微秒 (3.86447%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 251 微秒 (1.95956%)
[DEBUG]   Free a chain of struct nameseq.: 35 微秒 (0.273245%)
[DEBUG]   Setup jobservers: 7 微秒 (0.0546491%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 11610 微秒 (90.6394%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 480 微秒 (3.74737%)
[DEBUG]   Read any stdin makefiles into temporary files: 241 微秒 (1.88149%)
[DEBUG]   Manage jobs: 2 微秒 (0.015614%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 452 微秒 (3.52877%)
[DEBUG]   Read all makefiles and decode: 177 微秒 (1.38184%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
*******************************************************************************
[DEBUG] 总耗时: 13559 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 12842 微秒 (94.712%)
[DEBUG]   Manifest Parsing and Rebuilding: 409 微秒 (3.01645%)
[DEBUG]   Initialization: 256 微秒 (1.88804%)
[DEBUG]   Execution Preparation: 1 微秒 (0.00737518%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 12848 微秒 (94.7563%)
[DEBUG]   Update goal chain: 12822 微秒 (94.5645%)
[DEBUG]   The whole process of reading the makefile: 289 微秒 (2.13143%)
[DEBUG]   Argument Parsing: 28 微秒 (0.206505%)
[DEBUG]   Dependency Graph Construction: 23 微秒 (0.169629%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 12535 微秒 (92.4478%)
[DEBUG]   Iterate over all double-colon entries for this file: 302 微秒 (2.2273%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 274 微秒 (2.0208%)
[DEBUG]   Free a chain of struct nameseq.: 36 微秒 (0.265506%)
[DEBUG]   Setup jobservers: 8 微秒 (0.0590014%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 12521 微秒 (92.3446%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 286 微秒 (2.1093%)
[DEBUG]   Read any stdin makefiles into temporary files: 266 微秒 (1.9618%)
[DEBUG]   Manage jobs: 2 微秒 (0.0147504%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 259 微秒 (1.91017%)
[DEBUG]   Read all makefiles and decode: 178 微秒 (1.31278%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
*******************************************************************************
[DEBUG] 总耗时: 12797 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
*******************************************************************************
[DEBUG]   Run Build: 12050 微秒 (94.1627%)
[DEBUG]   Manifest Parsing and Rebuilding: 436 微秒 (3.40705%)
[DEBUG] 总耗时: 14163 微秒
[DEBUG]   Initialization: 260 微秒 (2.03173%)
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG]   Execution Preparation: 1 微秒 (0.00781433%)
[DEBUG] finish profiling


[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG] Level 0 前 5 个耗时最多的记录:
*******************************************************************************
[DEBUG]   Update all the goals: 12068 微秒 (94.3034%)
[DEBUG]   Update goal chain: 12043 微秒 (94.108%)
[DEBUG] 总耗时: 12324 微秒
[DEBUG]   The whole process of reading the makefile: 313 微秒 (2.44589%)
[DEBUG]   Argument Parsing: 29 微秒 (0.226616%)
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling
[DEBUG]   Dependency Graph Construction: 24 微秒 (0.187544%)


[DEBUG]   Run Build: 13419 微秒 (94.7469%)
[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Manifest Parsing and Rebuilding: 384 微秒 (2.71129%)
[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 11736 微秒 (91.709%)
[DEBUG]   Initialization: 272 微秒 (1.9205%)
[DEBUG]   Iterate over all double-colon entries for this file: 321 微秒 (2.5084%)
[DEBUG]   Execution Preparation: 27 微秒 (0.190638%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 300 微秒 (2.3443%)
[DEBUG]   Free a chain of struct nameseq.: 35 微秒 (0.273502%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Setup jobservers: 7 微秒 (0.0547003%)
[DEBUG]   Update all the goals: 13441 微秒 (94.9022%)
[DEBUG]   Update goal chain: 13412 微秒 (94.6975%)

[DEBUG]   Run Build: 11585 微秒 (94.0036%)
[DEBUG]   The whole process of reading the makefile: 252 微秒 (1.77928%)
[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Manifest Parsing and Rebuilding: 410 微秒 (3.32684%)
[DEBUG]   Argument Parsing: 34 微秒 (0.240062%)
[DEBUG]   Wait for a child to die: 11722 微秒 (91.5996%)
[DEBUG]   Initialization: 266 微秒 (2.15839%)
[DEBUG]   Dependency Graph Construction: 24 微秒 (0.169456%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 305 微秒 (2.38337%)
[DEBUG]   Execution Preparation: 1 微秒 (0.00811425%)
[DEBUG]   Read any stdin makefiles into temporary files: 291 微秒 (2.27397%)

[DEBUG]   Manage jobs: 2 微秒 (0.0156287%)
[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)
[DEBUG]   Variable initalzation: 13151 微秒 (92.8546%)

[DEBUG]   Iterate over all double-colon entries for this file: 279 微秒 (1.96992%)
[DEBUG] Level 1 前 5 个耗时最多的记录:

[DEBUG]   Set varibles and Read makefiles into temporary files: 237 微秒 (1.67337%)
[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 11606 微秒 (94.174%)
[DEBUG]   Free a chain of struct nameseq.: 37 微秒 (0.261244%)
[DEBUG]   Save the old value of 'commands_started': 274 微秒 (2.14113%)
[DEBUG]   Update goal chain: 11578 微秒 (93.9468%)
[DEBUG]   Setup jobservers: 8 微秒 (0.0564852%)
[DEBUG]   Read all makefiles and decode: 199 微秒 (1.55505%)
[DEBUG]   The whole process of reading the makefile: 284 微秒 (2.30445%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Argument Parsing: 30 微秒 (0.243427%)

[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG]   Dependency Graph Construction: 23 微秒 (0.186628%)
[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 13138 微秒 (92.7628%)

[DEBUG]   Ensuring that build targets are checked and updated properly: 264 微秒 (1.86401%)
[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Read any stdin makefiles into temporary files: 228 微秒 (1.60983%)
[DEBUG]   Variable initalzation: 11287 微秒 (91.5855%)
[DEBUG]   Manage jobs: 2 微秒 (0.0141213%)
[DEBUG]   Iterate over all double-colon entries for this file: 309 微秒 (2.5073%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 270 微秒 (2.19085%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)
[DEBUG]   Free a chain of struct nameseq.: 47 微秒 (0.38137%)

[DEBUG]   Setup jobservers: 7 微秒 (0.0567997%)
[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 238 微秒 (1.68043%)

[DEBUG]   Read all makefiles and decode: 163 微秒 (1.15089%)
[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Wait for a child to die: 11273 微秒 (91.4719%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 291 微秒 (2.36125%)
[DEBUG]   Read any stdin makefiles into temporary files: 261 微秒 (2.11782%)
[DEBUG]   Manage jobs: 3 微秒 (0.0243427%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 262 微秒 (2.12593%)
[DEBUG]   Read all makefiles and decode: 199 微秒 (1.61474%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
*******************************************************************************
[DEBUG] 总耗时: 13094 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 12240 微秒 (93.4779%)
[DEBUG]   Manifest Parsing and Rebuilding: 475 微秒 (3.62762%)
[DEBUG]   Initialization: 318 微秒 (2.42859%)
[DEBUG]   Execution Preparation: 3 微秒 (0.0229113%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 12244 微秒 (93.5085%)
[DEBUG]   Update goal chain: 12232 微秒 (93.4168%)
[DEBUG]   The whole process of reading the makefile: 317 微秒 (2.42096%)
[DEBUG]   Argument Parsing: 30 微秒 (0.229113%)
[DEBUG]   Dependency Graph Construction: 25 微秒 (0.190927%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 11879 微秒 (90.7209%)
[DEBUG]   Iterate over all double-colon entries for this file: 351 微秒 (2.68062%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 303 微秒 (2.31404%)
[DEBUG]   Free a chain of struct nameseq.: 52 微秒 (0.397128%)
[DEBUG]   Setup jobservers: 7 微秒 (0.0534596%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 11862 微秒 (90.5911%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 331 微秒 (2.52788%)
[DEBUG]   Read any stdin makefiles into temporary files: 293 微秒 (2.23767%)
[DEBUG]   Manage jobs: 3 微秒 (0.0229113%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 292 微秒 (2.23003%)
[DEBUG]   Read all makefiles and decode: 222 微秒 (1.69543%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
*******************************************************************************
[DEBUG] 总耗时: 13878 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 13091 微秒 (94.3292%)
[DEBUG]   Manifest Parsing and Rebuilding: 473 微秒 (3.40827%)
[DEBUG]   Initialization: 261 微秒 (1.88067%)
[DEBUG]   Execution Preparation: 3 微秒 (0.0216169%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 13135 微秒 (94.6462%)
[DEBUG]   Update goal chain: 13084 微秒 (94.2787%)
[DEBUG]   The whole process of reading the makefile: 304 微秒 (2.19052%)
[DEBUG]   Dependency Graph Construction: 33 微秒 (0.237786%)
[DEBUG]   Argument Parsing: 28 微秒 (0.201758%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 12765 微秒 (91.9801%)
[DEBUG]   Iterate over all double-colon entries for this file: 357 微秒 (2.57242%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 290 微秒 (2.08964%)
[DEBUG]   Free a chain of struct nameseq.: 42 微秒 (0.302637%)
[DEBUG]   Setup jobservers: 7 微秒 (0.0504395%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 12749 微秒 (91.8648%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 340 微秒 (2.44992%)
[DEBUG]   Read any stdin makefiles into temporary files: 277 微秒 (1.99596%)
[DEBUG]   Manage jobs: 4 微秒 (0.0288226%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)
*******************************************************************************

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG] 总耗时: 12920 微秒
[DEBUG]   Save the old value of 'commands_started': 291 微秒 (2.09684%)
[DEBUG]   Read all makefiles and decode: 214 微秒 (1.54201%)
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 12024 微秒 (93.065%)
[DEBUG]   Manifest Parsing and Rebuilding: 531 微秒 (4.10991%)
[DEBUG]   Initialization: 306 微秒 (2.36842%)
[DEBUG]   Execution Preparation: 1 微秒 (0.00773994%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 12045 微秒 (93.2276%)
[DEBUG]   Update goal chain: 12018 微秒 (93.0186%)
[DEBUG]   The whole process of reading the makefile: 408 微秒 (3.15789%)
[DEBUG]   Argument Parsing: 29 微秒 (0.224458%)
[DEBUG]   Dependency Graph Construction: 23 微秒 (0.178019%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 11753 微秒 (90.9675%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 395 微秒 (3.05728%)
[DEBUG]   Iterate over all double-colon entries for this file: 280 微秒 (2.16718%)
[DEBUG]   Free a chain of struct nameseq.: 72 微秒 (0.557276%)
[DEBUG]   Setup jobservers: 7 微秒 (0.0541796%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 11740 微秒 (90.8669%)
[DEBUG]   Read any stdin makefiles into temporary files: 385 微秒 (2.97988%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 264 微秒 (2.04334%)
[DEBUG]   Manage jobs: 3 微秒 (0.0232198%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Read all makefiles and decode: 325 微秒 (2.51548%)
[DEBUG]   Save the old value of 'commands_started': 235 微秒 (1.81889%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
*******************************************************************************
[DEBUG] 总耗时: 12578 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 11795 微秒 (93.7748%)
[DEBUG]   Manifest Parsing and Rebuilding: 427 微秒 (3.39482%)
[DEBUG]   Initialization: 280 微秒 (2.22611%)
[DEBUG]   Execution Preparation: 1 微秒 (0.00795039%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 11816 微秒 (93.9418%)
[DEBUG]   Update goal chain: 11789 微秒 (93.7271%)
[DEBUG]   The whole process of reading the makefile: 304 微秒 (2.41692%)
[DEBUG]   Argument Parsing: 28 微秒 (0.222611%)
[DEBUG]   Dependency Graph Construction: 24 微秒 (0.190809%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 11493 微秒 (91.3738%)
[DEBUG]   Iterate over all double-colon entries for this file: 311 微秒 (2.47257%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 290 微秒 (2.30561%)
[DEBUG]   Free a chain of struct nameseq.: 51 微秒 (0.40547%)
[DEBUG]   Setup jobservers: 7 微秒 (0.0556527%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 11479 微秒 (91.2625%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 296 微秒 (2.35332%)
[DEBUG]   Read any stdin makefiles into temporary files: 280 微秒 (2.22611%)
[DEBUG]   Manage jobs: 3 微秒 (0.0238512%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 265 微秒 (2.10685%)
[DEBUG]   Read all makefiles and decode: 217 微秒 (1.72523%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
*******************************************************************************
[DEBUG] 总耗时: 13090 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 12362 微秒 (94.4385%)
[DEBUG]   Manifest Parsing and Rebuilding: 417 微秒 (3.18564%)
[DEBUG]   Initialization: 258 微秒 (1.97097%)
[DEBUG]   Execution Preparation: 1 微秒 (0.00763942%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 12382 微秒 (94.5913%)
[DEBUG]   Update goal chain: 12355 微秒 (94.385%)
[DEBUG]   The whole process of reading the makefile: 297 微秒 (2.26891%)
[DEBUG]   Argument Parsing: 27 微秒 (0.206264%)
[DEBUG]   Dependency Graph Construction: 23 微秒 (0.175707%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 12077 微秒 (92.2613%)
[DEBUG]   Iterate over all double-colon entries for this file: 292 微秒 (2.23071%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 284 微秒 (2.1696%)
[DEBUG]   Free a chain of struct nameseq.: 36 微秒 (0.275019%)
[DEBUG]   Setup jobservers: 7 微秒 (0.0534759%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 12064 微秒 (92.162%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 276 微秒 (2.10848%)
[DEBUG]   Read any stdin makefiles into temporary files: 275 微秒 (2.10084%)
[DEBUG]   Manage jobs: 2 微秒 (0.0152788%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 248 微秒 (1.89458%)
[DEBUG]   Read all makefiles and decode: 179 微秒 (1.36746%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
*******************************************************************************
[DEBUG] 总耗时: 12848 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 12129 微秒 (94.4038%)
[DEBUG]   Manifest Parsing and Rebuilding: 380 微秒 (2.95766%)
[DEBUG]   Initialization: 289 微秒 (2.24938%)
[DEBUG]   Execution Preparation: 1 微秒 (0.00778331%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 12152 微秒 (94.5828%)
[DEBUG]   Update goal chain: 12123 微秒 (94.3571%)
[DEBUG]   The whole process of reading the makefile: 257 微秒 (2.00031%)
[DEBUG]   Argument Parsing: 28 微秒 (0.217933%)
[DEBUG]   Dependency Graph Construction: 23 微秒 (0.179016%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 11854 微秒 (92.2634%)
[DEBUG]   Iterate over all double-colon entries for this file: 287 微秒 (2.23381%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 242 微秒 (1.88356%)
[DEBUG]   Free a chain of struct nameseq.: 37 微秒 (0.287983%)
[DEBUG]   Setup jobservers: 7 微秒 (0.0544832%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 11841 微秒 (92.1622%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 272 微秒 (2.11706%)
[DEBUG]   Read any stdin makefiles into temporary files: 233 微秒 (1.81351%)
[DEBUG]   Manage jobs: 2 微秒 (0.0155666%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 242 微秒 (1.88356%)
[DEBUG]   Read all makefiles and decode: 172 微秒 (1.33873%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 12884 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 11908 微秒 (92.4247%)
[DEBUG]   Manifest Parsing and Rebuilding: 587 微秒 (4.55604%)
[DEBUG]   Initialization: 326 微秒 (2.53027%)
[DEBUG]   Execution Preparation: 2 微秒 (0.0155231%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 11945 微秒 (92.7119%)
[DEBUG]   Update goal chain: 11901 微秒 (92.3704%)
[DEBUG]   The whole process of reading the makefile: 412 微秒 (3.19776%)
[DEBUG]   Dependency Graph Construction: 37 微秒 (0.287178%)
[DEBUG]   Argument Parsing: 35 微秒 (0.271655%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 11601 微秒 (90.0419%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 393 微秒 (3.05029%)
[DEBUG]   Iterate over all double-colon entries for this file: 331 微秒 (2.56908%)
[DEBUG]   Free a chain of struct nameseq.: 86 微秒 (0.667495%)
[DEBUG]   Setup jobservers: 10 微秒 (0.0776156%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 11585 微秒 (89.9177%)
[DEBUG]   Read any stdin makefiles into temporary files: 380 微秒 (2.94939%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 309 微秒 (2.39832%)
[DEBUG]   Manage jobs: 3 微秒 (0.0232847%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Read all makefiles and decode: 293 微秒 (2.27414%)
[DEBUG]   Save the old value of 'commands_started': 272 微秒 (2.11115%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 13130 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG] starting profiling
[DEBUG]   Run Build: 12362 微秒 (94.1508%)
[DEBUG]   Manifest Parsing and Rebuilding: 418 微秒 (3.18355%)
[DEBUG]   Initialization: 300 微秒 (2.28484%)
[DEBUG]   Execution Preparation: 2 微秒 (0.0152323%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 12381 微秒 (94.2955%)
[DEBUG]   Update goal chain: 12354 微秒 (94.0899%)
[DEBUG]   The whole process of reading the makefile: 296 微秒 (2.25438%)
[DEBUG]   Argument Parsing: 29 微秒 (0.220868%)
[DEBUG]   Dependency Graph Construction: 23 微秒 (0.175171%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 12092 微秒 (92.0944%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 282 微秒 (2.14775%)
[DEBUG]   Iterate over all double-colon entries for this file: 277 微秒 (2.10967%)
[DEBUG]   Free a chain of struct nameseq.: 54 微秒 (0.411272%)
[DEBUG]   Setup jobservers: 7 微秒 (0.053313%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 12077 微秒 (91.9802%)
[DEBUG]   Read any stdin makefiles into temporary files: 272 微秒 (2.07159%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 260 微秒 (1.9802%)
[DEBUG]   Manage jobs: 3 微秒 (0.0228484%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 232 微秒 (1.76695%)
[DEBUG]   Read all makefiles and decode: 212 微秒 (1.61462%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 13182 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 12217 微秒 (92.6794%)
[DEBUG]   Manifest Parsing and Rebuilding: 570 微秒 (4.32408%)
[DEBUG]   Initialization: 347 微秒 (2.63238%)
[DEBUG]   Execution Preparation: 2 微秒 (0.0151722%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 12253 微秒 (92.9525%)
[DEBUG]   Update goal chain: 12210 微秒 (92.6263%)
[DEBUG]   The whole process of reading the makefile: 406 微秒 (3.07996%)
[DEBUG]   Dependency Graph Construction: 34 微秒 (0.257927%)
[DEBUG]   Argument Parsing: 30 微秒 (0.227583%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 11943 微秒 (90.6008%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 387 微秒 (2.93582%)
[DEBUG]   Iterate over all double-colon entries for this file: 297 微秒 (2.25307%)
[DEBUG]   Free a chain of struct nameseq.: 55 微秒 (0.417236%)
[DEBUG]   Setup jobservers: 9 微秒 (0.0682749%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 11927 微秒 (90.4794%)
[DEBUG]   Read any stdin makefiles into temporary files: 374 微秒 (2.8372%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 279 微秒 (2.11652%)
[DEBUG]   Manage jobs: 3 微秒 (0.0227583%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Read all makefiles and decode: 283 微秒 (2.14687%)
[DEBUG]   Save the old value of 'commands_started': 239 微秒 (1.81308%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
*******************************************************************************
*******************************************************************************
[DEBUG] 总耗时: 13056 微秒
[DEBUG] 总耗时: 12152 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling


[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG] Level 0 前 5 个耗时最多的记录:
*******************************************************************************
[DEBUG] 总耗时: 13381 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling
[DEBUG]   Run Build: 12236 微秒 (93.7194%)

[DEBUG]   Manifest Parsing and Rebuilding: 471 微秒 (3.60754%)
[DEBUG]   Run Build: 11156 微秒 (91.8038%)
[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Initialization: 300 微秒 (2.29779%)
[DEBUG]   Manifest Parsing and Rebuilding: 600 微秒 (4.93746%)
[DEBUG]   Execution Preparation: 1 微秒 (0.00765931%)
[DEBUG]   Initialization: 338 微秒 (2.78144%)
[DEBUG]   Execution Preparation: 3 微秒 (0.0246873%)

[DEBUG] Level 1 前 5 个耗时最多的记录:

[DEBUG]   Update all the goals: 12257 微秒 (93.8802%)
[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update goal chain: 12229 微秒 (93.6657%)
[DEBUG]   Update all the goals: 11192 微秒 (92.1001%)
[DEBUG]   The whole process of reading the makefile: 330 微秒 (2.52757%)
[DEBUG]   Run Build: 12599 微秒 (94.1559%)
[DEBUG] starting profiling
[DEBUG]   Update goal chain: 11149 微秒 (91.7462%)
[DEBUG]   Dependency Graph Construction: 33 微秒 (0.252757%)
[DEBUG]   Manifest Parsing and Rebuilding: 440 微秒 (3.28824%)
[DEBUG]   The whole process of reading the makefile: 431 微秒 (3.54674%)
[DEBUG]   Argument Parsing: 24 微秒 (0.183824%)
[DEBUG]   Initialization: 279 微秒 (2.08505%)
[DEBUG]   Dependency Graph Construction: 36 微秒 (0.296248%)
[DEBUG]   Execution Preparation: 2 微秒 (0.0149466%)

[DEBUG]   Argument Parsing: 32 微秒 (0.263331%)
[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 11964 微秒 (91.636%)


[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Iterate over all double-colon entries for this file: 280 微秒 (2.14461%)
[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Set varibles and Read makefiles into temporary files: 277 微秒 (2.12163%)
[DEBUG]   Update all the goals: 12659 微秒 (94.6043%)
[DEBUG]   Variable initalzation: 10874 微秒 (89.4832%)
[DEBUG]   Setup jobservers: 46 微秒 (0.352328%)
[DEBUG]   Update goal chain: 12592 微秒 (94.1036%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 413 微秒 (3.39862%)
[DEBUG]   Free a chain of struct nameseq.: 39 微秒 (0.298713%)
[DEBUG]   The whole process of reading the makefile: 277 微秒 (2.0701%)
[DEBUG]   Iterate over all double-colon entries for this file: 304 微秒 (2.50165%)
[DEBUG]   Argument Parsing: 30 微秒 (0.224198%)
[DEBUG]   Free a chain of struct nameseq.: 56 微秒 (0.460829%)

[DEBUG]   Dependency Graph Construction: 22 微秒 (0.164412%)
[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Setup jobservers: 8 微秒 (0.0658328%)
[DEBUG]   Wait for a child to die: 11951 微秒 (91.5365%)

[DEBUG] Level 2 前 5 个耗时最多的记录:

[DEBUG]   Ensuring that build targets are checked and updated properly: 264 微秒 (2.02206%)
[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 12347 微秒 (92.2726%)
[DEBUG]   Read any stdin makefiles into temporary files: 264 微秒 (2.02206%)
[DEBUG]   Iterate over all double-colon entries for this file: 300 微秒 (2.24198%)
[DEBUG]   Wait for a child to die: 10858 微秒 (89.3515%)
[DEBUG]   Manage jobs: 4 微秒 (0.0306373%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 260 微秒 (1.94305%)
[DEBUG]   Read any stdin makefiles into temporary files: 400 微秒 (3.29164%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)
[DEBUG]   Free a chain of struct nameseq.: 38 微秒 (0.283985%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 286 微秒 (2.35352%)
[DEBUG]   Setup jobservers: 10 微秒 (0.0747328%)
[DEBUG]   Manage jobs: 4 微秒 (0.0329164%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG]   Save the old value of 'commands_started': 236 微秒 (1.8076%)
[DEBUG] Level 3 前 5 个耗时最多的记录:

[DEBUG]   Read all makefiles and decode: 194 微秒 (1.48591%)
[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 12299 微秒 (91.9139%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Read all makefiles and decode: 273 微秒 (2.24654%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 284 微秒 (2.12241%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG]   Save the old value of 'commands_started': 247 微秒 (2.03259%)
[DEBUG]   Read any stdin makefiles into temporary files: 251 微秒 (1.87579%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Manage jobs: 2 微秒 (0.0149466%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 256 微秒 (1.91316%)
[DEBUG]   Read all makefiles and decode: 187 微秒 (1.3975%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 13330 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 12328 微秒 (92.4831%)
[DEBUG]   Manifest Parsing and Rebuilding: 610 微秒 (4.57614%)
[DEBUG]   Initialization: 329 微秒 (2.46812%)
[DEBUG]   Execution Preparation: 3 微秒 (0.0225056%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 12380 微秒 (92.8732%)
[DEBUG]   Update goal chain: 12322 微秒 (92.4381%)
[DEBUG]   The whole process of reading the makefile: 419 微秒 (3.14329%)
[DEBUG]   Argument Parsing: 40 微秒 (0.300075%)
[DEBUG]   Dependency Graph Construction: 35 微秒 (0.262566%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 12052 微秒 (90.4126%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 399 微秒 (2.99325%)
[DEBUG]   Iterate over all double-colon entries for this file: 315 微秒 (2.36309%)
[DEBUG]   Free a chain of struct nameseq.: 56 微秒 (0.420105%)
[DEBUG]   Setup jobservers: 11 微秒 (0.0825206%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 12035 微秒 (90.2851%)
[DEBUG]   Read any stdin makefiles into temporary files: 385 微秒 (2.88822%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 282 微秒 (2.11553%)
[DEBUG]   Manage jobs: 4 微秒 (0.0300075%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Read all makefiles and decode: 294 微秒 (2.20555%)
[DEBUG]   Save the old value of 'commands_started': 246 微秒 (1.84546%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 13017 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 12012 微秒 (92.2793%)
[DEBUG]   Manifest Parsing and Rebuilding: 573 微秒 (4.40194%)
[DEBUG]   Initialization: 371 微秒 (2.85012%)
[DEBUG]   Execution Preparation: 2 微秒 (0.0153645%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 12047 微秒 (92.5482%)
[DEBUG]   Update goal chain: 12005 微秒 (92.2256%)
[DEBUG]   The whole process of reading the makefile: 383 微秒 (2.94231%)
[DEBUG]   Argument Parsing: 53 微秒 (0.40716%)
[DEBUG]   Dependency Graph Construction: 34 微秒 (0.261197%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 11709 微秒 (89.9516%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 363 微秒 (2.78866%)
[DEBUG]   Iterate over all double-colon entries for this file: 323 微秒 (2.48137%)
[DEBUG]   Free a chain of struct nameseq.: 56 微秒 (0.430207%)
[DEBUG]   Setup jobservers: 10 微秒 (0.0768226%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 11693 微秒 (89.8287%)
[DEBUG]   Read any stdin makefiles into temporary files: 349 微秒 (2.68111%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 304 微秒 (2.33541%)
[DEBUG]   Manage jobs: 4 微秒 (0.030729%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 267 微秒 (2.05116%)
[DEBUG]   Read all makefiles and decode: 260 微秒 (1.99739%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 13326 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

*******************************************************************************
[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG] 总耗时: 13139 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 12383 微秒 (92.9236%)
[DEBUG]   Manifest Parsing and Rebuilding: 551 微秒 (4.13477%)
[DEBUG]   Initialization: 331 微秒 (2.48387%)
[DEBUG]   Execution Preparation: 2 微秒 (0.0150083%)
[DEBUG]   Run Build: 12142 微秒 (92.4119%)

[DEBUG]   Manifest Parsing and Rebuilding: 590 微秒 (4.49045%)
[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Initialization: 342 微秒 (2.60294%)
[DEBUG]   Update all the goals: 12419 微秒 (93.1938%)
[DEBUG]   Execution Preparation: 3 微秒 (0.0228328%)
[DEBUG]   Update goal chain: 12377 微秒 (92.8786%)
[DEBUG]   The whole process of reading the makefile: 386 微秒 (2.89659%)
[DEBUG]   Argument Parsing: 37 微秒 (0.277653%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Dependency Graph Construction: 32 微秒 (0.240132%)
[DEBUG]   Update all the goals: 12176 微秒 (92.6707%)

[DEBUG]   Update goal chain: 12134 微秒 (92.351%)
[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   The whole process of reading the makefile: 417 微秒 (3.17376%)
[DEBUG]   Variable initalzation: 12096 微秒 (90.7699%)
[DEBUG]   Dependency Graph Construction: 38 微秒 (0.289215%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 367 微秒 (2.75401%)
[DEBUG]   Argument Parsing: 33 微秒 (0.251161%)
[DEBUG]   Iterate over all double-colon entries for this file: 311 微秒 (2.33378%)

[DEBUG]   Free a chain of struct nameseq.: 54 微秒 (0.405223%)
[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Setup jobservers: 9 微秒 (0.0675371%)
[DEBUG]   Variable initalzation: 11838 微秒 (90.0982%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 397 微秒 (3.02154%)
[DEBUG]   Iterate over all double-colon entries for this file: 324 微秒 (2.46594%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Free a chain of struct nameseq.: 57 微秒 (0.433823%)
[DEBUG]   Setup jobservers: 10 微秒 (0.0761093%)
[DEBUG]   Wait for a child to die: 12083 微秒 (90.6724%)
[DEBUG]   Read any stdin makefiles into temporary files: 355 微秒 (2.66397%)

[DEBUG]   Ensuring that build targets are checked and updated properly: 291 微秒 (2.1837%)
[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Manage jobs: 3 微秒 (0.0225124%)
[DEBUG]   Wait for a child to die: 11822 微秒 (89.9764%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)
[DEBUG]   Read any stdin makefiles into temporary files: 383 微秒 (2.91499%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 305 微秒 (2.32133%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Manage jobs: 4 微秒 (0.0304437%)
[DEBUG]   Read all makefiles and decode: 269 微秒 (2.01861%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)
[DEBUG]   Save the old value of 'commands_started': 257 微秒 (1.92856%)

[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG]   Save the old value of 'commands_started': 267 微秒 (2.03212%)
[DEBUG]   Read all makefiles and decode: 253 微秒 (1.92557%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
*******************************************************************************
[DEBUG] 总耗时: 12925 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 11948 微秒 (92.441%)
[DEBUG]   Manifest Parsing and Rebuilding: 543 微秒 (4.20116%)
[DEBUG]   Initialization: 376 微秒 (2.90909%)
[DEBUG]   Execution Preparation: 2 微秒 (0.0154739%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 11984 微秒 (92.7195%)
[DEBUG]   Update goal chain: 11940 微秒 (92.3791%)
[DEBUG]   The whole process of reading the makefile: 363 微秒 (2.80851%)
[DEBUG]   Argument Parsing: 37 微秒 (0.286267%)
[DEBUG]   Dependency Graph Construction: 36 微秒 (0.27853%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 11632 微秒 (89.9961%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 343 微秒 (2.65377%)
[DEBUG]   Iterate over all double-colon entries for this file: 337 微秒 (2.60735%)
*******************************************************************************
[DEBUG]   Free a chain of struct nameseq.: 55 微秒 (0.425532%)
[DEBUG]   Setup jobservers: 9 微秒 (0.0696325%)
[DEBUG] 总耗时: 12734 微秒

[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling
[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 11616 微秒 (89.8723%)

[DEBUG]   Read any stdin makefiles into temporary files: 331 微秒 (2.56093%)
[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Ensuring that build targets are checked and updated properly: 318 微秒 (2.46035%)
[DEBUG]   Manage jobs: 3 微秒 (0.0232108%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 281 微秒 (2.17408%)
[DEBUG]   Read all makefiles and decode: 241 微秒 (1.8646%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Run Build: 11863 微秒 (93.16%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG]   Manifest Parsing and Rebuilding: 478 微秒 (3.75373%)
[DEBUG]   Initialization: 339 微秒 (2.66216%)
[DEBUG]   Execution Preparation: 2 微秒 (0.015706%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 11898 微秒 (93.4349%)
[DEBUG]   Update goal chain: 11856 微秒 (93.1051%)
[DEBUG]   The whole process of reading the makefile: 302 微秒 (2.3716%)
[DEBUG]   Argument Parsing: 39 微秒 (0.306267%)
[DEBUG]   Dependency Graph Construction: 35 微秒 (0.274855%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 10789 微秒 (84.7259%)
[DEBUG]   Iterate over all double-colon entries for this file: 1096 微秒 (8.60688%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 282 微秒 (2.21454%)
[DEBUG]   Free a chain of struct nameseq.: 47 微秒 (0.369091%)
[DEBUG]   Setup jobservers: 10 微秒 (0.0785299%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 10773 微秒 (84.6003%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 1077 微秒 (8.45767%)
[DEBUG]   Read any stdin makefiles into temporary files: 269 微秒 (2.11245%)
[DEBUG]   Manage jobs: 3 微秒 (0.023559%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 1039 微秒 (8.15926%)
[DEBUG]   Read all makefiles and decode: 207 微秒 (1.62557%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 12511 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 11565 微秒 (92.4387%)
[DEBUG]   Manifest Parsing and Rebuilding: 529 微秒 (4.22828%)
[DEBUG]   Initialization: 363 微秒 (2.90145%)
[DEBUG]   Execution Preparation: 3 微秒 (0.0239789%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 11603 微秒 (92.7424%)
[DEBUG]   Update goal chain: 11559 微秒 (92.3907%)
[DEBUG]   The whole process of reading the makefile: 364 微秒 (2.90944%)
[DEBUG]   Dependency Graph Construction: 35 微秒 (0.279754%)
[DEBUG]   Argument Parsing: 31 微秒 (0.247782%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 11239 微秒 (89.8329%)
[DEBUG]   Iterate over all double-colon entries for this file: 351 微秒 (2.80553%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 346 微秒 (2.76557%)
[DEBUG]   Free a chain of struct nameseq.: 57 微秒 (0.455599%)
[DEBUG]   Setup jobservers: 9 微秒 (0.0719367%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 11223 微秒 (89.7051%)
[DEBUG]   Read any stdin makefiles into temporary files: 333 微秒 (2.66166%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 332 微秒 (2.65366%)
[DEBUG]   Manage jobs: 3 微秒 (0.0239789%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 295 微秒 (2.35793%)
[DEBUG]   Read all makefiles and decode: 240 微秒 (1.91831%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
*******************************************************************************
[DEBUG] 总耗时: 13396 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 12419 微秒 (92.7068%)
[DEBUG]   Manifest Parsing and Rebuilding: 540 微秒 (4.03105%)
[DEBUG]   Initialization: 382 微秒 (2.8516%)
[DEBUG]   Execution Preparation: 2 微秒 (0.0149298%)
*******************************************************************************

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 12453 微秒 (92.9606%)
[DEBUG] 总耗时: 13615 微秒
[DEBUG]   Update goal chain: 12411 微秒 (92.6471%)
[DEBUG] starting profiling
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling
[DEBUG]   The whole process of reading the makefile: 370 微秒 (2.76202%)
[DEBUG]   Argument Parsing: 34 微秒 (0.253807%)

[DEBUG]   Dependency Graph Construction: 34 微秒 (0.253807%)
[DEBUG] Level 0 前 5 个耗时最多的记录:

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 12095 微秒 (90.2881%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 351 微秒 (2.62019%)
[DEBUG]   Iterate over all double-colon entries for this file: 344 微秒 (2.56793%)
[DEBUG]   Free a chain of struct nameseq.: 55 微秒 (0.41057%)
[DEBUG]   Setup jobservers: 9 微秒 (0.0671842%)
[DEBUG]   Run Build: 12647 微秒 (92.8902%)

[DEBUG]   Manifest Parsing and Rebuilding: 556 微秒 (4.08373%)
[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Initialization: 344 微秒 (2.52663%)
[DEBUG]   Execution Preparation: 2 微秒 (0.0146897%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 12682 微秒 (93.1473%)
[DEBUG]   Update goal chain: 12640 微秒 (92.8388%)
[DEBUG]   The whole process of reading the makefile: 389 微秒 (2.85714%)
[DEBUG]   Argument Parsing: 34 微秒 (0.249725%)
[DEBUG]   Dependency Graph Construction: 33 微秒 (0.24238%)
[DEBUG]   Wait for a child to die: 12078 微秒 (90.1612%)
[DEBUG]   Read any stdin makefiles into temporary files: 337 微秒 (2.51568%)

[DEBUG]   Ensuring that build targets are checked and updated properly: 325 微秒 (2.4261%)
[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Manage jobs: 3 微秒 (0.0223947%)
[DEBUG]   Variable initalzation: 12347 微秒 (90.6867%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 370 微秒 (2.71759%)

[DEBUG]   Iterate over all double-colon entries for this file: 321 微秒 (2.35769%)
[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Free a chain of struct nameseq.: 55 微秒 (0.403966%)
[DEBUG]   Save the old value of 'commands_started': 263 微秒 (1.96327%)
[DEBUG]   Read all makefiles and decode: 240 微秒 (1.79158%)
[DEBUG]   Setup jobservers: 9 微秒 (0.0661036%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 12332 微秒 (90.5766%)
[DEBUG]   Read any stdin makefiles into temporary files: 358 微秒 (2.62945%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 301 微秒 (2.2108%)
[DEBUG]   Manage jobs: 2 微秒 (0.0146897%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 263 微秒 (1.93169%)
[DEBUG]   Read all makefiles and decode: 236 微秒 (1.73338%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 13180 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 12197 微秒 (92.5417%)
[DEBUG]   Manifest Parsing and Rebuilding: 571 微秒 (4.33232%)
[DEBUG]   Initialization: 349 微秒 (2.64795%)
[DEBUG]   Execution Preparation: 2 微秒 (0.0151745%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 12232 微秒 (92.8073%)
[DEBUG]   Update goal chain: 12189 微秒 (92.481%)
[DEBUG]   The whole process of reading the makefile: 361 微秒 (2.739%)
[DEBUG]   Dependency Graph Construction: 70 微秒 (0.531108%)
[DEBUG]   Argument Parsing: 37 微秒 (0.280728%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 11908 微秒 (90.349%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 343 微秒 (2.60243%)
[DEBUG]   Iterate over all double-colon entries for this file: 309 微秒 (2.34446%)
[DEBUG]   Free a chain of struct nameseq.: 56 微秒 (0.424886%)
[DEBUG]   Setup jobservers: 8 微秒 (0.060698%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 11893 微秒 (90.2352%)
[DEBUG]   Read any stdin makefiles into temporary files: 329 微秒 (2.49621%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 290 微秒 (2.2003%)
[DEBUG]   Manage jobs: 3 微秒 (0.0227618%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 251 微秒 (1.9044%)
[DEBUG]   Read all makefiles and decode: 237 微秒 (1.79818%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 13340 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 12350 微秒 (92.5787%)
[DEBUG]   Manifest Parsing and Rebuilding: 573 微秒 (4.29535%)
[DEBUG]   Initialization: 355 微秒 (2.66117%)
[DEBUG]   Execution Preparation: 2 微秒 (0.0149925%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 12382 微秒 (92.8186%)
[DEBUG]   Update goal chain: 12341 微秒 (92.5112%)
[DEBUG]   The whole process of reading the makefile: 402 微秒 (3.01349%)
[DEBUG]   Argument Parsing: 40 微秒 (0.29985%)
[DEBUG]   Dependency Graph Construction: 34 微秒 (0.254873%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 12063 微秒 (90.4273%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 381 微秒 (2.85607%)
[DEBUG]   Iterate over all double-colon entries for this file: 306 微秒 (2.29385%)
[DEBUG]   Free a chain of struct nameseq.: 57 微秒 (0.427286%)
[DEBUG]   Setup jobservers: 11 微秒 (0.0824588%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 12047 微秒 (90.3073%)
[DEBUG]   Read any stdin makefiles into temporary files: 368 微秒 (2.75862%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 286 微秒 (2.14393%)
[DEBUG]   Manage jobs: 4 微秒 (0.029985%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Read all makefiles and decode: 250 微秒 (1.87406%)
[DEBUG]   Save the old value of 'commands_started': 249 微秒 (1.86657%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[DEBUG] starting profiling
[ 35%] Building CXX object tests/CMakeFiles/test-sampling.dir/test-sampling.cpp.o
[ 37%] Building CXX object tests/CMakeFiles/test-tokenizer-0.dir/test-tokenizer-0.cpp.o
[ 37%] Building CXX object tests/CMakeFiles/test-grammar-integration.dir/test-grammar-integration.cpp.o
[ 37%] Building CXX object tests/CMakeFiles/test-grammar-parser.dir/test-grammar-parser.cpp.o
[ 37%] Building CXX object tests/CMakeFiles/test-llama-grammar.dir/test-llama-grammar.cpp.o
[ 38%] Building CXX object tests/CMakeFiles/test-json-schema-to-grammar.dir/test-json-schema-to-grammar.cpp.o
[ 38%] Building CXX object tests/CMakeFiles/test-chat.dir/test-chat.cpp.o
[ 39%] Building CXX object tests/CMakeFiles/test-tokenizer-1-spm.dir/test-tokenizer-1-spm.cpp.o
[ 40%] Building CXX object tests/CMakeFiles/test-tokenizer-1-bpe.dir/test-tokenizer-1-bpe.cpp.o
[ 41%] Building CXX object tests/CMakeFiles/test-log.dir/test-log.cpp.o
[ 41%] Building CXX object tests/CMakeFiles/test-chat-template.dir/test-chat-template.cpp.o
[ 41%] Building CXX object tests/CMakeFiles/test-arg-parser.dir/test-arg-parser.cpp.o
[ 43%] Building CXX object tests/CMakeFiles/test-backend-ops.dir/test-backend-ops.cpp.o
[ 43%] Building CXX object tests/CMakeFiles/test-gguf.dir/test-gguf.cpp.o
[ 43%] Building CXX object tests/CMakeFiles/test-model-load-cancel.dir/test-model-load-cancel.cpp.o
[ 43%] Building CXX object tests/CMakeFiles/test-autorelease.dir/test-autorelease.cpp.o
[ 43%] Building CXX object tests/CMakeFiles/test-barrier.dir/test-barrier.cpp.o
[ 44%] Building CXX object tests/CMakeFiles/test-quantize-perf.dir/test-quantize-perf.cpp.o
[ 44%] Building CXX object tests/CMakeFiles/test-rope.dir/test-rope.cpp.o
[ 45%] Building CXX object tests/CMakeFiles/test-quantize-fns.dir/test-quantize-fns.cpp.o
[ 45%] Building CXX object examples/batched-bench/CMakeFiles/llama-batched-bench.dir/batched-bench.cpp.o
[ 45%] Building CXX object examples/batched/CMakeFiles/llama-batched.dir/batched.cpp.o
[ 46%] Building CXX object examples/eval-callback/CMakeFiles/llama-eval-callback.dir/eval-callback.cpp.o
[ 48%] Building CXX object examples/imatrix/CMakeFiles/llama-imatrix.dir/imatrix.cpp.o
[ 48%] Building CXX object examples/embedding/CMakeFiles/llama-embedding.dir/embedding.cpp.o
[ 49%] Building CXX object examples/gguf-split/CMakeFiles/llama-gguf-split.dir/gguf-split.cpp.o
[ 50%] Building CXX object examples/gbnf-validator/CMakeFiles/llama-gbnf-validator.dir/gbnf-validator.cpp.o
[ 51%] Building CXX object examples/infill/CMakeFiles/llama-infill.dir/infill.cpp.o
[ 52%] Building CXX object examples/llama-bench/CMakeFiles/llama-bench.dir/llama-bench.cpp.o
[ 52%] Building CXX object examples/gritlm/CMakeFiles/llama-gritlm.dir/gritlm.cpp.o
[ 53%] Building CXX object tests/CMakeFiles/test-model-load-cancel.dir/get-model.cpp.o
[ 53%] Linking CXX executable ../bin/test-model-load-cancel
[ 53%] Building CXX object tests/CMakeFiles/test-log.dir/get-model.cpp.o
*******************************************************************************
[DEBUG] 总耗时: 268167 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 267224 微秒 (99.6484%)
[DEBUG]   Manifest Parsing and Rebuilding: 539 微秒 (0.200994%)
[DEBUG]   Initialization: 348 微秒 (0.12977%)
[DEBUG]   Execution Preparation: 3 微秒 (0.00111871%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 267257 微秒 (99.6607%)
[DEBUG]   Update goal chain: 267217 微秒 (99.6457%)
[DEBUG]   The whole process of reading the makefile: 362 微秒 (0.134991%)
[DEBUG]   Argument Parsing: 38 微秒 (0.0141703%)
[DEBUG]   Dependency Graph Construction: 26 微秒 (0.00969545%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 183524 微秒 (68.4365%)
[DEBUG]   Iterate over all double-colon entries for this file: 83714 微秒 (31.2171%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 344 微秒 (0.128278%)
[DEBUG]   Free a chain of struct nameseq.: 48 微秒 (0.0178993%)
[DEBUG]   Setup jobservers: 9 微秒 (0.00335612%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 183493 微秒 (68.4249%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 83688 微秒 (31.2074%)
[DEBUG]   Read any stdin makefiles into temporary files: 331 微秒 (0.123431%)
[DEBUG]   Manage jobs: 3 微秒 (0.00111871%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 83631 微秒 (31.1862%)
[DEBUG]   Read all makefiles and decode: 248 微秒 (0.0924797%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[DEBUG] starting profiling
[ 53%] Built target test-model-load-cancel
*******************************************************************************
[DEBUG] 总耗时: 14197 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 13167 微秒 (92.7449%)
[DEBUG]   Manifest Parsing and Rebuilding: 583 微秒 (4.1065%)
[DEBUG]   Initialization: 368 微秒 (2.5921%)
[DEBUG]   Execution Preparation: 2 微秒 (0.0140875%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 13209 微秒 (93.0408%)
[DEBUG]   Update goal chain: 13161 微秒 (92.7027%)
[DEBUG]   The whole process of reading the makefile: 393 微秒 (2.76819%)
[DEBUG]   Dependency Graph Construction: 42 微秒 (0.295837%)
[DEBUG]   Argument Parsing: 39 微秒 (0.274706%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 11806 微秒 (83.1584%)
[DEBUG]   Iterate over all double-colon entries for this file: 1388 微秒 (9.77671%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 371 微秒 (2.61323%)
[DEBUG]   Free a chain of struct nameseq.: 56 微秒 (0.39445%)
[DEBUG]   Setup jobservers: 11 微秒 (0.0774812%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 11768 微秒 (82.8908%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 1369 微秒 (9.64288%)
[DEBUG]   Read any stdin makefiles into temporary files: 357 微秒 (2.51462%)
[DEBUG]   Manage jobs: 4 微秒 (0.028175%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 1332 微秒 (9.38226%)
[DEBUG]   Read all makefiles and decode: 252 微秒 (1.77502%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 17030 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 15988 微秒 (93.8814%)
[DEBUG]   Manifest Parsing and Rebuilding: 570 微秒 (3.34703%)
[DEBUG]   Initialization: 393 微秒 (2.30769%)
[DEBUG]   Execution Preparation: 2 微秒 (0.011744%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 16022 微秒 (94.081%)
[DEBUG]   Update goal chain: 15978 微秒 (93.8227%)
[DEBUG]   The whole process of reading the makefile: 377 微秒 (2.21374%)
[DEBUG]   Argument Parsing: 46 微秒 (0.270112%)
[DEBUG]   Dependency Graph Construction: 40 微秒 (0.23488%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 14399 微秒 (84.5508%)
[DEBUG]   Iterate over all double-colon entries for this file: 1609 微秒 (9.44803%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 355 微秒 (2.08456%)
[DEBUG]   Free a chain of struct nameseq.: 56 微秒 (0.328831%)
[DEBUG]   Setup jobservers: 11 微秒 (0.0645919%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 14378 微秒 (84.4275%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 1590 微秒 (9.33647%)
[DEBUG]   Read any stdin makefiles into temporary files: 342 微秒 (2.00822%)
[DEBUG]   Manage jobs: 3 微秒 (0.017616%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (0.00587199%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 1550 微秒 (9.10159%)
[DEBUG]   Read all makefiles and decode: 243 微秒 (1.42689%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[ 53%] Building CXX object examples/lookahead/CMakeFiles/llama-lookahead.dir/lookahead.cpp.o
[ 53%] Building CXX object examples/lookup/CMakeFiles/llama-lookup.dir/lookup.cpp.o
[ 54%] Linking CXX executable ../bin/test-log
[ 54%] Building CXX object tests/CMakeFiles/test-rope.dir/get-model.cpp.o
[ 55%] Building CXX object tests/CMakeFiles/test-autorelease.dir/get-model.cpp.o
*******************************************************************************
[DEBUG] 总耗时: 461645 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 460733 微秒 (99.8024%)
[DEBUG]   Manifest Parsing and Rebuilding: 512 微秒 (0.110908%)
[DEBUG]   Initialization: 341 微秒 (0.0738663%)
[DEBUG]   Execution Preparation: 2 微秒 (0.000433233%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 460763 微秒 (99.8089%)
[DEBUG]   Update goal chain: 460723 微秒 (99.8003%)
[DEBUG]   The whole process of reading the makefile: 354 微秒 (0.0766823%)
[DEBUG]   Argument Parsing: 33 微秒 (0.00714835%)
[DEBUG]   Dependency Graph Construction: 25 微秒 (0.00541542%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Iterate over all double-colon entries for this file: 249827 微秒 (54.1167%)
[DEBUG]   Variable initalzation: 210914 微秒 (45.6875%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 339 微秒 (0.073433%)
[DEBUG]   Free a chain of struct nameseq.: 50 微秒 (0.0108308%)
[DEBUG]   Setup jobservers: 8 微秒 (0.00173293%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Ensuring that build targets are checked and updated properly: 249802 微秒 (54.1113%)
[DEBUG]   Wait for a child to die: 210882 微秒 (45.6806%)
[DEBUG]   Read any stdin makefiles into temporary files: 329 微秒 (0.0712669%)
[DEBUG]   Manage jobs: 3 微秒 (0.00064985%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 249749 微秒 (54.0998%)
[DEBUG]   Read all makefiles and decode: 242 微秒 (0.0524212%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 55%] Built target test-log
[ 56%] Building CXX object tests/CMakeFiles/test-chat-template.dir/get-model.cpp.o
[ 57%] Linking CXX executable ../bin/test-rope
[ 57%] Linking CXX executable ../bin/test-autorelease
[ 58%] Building CXX object tests/CMakeFiles/test-barrier.dir/get-model.cpp.o
[ 59%] Building CXX object tests/CMakeFiles/test-quantize-perf.dir/get-model.cpp.o
[ 59%] Linking CXX executable ../bin/test-barrier
[ 59%] Building CXX object tests/CMakeFiles/test-quantize-fns.dir/get-model.cpp.o
*******************************************************************************
[DEBUG] 总耗时: 629459 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 628474 微秒 (99.8435%)
[DEBUG]   Manifest Parsing and Rebuilding: 584 微秒 (0.0927781%)
[DEBUG]   Initialization: 348 微秒 (0.0552856%)
[DEBUG]   Execution Preparation: 2 微秒 (0.000317733%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 628507 微秒 (99.8488%)
[DEBUG]   Update goal chain: 628464 微秒 (99.8419%)
[DEBUG]   The whole process of reading the makefile: 412 微秒 (0.065453%)
[DEBUG]   Argument Parsing: 35 微秒 (0.00556033%)
[DEBUG]   Dependency Graph Construction: 35 微秒 (0.00556033%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Iterate over all double-colon entries for this file: 406283 微秒 (64.5448%)
[DEBUG]   Variable initalzation: 222200 微秒 (35.3002%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 394 微秒 (0.0625934%)
[DEBUG]   Free a chain of struct nameseq.: 56 微秒 (0.00889653%)
[DEBUG]   Setup jobservers: 8 微秒 (0.00127093%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Ensuring that build targets are checked and updated properly: 406261 微秒 (64.5413%)
[DEBUG]   Wait for a child to die: 222165 微秒 (35.2946%)
[DEBUG]   Read any stdin makefiles into temporary files: 381 微秒 (0.0605282%)
[DEBUG]   Manage jobs: 4 微秒 (0.000635466%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (0.000158867%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 406204 微秒 (64.5322%)
[DEBUG]   Read all makefiles and decode: 288 微秒 (0.0457536%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
*******************************************************************************
[DEBUG] 总耗时: 634560 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 633595 微秒 (99.8479%)
[DEBUG]   Manifest Parsing and Rebuilding: 586 微秒 (0.0923475%)
[DEBUG]   Initialization: 322 微秒 (0.0507438%)
[DEBUG]   Execution Preparation: 1 微秒 (0.00015759%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 633627 微秒 (99.853%)
[DEBUG]   Update goal chain: 633588 微秒 (99.8468%)
[DEBUG]   The whole process of reading the makefile: 406 微秒 (0.0639813%)
[DEBUG]   Argument Parsing: 37 微秒 (0.00583081%)
[DEBUG]   Dependency Graph Construction: 32 微秒 (0.00504286%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Iterate over all double-colon entries for this file: 411473 微秒 (64.8438%)
[DEBUG]   Variable initalzation: 222132 微秒 (35.0057%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 388 微秒 (0.0611447%)
[DEBUG]   Free a chain of struct nameseq.: 57 微秒 (0.0089826%)
[DEBUG]   Setup jobservers: 8 微秒 (0.00126072%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Ensuring that build targets are checked and updated properly: 411449 微秒 (64.84%)
[DEBUG]   Wait for a child to die: 222103 微秒 (35.0011%)
[DEBUG]   Read any stdin makefiles into temporary files: 374 微秒 (0.0589385%)
[DEBUG]   Manage jobs: 4 微秒 (0.000630358%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (0.00015759%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 411397 微秒 (64.8319%)
[DEBUG]   Read all makefiles and decode: 284 微秒 (0.0447554%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 59%] Built target test-rope
[ 59%] Built target test-autorelease
[DEBUG] starting profiling
[ 60%] Linking CXX executable ../bin/test-quantize-fns
*******************************************************************************
[DEBUG] 总耗时: 16099 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 14790 微秒 (91.8691%)
[DEBUG]   Manifest Parsing and Rebuilding: 659 微秒 (4.09342%)
[DEBUG]   Initialization: 433 微秒 (2.68961%)
[DEBUG]   Execution Preparation: 4 微秒 (0.0248463%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 14829 微秒 (92.1113%)
[DEBUG]   Update goal chain: 14782 微秒 (91.8194%)
[DEBUG]   The whole process of reading the makefile: 424 微秒 (2.6337%)
[DEBUG]   Argument Parsing: 50 微秒 (0.310578%)
[DEBUG]   Dependency Graph Construction: 44 微秒 (0.273309%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 14393 微秒 (89.4031%)
[DEBUG]   Iterate over all double-colon entries for this file: 421 微秒 (2.61507%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 401 微秒 (2.49084%)
[DEBUG]   Free a chain of struct nameseq.: 82 微秒 (0.509348%)
[DEBUG]   Setup jobservers: 12 微秒 (0.0745388%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 14372 微秒 (89.2726%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 400 微秒 (2.48463%)
[DEBUG]   Read any stdin makefiles into temporary files: 385 微秒 (2.39145%)
[DEBUG]   Manage jobs: 5 微秒 (0.0310578%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (0.00621157%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 358 微秒 (2.22374%)
[DEBUG]   Read all makefiles and decode: 279 微秒 (1.73303%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[ 60%] Building CXX object examples/lookup/CMakeFiles/llama-lookup-create.dir/lookup-create.cpp.o
*******************************************************************************
[DEBUG] 总耗时: 714810 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 713821 微秒 (99.8616%)
[DEBUG]   Manifest Parsing and Rebuilding: 600 微秒 (0.0839384%)
[DEBUG]   Initialization: 330 微秒 (0.0461661%)
[DEBUG]   Execution Preparation: 2 微秒 (0.000279795%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 713852 微秒 (99.866%)
[DEBUG]   Update goal chain: 713812 微秒 (99.8604%)
[DEBUG]   The whole process of reading the makefile: 429 微秒 (0.0600159%)
[DEBUG]   Dependency Graph Construction: 35 微秒 (0.00489641%)
[DEBUG]   Argument Parsing: 33 微秒 (0.00461661%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Iterate over all double-colon entries for this file: 500657 微秒 (70.0406%)
[DEBUG]   Variable initalzation: 213172 微秒 (29.8222%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 410 微秒 (0.0573579%)
[DEBUG]   Free a chain of struct nameseq.: 74 微秒 (0.0103524%)
[DEBUG]   Setup jobservers: 9 微秒 (0.00125908%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Ensuring that build targets are checked and updated properly: 500631 微秒 (70.0369%)
[DEBUG]   Wait for a child to die: 213138 微秒 (29.8174%)
[DEBUG]   Read any stdin makefiles into temporary files: 397 微秒 (0.0555392%)
[DEBUG]   Manage jobs: 3 微秒 (0.000419692%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 500578 微秒 (70.0295%)
[DEBUG]   Read all makefiles and decode: 276 微秒 (0.0386117%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 60%] Built target test-barrier
[ 60%] Building CXX object tests/CMakeFiles/test-gguf.dir/get-model.cpp.o
*******************************************************************************
[DEBUG] 总耗时: 791779 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 790768 微秒 (99.8723%)
[DEBUG]   Manifest Parsing and Rebuilding: 571 微秒 (0.0721161%)
[DEBUG]   Initialization: 375 微秒 (0.0473617%)
[DEBUG]   Execution Preparation: 2 微秒 (0.000252596%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 790800 微秒 (99.8764%)
[DEBUG]   Update goal chain: 790758 微秒 (99.871%)
[DEBUG]   The whole process of reading the makefile: 392 微秒 (0.0495088%)
[DEBUG]   Argument Parsing: 40 微秒 (0.00505191%)
[DEBUG]   Dependency Graph Construction: 36 微秒 (0.00454672%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Iterate over all double-colon entries for this file: 579737 微秒 (73.2195%)
[DEBUG]   Variable initalzation: 211041 微秒 (26.654%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 373 微秒 (0.0471091%)
[DEBUG]   Free a chain of struct nameseq.: 58 微秒 (0.00732528%)
[DEBUG]   Setup jobservers: 9 微秒 (0.00113668%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Ensuring that build targets are checked and updated properly: 579712 微秒 (73.2164%)
[DEBUG]   Wait for a child to die: 211007 微秒 (26.6497%)
[DEBUG]   Read any stdin makefiles into temporary files: 359 微秒 (0.0453409%)
[DEBUG]   Manage jobs: 3 微秒 (0.000378894%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 579658 微秒 (73.2096%)
[DEBUG]   Read all makefiles and decode: 267 微秒 (0.0337215%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 60%] Built target test-quantize-fns
[ 60%] Building CXX object tests/CMakeFiles/test-grammar-parser.dir/get-model.cpp.o
[ 60%] Linking CXX executable ../bin/test-tokenizer-1-spm
[ 60%] Linking CXX executable ../bin/test-tokenizer-1-bpe
[ 60%] Linking CXX executable ../../bin/llama-gbnf-validator
*******************************************************************************
[DEBUG] 总耗时: 1076687 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1075743 微秒 (99.9123%)
[DEBUG]   Manifest Parsing and Rebuilding: 530 微秒 (0.0492251%)
[DEBUG]   Initialization: 358 微秒 (0.0332501%)
[DEBUG]   Execution Preparation: 2 微秒 (0.000185755%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1075778 微秒 (99.9156%)
[DEBUG]   Update goal chain: 1075734 微秒 (99.9115%)
[DEBUG]   The whole process of reading the makefile: 358 微秒 (0.0332501%)
[DEBUG]   Argument Parsing: 35 微秒 (0.00325071%)
[DEBUG]   Dependency Graph Construction: 34 微秒 (0.00315784%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1075039 微秒 (99.8469%)
[DEBUG]   Iterate over all double-colon entries for this file: 720 微秒 (0.0668718%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 339 微秒 (0.0314855%)
[DEBUG]   Free a chain of struct nameseq.: 53 微秒 (0.00492251%)
[DEBUG]   Setup jobservers: 10 微秒 (0.000928775%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1075006 微秒 (99.8439%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 696 微秒 (0.0646427%)
[DEBUG]   Read any stdin makefiles into temporary files: 326 微秒 (0.0302781%)
[DEBUG]   Manage jobs: 3 微秒 (0.000278633%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 649 微秒 (0.0602775%)
[DEBUG]   Read all makefiles and decode: 236 微秒 (0.0219191%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
*******************************************************************************
[DEBUG] 总耗时: 1088427 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1087454 微秒 (99.9106%)
[DEBUG]   Manifest Parsing and Rebuilding: 560 微秒 (0.0514504%)
[DEBUG]   Initialization: 350 微秒 (0.0321565%)
[DEBUG]   Execution Preparation: 2 微秒 (0.000183751%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1087485 微秒 (99.9135%)
[DEBUG]   Update goal chain: 1087445 微秒 (99.9098%)
[DEBUG]   The whole process of reading the makefile: 398 微秒 (0.0365665%)
[DEBUG]   Dependency Graph Construction: 34 微秒 (0.00312377%)
[DEBUG]   Argument Parsing: 32 微秒 (0.00294002%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1086736 微秒 (99.8446%)
[DEBUG]   Iterate over all double-colon entries for this file: 729 微秒 (0.0669774%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 378 微秒 (0.034729%)
[DEBUG]   Free a chain of struct nameseq.: 55 微秒 (0.00505316%)
[DEBUG]   Setup jobservers: 10 微秒 (0.000918757%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1086704 微秒 (99.8417%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 704 微秒 (0.0646805%)
[DEBUG]   Read any stdin makefiles into temporary files: 365 微秒 (0.0335346%)
[DEBUG]   Manage jobs: 4 微秒 (0.000367503%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 659 微秒 (0.0605461%)
[DEBUG]   Read all makefiles and decode: 269 微秒 (0.0247146%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 60%] Built target test-tokenizer-1-spm
[DEBUG] starting profiling
[ 60%] Built target test-tokenizer-1-bpe
*******************************************************************************
[DEBUG] 总耗时: 17239 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 16094 微秒 (93.3581%)
[DEBUG]   Manifest Parsing and Rebuilding: 640 微秒 (3.71251%)
[DEBUG]   Initialization: 422 微秒 (2.44794%)
[DEBUG]   Execution Preparation: 3 微秒 (0.0174024%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 16131 微秒 (93.5727%)
[DEBUG]   Update goal chain: 16085 微秒 (93.3059%)
[DEBUG]   The whole process of reading the makefile: 434 微秒 (2.51755%)
[DEBUG]   Argument Parsing: 47 微秒 (0.272638%)
[DEBUG]   Dependency Graph Construction: 43 微秒 (0.249434%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 15725 微秒 (91.2176%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 411 微秒 (2.38413%)
[DEBUG]   Iterate over all double-colon entries for this file: 390 微秒 (2.26231%)
[DEBUG]   Free a chain of struct nameseq.: 54 微秒 (0.313243%)
[DEBUG]   Setup jobservers: 12 微秒 (0.0696096%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 15705 微秒 (91.1016%)
[DEBUG]   Read any stdin makefiles into temporary files: 397 微秒 (2.30292%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 368 微秒 (2.13469%)
[DEBUG]   Manage jobs: 4 微秒 (0.0232032%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 329 微秒 (1.90846%)
[DEBUG]   Read all makefiles and decode: 291 微秒 (1.68803%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[DEBUG] starting profiling
[ 60%] Building CXX object examples/lookup/CMakeFiles/llama-lookup-merge.dir/lookup-merge.cpp.o
*******************************************************************************
[DEBUG] 总耗时: 15475 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 14414 微秒 (93.1438%)
[DEBUG]   Manifest Parsing and Rebuilding: 616 微秒 (3.98061%)
[DEBUG]   Initialization: 363 微秒 (2.34572%)
[DEBUG]   Execution Preparation: 2 微秒 (0.0129241%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 14451 微秒 (93.3829%)
[DEBUG]   Update goal chain: 14404 微秒 (93.0792%)
[DEBUG]   The whole process of reading the makefile: 397 微秒 (2.56543%)
[DEBUG]   Dependency Graph Construction: 42 微秒 (0.271405%)
[DEBUG]   Argument Parsing: 39 微秒 (0.252019%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 14082 微秒 (90.9984%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 376 微秒 (2.42973%)
[DEBUG]   Iterate over all double-colon entries for this file: 352 微秒 (2.27464%)
[DEBUG]   Free a chain of struct nameseq.: 59 微秒 (0.38126%)
[DEBUG]   Setup jobservers: 11 微秒 (0.0710824%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 14063 微秒 (90.8756%)
[DEBUG]   Read any stdin makefiles into temporary files: 362 微秒 (2.33926%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 333 微秒 (2.15186%)
[DEBUG]   Manage jobs: 4 微秒 (0.0258481%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 293 微秒 (1.89338%)
[DEBUG]   Read all makefiles and decode: 259 微秒 (1.67367%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[ 60%] Building CXX object examples/lookup/CMakeFiles/llama-lookup-stats.dir/lookup-stats.cpp.o
*******************************************************************************
[DEBUG] 总耗时: 1175043 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1174018 微秒 (99.9128%)
[DEBUG]   Manifest Parsing and Rebuilding: 601 微秒 (0.0511471%)
[DEBUG]   Initialization: 343 微秒 (0.0291904%)
[DEBUG]   Execution Preparation: 2 微秒 (0.000170207%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1174051 微秒 (99.9156%)
[DEBUG]   Update goal chain: 1174009 微秒 (99.912%)
[DEBUG]   The whole process of reading the makefile: 419 微秒 (0.0356583%)
[DEBUG]   Argument Parsing: 43 微秒 (0.00365944%)
[DEBUG]   Dependency Graph Construction: 36 微秒 (0.00306372%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1172904 微秒 (99.818%)
[DEBUG]   Iterate over all double-colon entries for this file: 1126 微秒 (0.0958263%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 401 微秒 (0.0341264%)
[DEBUG]   Free a chain of struct nameseq.: 56 微秒 (0.00476578%)
[DEBUG]   Setup jobservers: 8 微秒 (0.000680826%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1172873 微秒 (99.8153%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 1101 微秒 (0.0936987%)
[DEBUG]   Read any stdin makefiles into temporary files: 387 微秒 (0.032935%)
[DEBUG]   Manage jobs: 3 微秒 (0.00025531%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 1050 微秒 (0.0893584%)
[DEBUG]   Read all makefiles and decode: 259 微秒 (0.0220417%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 60%] Built target llama-gbnf-validator
[DEBUG] starting profiling
[ 60%] Linking CXX executable ../../bin/llama-gguf-split
*******************************************************************************
[DEBUG] 总耗时: 13374 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 12223 微秒 (91.3937%)
[DEBUG]   Manifest Parsing and Rebuilding: 622 微秒 (4.65082%)
[DEBUG]   Initialization: 453 微秒 (3.38717%)
[DEBUG]   Execution Preparation: 2 微秒 (0.0149544%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 12260 微秒 (91.6704%)
[DEBUG]   Update goal chain: 12214 微秒 (91.3265%)
[DEBUG]   The whole process of reading the makefile: 416 微秒 (3.11051%)
[DEBUG]   Argument Parsing: 49 微秒 (0.366383%)
[DEBUG]   Dependency Graph Construction: 42 微秒 (0.314042%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 11864 微秒 (88.7094%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 392 微秒 (2.93106%)
[DEBUG]   Iterate over all double-colon entries for this file: 382 微秒 (2.85629%)
[DEBUG]   Free a chain of struct nameseq.: 60 微秒 (0.448632%)
[DEBUG]   Setup jobservers: 12 微秒 (0.0897263%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 11843 微秒 (88.5524%)
[DEBUG]   Read any stdin makefiles into temporary files: 377 微秒 (2.8189%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 359 微秒 (2.68431%)
[DEBUG]   Manage jobs: 4 微秒 (0.0299088%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (0.00747719%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 318 微秒 (2.37775%)
[DEBUG]   Read all makefiles and decode: 269 微秒 (2.01137%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[ 60%] Building CXX object examples/main/CMakeFiles/llama-cli.dir/main.cpp.o
[ 61%] Linking CXX executable ../../bin/llama-batched
[ 61%] Linking CXX executable ../../bin/llama-gritlm
*******************************************************************************
[DEBUG] 总耗时: 1299937 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1298952 微秒 (99.9242%)
[DEBUG]   Manifest Parsing and Rebuilding: 524 微秒 (0.0403096%)
[DEBUG]   Initialization: 404 微秒 (0.0310784%)
[DEBUG]   Execution Preparation: 1 微秒 (7.69268e-05%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1298982 微秒 (99.9265%)
[DEBUG]   Update goal chain: 1298942 微秒 (99.9235%)
[DEBUG]   The whole process of reading the makefile: 355 微秒 (0.027309%)
[DEBUG]   Argument Parsing: 40 微秒 (0.00307707%)
[DEBUG]   Dependency Graph Construction: 33 微秒 (0.00253858%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1298266 微秒 (99.8715%)
[DEBUG]   Iterate over all double-colon entries for this file: 694 微秒 (0.0533872%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 335 微秒 (0.0257705%)
[DEBUG]   Free a chain of struct nameseq.: 56 微秒 (0.0043079%)
[DEBUG]   Setup jobservers: 10 微秒 (0.000769268%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1298234 微秒 (99.869%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 671 微秒 (0.0516179%)
[DEBUG]   Read any stdin makefiles into temporary files: 324 微秒 (0.0249243%)
[DEBUG]   Manage jobs: 3 微秒 (0.00023078%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 623 微秒 (0.0479254%)
[DEBUG]   Read all makefiles and decode: 234 微秒 (0.0180009%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 61%] Built target llama-gguf-split
[ 61%] Linking CXX executable ../../bin/llama-eval-callback
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 15452 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 14306 微秒 (92.5835%)
[DEBUG]   Manifest Parsing and Rebuilding: 617 微秒 (3.99301%)
[DEBUG]   Initialization: 446 微秒 (2.88636%)
[DEBUG]   Execution Preparation: 3 微秒 (0.019415%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 14338 微秒 (92.7906%)
[DEBUG]   Update goal chain: 14297 微秒 (92.5252%)
[DEBUG]   The whole process of reading the makefile: 416 微秒 (2.69221%)
[DEBUG]   Dependency Graph Construction: 45 微秒 (0.291224%)
[DEBUG]   Argument Parsing: 43 微秒 (0.278281%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 13874 微秒 (89.7877%)
[DEBUG]   Iterate over all double-colon entries for this file: 448 微秒 (2.8993%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 392 微秒 (2.53689%)
[DEBUG]   Free a chain of struct nameseq.: 58 微秒 (0.375356%)
[DEBUG]   Setup jobservers: 12 微秒 (0.0776598%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 13854 微秒 (89.6583%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 429 微秒 (2.77634%)
[DEBUG]   Read any stdin makefiles into temporary files: 377 微秒 (2.43981%)
[DEBUG]   Manage jobs: 4 微秒 (0.0258866%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (0.00647165%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 388 微秒 (2.511%)
[DEBUG]   Read all makefiles and decode: 269 微秒 (1.74087%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[ 61%] Building CXX object examples/parallel/CMakeFiles/llama-parallel.dir/parallel.cpp.o
[ 62%] Linking CXX executable ../../bin/llama-batched-bench
*******************************************************************************
[DEBUG] 总耗时: 1457907 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1456986 微秒 (99.9368%)
[DEBUG]   Manifest Parsing and Rebuilding: 516 微秒 (0.0353932%)
[DEBUG]   Initialization: 339 微秒 (0.0232525%)
[DEBUG]   Execution Preparation: 2 微秒 (0.000137183%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1457017 微秒 (99.939%)
[DEBUG]   Update goal chain: 1456977 微秒 (99.9362%)
[DEBUG]   The whole process of reading the makefile: 345 微秒 (0.0236641%)
[DEBUG]   Argument Parsing: 39 微秒 (0.00267507%)
[DEBUG]   Dependency Graph Construction: 33 微秒 (0.00226352%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1455298 微秒 (99.821%)
[DEBUG]   Iterate over all double-colon entries for this file: 1697 微秒 (0.1164%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 325 微秒 (0.0222922%)
[DEBUG]   Free a chain of struct nameseq.: 53 微秒 (0.00363535%)
[DEBUG]   Setup jobservers: 10 微秒 (0.000685915%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1455241 微秒 (99.8171%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 1674 微秒 (0.114822%)
[DEBUG]   Read any stdin makefiles into temporary files: 313 微秒 (0.0214691%)
[DEBUG]   Manage jobs: 3 微秒 (0.000205774%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 1625 微秒 (0.111461%)
[DEBUG]   Read all makefiles and decode: 236 微秒 (0.0161876%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 62%] Built target llama-gritlm
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 17968 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 16733 微秒 (93.1267%)
[DEBUG]   Manifest Parsing and Rebuilding: 694 微秒 (3.86242%)
[DEBUG]   Initialization: 459 微秒 (2.55454%)
[DEBUG]   Execution Preparation: 3 微秒 (0.0166963%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 16776 微秒 (93.366%)
[DEBUG]   Update goal chain: 16725 微秒 (93.0821%)
[DEBUG]   The whole process of reading the makefile: 431 微秒 (2.39871%)
[DEBUG]   Argument Parsing: 93 微秒 (0.517587%)
[DEBUG]   Dependency Graph Construction: 46 微秒 (0.256011%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 16081 微秒 (89.498%)
[DEBUG]   Iterate over all double-colon entries for this file: 680 微秒 (3.78451%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 407 微秒 (2.26514%)
[DEBUG]   Free a chain of struct nameseq.: 60 微秒 (0.333927%)
[DEBUG]   Setup jobservers: 13 微秒 (0.0723508%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 16060 微秒 (89.3811%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 658 微秒 (3.66207%)
[DEBUG]   Read any stdin makefiles into temporary files: 391 微秒 (2.17609%)
[DEBUG]   Manage jobs: 5 微秒 (0.0278272%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (0.00556545%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 617 微秒 (3.43388%)
[DEBUG]   Read all makefiles and decode: 274 微秒 (1.52493%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 62%] Linking CXX executable ../bin/test-tokenizer-0
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 1506604 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1505456 微秒 (99.9238%)
[DEBUG]   Initialization: 567 微秒 (0.0376343%)
[DEBUG]   Manifest Parsing and Rebuilding: 527 微秒 (0.0349793%)
[DEBUG]   Execution Preparation: 2 微秒 (0.000132749%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1505488 微秒 (99.9259%)
[DEBUG]   Update goal chain: 1505448 微秒 (99.9233%)
[DEBUG]   The whole process of reading the makefile: 354 微秒 (0.0234966%)
[DEBUG]   Argument Parsing: 39 微秒 (0.0025886%)
[DEBUG]   Dependency Graph Construction: 34 微秒 (0.00225673%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1504619 微秒 (99.8682%)
[DEBUG]   Iterate over all double-colon entries for this file: 848 微秒 (0.0562855%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 336 微秒 (0.0223018%)
[DEBUG]   Free a chain of struct nameseq.: 55 微秒 (0.00365059%)
[DEBUG]   Setup jobservers: 9 微秒 (0.00059737%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1504590 微秒 (99.8663%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 825 微秒 (0.0547589%)
[DEBUG]   Read any stdin makefiles into temporary files: 322 微秒 (0.0213726%)
[DEBUG]   Manage jobs: 3 微秒 (0.000199123%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 776 微秒 (0.0515066%)
[DEBUG]   Read all makefiles and decode: 238 微秒 (0.0157971%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 62%] Building CXX object examples/passkey/CMakeFiles/llama-passkey.dir/passkey.cpp.o
[ 62%] Built target llama-batched
[ 63%] Linking CXX executable ../bin/test-grammar-parser
[DEBUG] starting profiling
[ 63%] Building CXX object tests/CMakeFiles/test-json-schema-to-grammar.dir/get-model.cpp.o
[ 64%] Building CXX object tests/CMakeFiles/test-sampling.dir/get-model.cpp.o
*******************************************************************************
[DEBUG] 总耗时: 16241 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 15142 微秒 (93.2332%)
[DEBUG]   Manifest Parsing and Rebuilding: 589 微秒 (3.62662%)
[DEBUG]   Initialization: 437 微秒 (2.69072%)
[DEBUG]   Execution Preparation: 2 微秒 (0.0123145%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 15179 微秒 (93.461%)
[DEBUG]   Update goal chain: 15133 微秒 (93.1778%)
[DEBUG]   The whole process of reading the makefile: 393 微秒 (2.4198%)
[DEBUG]   Argument Parsing: 47 微秒 (0.289391%)
[DEBUG]   Dependency Graph Construction: 40 微秒 (0.24629%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 14753 微秒 (90.838%)
[DEBUG]   Iterate over all double-colon entries for this file: 410 微秒 (2.52448%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 371 微秒 (2.28434%)
[DEBUG]   Free a chain of struct nameseq.: 55 微秒 (0.338649%)
[DEBUG]   Setup jobservers: 11 微秒 (0.0677298%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 14712 微秒 (90.5856%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 390 微秒 (2.40133%)
[DEBUG]   Read any stdin makefiles into temporary files: 358 微秒 (2.2043%)
[DEBUG]   Manage jobs: 4 微秒 (0.024629%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 350 微秒 (2.15504%)
[DEBUG]   Read all makefiles and decode: 255 微秒 (1.5701%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[ 64%] Building CXX object examples/perplexity/CMakeFiles/llama-perplexity.dir/perplexity.cpp.o
*******************************************************************************
[DEBUG] 总耗时: 1566157 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1565148 微秒 (99.9356%)
[DEBUG]   Manifest Parsing and Rebuilding: 578 微秒 (0.0369056%)
[DEBUG]   Initialization: 341 微秒 (0.021773%)
[DEBUG]   Execution Preparation: 2 微秒 (0.000127701%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1565182 微秒 (99.9377%)
[DEBUG]   Update goal chain: 1565138 微秒 (99.9349%)
[DEBUG]   The whole process of reading the makefile: 399 微秒 (0.0254764%)
[DEBUG]   Argument Parsing: 36 微秒 (0.00229862%)
[DEBUG]   Dependency Graph Construction: 34 微秒 (0.00217092%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1564321 微秒 (99.8828%)
[DEBUG]   Iterate over all double-colon entries for this file: 841 微秒 (0.0536983%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 381 微秒 (0.0243271%)
[DEBUG]   Free a chain of struct nameseq.: 56 微秒 (0.00357563%)
[DEBUG]   Setup jobservers: 8 微秒 (0.000510804%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1564292 微秒 (99.8809%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 817 微秒 (0.0521659%)
[DEBUG]   Read any stdin makefiles into temporary files: 368 微秒 (0.023497%)
[DEBUG]   Manage jobs: 3 微秒 (0.000191552%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 768 微秒 (0.0490372%)
[DEBUG]   Read all makefiles and decode: 280 微秒 (0.0178782%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 64%] Built target llama-eval-callback
[DEBUG] starting profiling
[DEBUG] starting profiling
[ 64%] Linking CXX executable ../bin/test-sampling
*******************************************************************************
[DEBUG] 总耗时: 15543 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 14298 微秒 (91.99%)
[DEBUG]   Manifest Parsing and Rebuilding: 735 微秒 (4.72882%)
[DEBUG]   Initialization: 422 微秒 (2.71505%)
[DEBUG]   Execution Preparation: 3 微秒 (0.0193013%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 14336 微秒 (92.2344%)
[DEBUG]   Update goal chain: 14289 微秒 (91.9321%)
[DEBUG]   The whole process of reading the makefile: 531 微秒 (3.41633%)
[DEBUG]   Argument Parsing: 45 微秒 (0.289519%)
[DEBUG]   Dependency Graph Construction: 44 微秒 (0.283086%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 13787 微秒 (88.7023%)
[DEBUG]   Iterate over all double-colon entries for this file: 534 微秒 (3.43563%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 507 微秒 (3.26192%)
[DEBUG]   Free a chain of struct nameseq.: 61 微秒 (0.39246%)
[DEBUG]   Setup jobservers: 13 微秒 (0.0836389%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 13767 微秒 (88.5736%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 515 微秒 (3.31339%)
[DEBUG]   Read any stdin makefiles into temporary files: 491 微秒 (3.15898%)
[DEBUG]   Manage jobs: 5 微秒 (0.0321688%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (0.00643376%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 474 微秒 (3.0496%)
[DEBUG]   Read all makefiles and decode: 370 微秒 (2.38049%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 18197 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 17040 微秒 (93.6418%)
[DEBUG]   Manifest Parsing and Rebuilding: 625 微秒 (3.43463%)
[DEBUG]   Initialization: 398 微秒 (2.18717%)
[DEBUG]   Execution Preparation: 3 微秒 (0.0164862%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 17073 微秒 (93.8232%)
[DEBUG]   Update goal chain: 17031 微秒 (93.5924%)
[DEBUG]   The whole process of reading the makefile: 435 微秒 (2.3905%)
[DEBUG]   Dependency Graph Construction: 41 微秒 (0.225312%)
[DEBUG]   Argument Parsing: 40 微秒 (0.219816%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 16682 微秒 (91.6745%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 390 微秒 (2.14321%)
[DEBUG]   Iterate over all double-colon entries for this file: 377 微秒 (2.07177%)
[DEBUG]   Free a chain of struct nameseq.: 55 微秒 (0.302248%)
[DEBUG]   Setup jobservers: 35 微秒 (0.192339%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 16663 微秒 (91.57%)
[DEBUG]   Read any stdin makefiles into temporary files: 376 微秒 (2.06627%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 357 微秒 (1.96186%)
[DEBUG]   Manage jobs: 3 微秒 (0.0164862%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (0.00549541%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 320 微秒 (1.75853%)
[DEBUG]   Read all makefiles and decode: 269 微秒 (1.47827%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[ 64%] Building CXX object examples/quantize/CMakeFiles/llama-quantize.dir/quantize.cpp.o
[ 64%] Building CXX object examples/retrieval/CMakeFiles/llama-retrieval.dir/retrieval.cpp.o
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 1660865 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1659899 微秒 (99.9418%)
[DEBUG]   Manifest Parsing and Rebuilding: 558 微秒 (0.033597%)
[DEBUG]   Initialization: 354 微秒 (0.0213142%)
[DEBUG]   Execution Preparation: 3 微秒 (0.000180629%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1659959 微秒 (99.9455%)
[DEBUG]   Update goal chain: 1659891 微秒 (99.9414%)
[DEBUG]   The whole process of reading the makefile: 367 微秒 (0.0220969%)
[DEBUG]   Argument Parsing: 36 微秒 (0.00216755%)
[DEBUG]   Dependency Graph Construction: 32 微秒 (0.00192671%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 850068 微秒 (51.1822%)
[DEBUG]   Iterate over all double-colon entries for this file: 809862 微秒 (48.7615%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 348 微秒 (0.0209529%)
[DEBUG]   Free a chain of struct nameseq.: 55 微秒 (0.00331153%)
[DEBUG]   Setup jobservers: 10 微秒 (0.000602096%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 849650 微秒 (51.1571%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 809808 微秒 (48.7582%)
[DEBUG]   Start jobs that are waiting for the load to go down: 380 微秒 (0.0228796%)
[DEBUG]   Read any stdin makefiles into temporary files: 336 微秒 (0.0202304%)
[DEBUG]   Manage jobs: 2 微秒 (0.000120419%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 809745 微秒 (48.7544%)
[DEBUG]   Read all makefiles and decode: 250 微秒 (0.0150524%)
[DEBUG]   Start jobs that are waiting for the load to go down: 3 微秒 (0.000180629%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
*******************************************************************************
[DEBUG] 总耗时: 1662149 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1661344 微秒 (99.9516%)
[DEBUG]   Manifest Parsing and Rebuilding: 451 微秒 (0.0271335%)
[DEBUG]   Initialization: 305 微秒 (0.0183497%)
[DEBUG]   Execution Preparation: 1 微秒 (6.01631e-05%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1661362 微秒 (99.9527%)
[DEBUG]   Update goal chain: 1661334 微秒 (99.951%)
[DEBUG]   The whole process of reading the makefile: 323 微秒 (0.0194327%)
[DEBUG]   Argument Parsing: 27 微秒 (0.0016244%)
[DEBUG]   Dependency Graph Construction: 25 微秒 (0.00150408%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1660649 微秒 (99.9098%)
[DEBUG]   Iterate over all double-colon entries for this file: 694 微秒 (0.0417532%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 308 微秒 (0.0185302%)
[DEBUG]   Free a chain of struct nameseq.: 47 微秒 (0.00282766%)
[DEBUG]   Setup jobservers: 8 微秒 (0.000481305%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1660620 微秒 (99.908%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 675 微秒 (0.0406101%)
[DEBUG]   Read any stdin makefiles into temporary files: 298 微秒 (0.0179286%)
[DEBUG]   Manage jobs: 3 微秒 (0.000180489%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 636 微秒 (0.0382637%)
[DEBUG]   Read all makefiles and decode: 228 微秒 (0.0137172%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 64%] Building CXX object tests/CMakeFiles/test-arg-parser.dir/get-model.cpp.o
[ 65%] Generating loading.html.hpp
[ 65%] Linking CXX executable ../../bin/llama-embedding
[ 65%] Built target test-tokenizer-0
[ 65%] Built target test-grammar-parser
*******************************************************************************
[DEBUG] 总耗时: 1672099 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1671097 微秒 (99.9401%)
[DEBUG]   Manifest Parsing and Rebuilding: 571 微秒 (0.0341487%)
[DEBUG]   Initialization: 347 微秒 (0.0207524%)
[DEBUG]   Execution Preparation: 2 微秒 (0.00011961%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1671129 微秒 (99.942%)
[DEBUG]   Update goal chain: 1671088 微秒 (99.9395%)
[DEBUG]   The whole process of reading the makefile: 399 微秒 (0.0238622%)
[DEBUG]   Argument Parsing: 37 微秒 (0.00221279%)
[DEBUG]   Dependency Graph Construction: 34 微秒 (0.00203337%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1670330 微秒 (99.8942%)
[DEBUG]   Iterate over all double-colon entries for this file: 776 微秒 (0.0464087%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 380 微秒 (0.0227259%)
[DEBUG]   Free a chain of struct nameseq.: 56 微秒 (0.00334908%)
[DEBUG]   Setup jobservers: 9 微秒 (0.000538246%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1670298 微秒 (99.8923%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 753 微秒 (0.0450332%)
[DEBUG]   Read any stdin makefiles into temporary files: 367 微秒 (0.0219485%)
[DEBUG]   Manage jobs: 4 微秒 (0.00023922%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 705 微秒 (0.0421626%)
[DEBUG]   Read all makefiles and decode: 247 微秒 (0.0147719%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[ 66%] Building CXX object tests/CMakeFiles/test-grammar-integration.dir/get-model.cpp.o
[ 66%] Built target llama-batched-bench
[ 66%] Generating index.html.gz.hpp
*******************************************************************************
[DEBUG] 总耗时: 10917 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 9914 微秒 (90.8125%)
[DEBUG]   Manifest Parsing and Rebuilding: 555 微秒 (5.08381%)
[DEBUG]   Initialization: 381 微秒 (3.48997%)
[DEBUG]   Execution Preparation: 2 微秒 (0.0183201%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 9951 微秒 (91.1514%)
[DEBUG]   Update goal chain: 9908 微秒 (90.7575%)
[DEBUG]   The whole process of reading the makefile: 370 微秒 (3.38921%)
[DEBUG]   Argument Parsing: 45 微秒 (0.412201%)
[DEBUG]   Dependency Graph Construction: 38 微秒 (0.348081%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 9677 微秒 (88.6416%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 351 微秒 (3.21517%)
[DEBUG]   Iterate over all double-colon entries for this file: 262 微秒 (2.39993%)
[DEBUG]   Free a chain of struct nameseq.: 52 微秒 (0.476321%)
[DEBUG]   Setup jobservers: 9 微秒 (0.0824402%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 9660 微秒 (88.4858%)
[DEBUG]   Read any stdin makefiles into temporary files: 338 微秒 (3.09609%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 246 微秒 (2.25337%)
[DEBUG]   Manage jobs: 3 微秒 (0.0274801%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (0.00916003%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Read all makefiles and decode: 244 微秒 (2.23505%)
[DEBUG]   Save the old value of 'commands_started': 215 微秒 (1.96941%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[DEBUG] starting profiling
[ 66%] Building CXX object examples/save-load-state/CMakeFiles/llama-save-load-state.dir/save-load-state.cpp.o
*******************************************************************************
[DEBUG] 总耗时: 17175 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 16005 微秒 (93.1878%)
[DEBUG]   Manifest Parsing and Rebuilding: 642 微秒 (3.73799%)
[DEBUG]   Initialization: 441 微秒 (2.56769%)
[DEBUG]   Execution Preparation: 3 微秒 (0.0174672%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 16040 微秒 (93.3916%)
[DEBUG]   Update goal chain: 15995 微秒 (93.1295%)
[DEBUG]   The whole process of reading the makefile: 440 微秒 (2.56186%)
[DEBUG]   Argument Parsing: 47 微秒 (0.273654%)
[DEBUG]   Dependency Graph Construction: 44 微秒 (0.256186%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 15657 微秒 (91.1616%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 417 微秒 (2.42795%)
[DEBUG]   Iterate over all double-colon entries for this file: 366 微秒 (2.131%)
[DEBUG]   Free a chain of struct nameseq.: 57 微秒 (0.331878%)
[DEBUG]   Setup jobservers: 12 微秒 (0.069869%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 15638 微秒 (91.0509%)
[DEBUG]   Read any stdin makefiles into temporary files: 403 微秒 (2.34643%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 347 微秒 (2.02038%)
[DEBUG]   Manage jobs: 4 微秒 (0.0232897%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 308 微秒 (1.7933%)
[DEBUG]   Read all makefiles and decode: 297 微秒 (1.72926%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[ 66%] Building CXX object examples/run/CMakeFiles/llama-run.dir/run.cpp.o
[DEBUG] starting profiling
[ 67%] Linking CXX executable ../bin/test-arg-parser
[ 68%] Building CXX object tests/CMakeFiles/test-llama-grammar.dir/get-model.cpp.o
*******************************************************************************
[DEBUG] 总耗时: 1748674 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1747747 微秒 (99.947%)
[DEBUG]   Manifest Parsing and Rebuilding: 532 微秒 (0.0304231%)
[DEBUG]   Initialization: 341 微秒 (0.0195005%)
[DEBUG]   Execution Preparation: 2 微秒 (0.000114372%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1747775 微秒 (99.9486%)
[DEBUG]   Update goal chain: 1747739 微秒 (99.9465%)
[DEBUG]   The whole process of reading the makefile: 347 微秒 (0.0198436%)
[DEBUG]   Dependency Graph Construction: 57 微秒 (0.00325961%)
[DEBUG]   Argument Parsing: 38 微秒 (0.00217308%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Iterate over all double-colon entries for this file: 884273 微秒 (50.5682%)
[DEBUG]   Variable initalzation: 863474 微秒 (49.3788%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 329 微秒 (0.0188143%)
[DEBUG]   Free a chain of struct nameseq.: 51 微秒 (0.0029165%)
[DEBUG]   Setup jobservers: 9 微秒 (0.000514676%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Ensuring that build targets are checked and updated properly: 884246 微秒 (50.5667%)
[DEBUG]   Wait for a child to die: 862822 微秒 (49.3415%)
[DEBUG]   Start jobs that are waiting for the load to go down: 607 微秒 (0.034712%)
[DEBUG]   Read any stdin makefiles into temporary files: 318 微秒 (0.0181852%)
[DEBUG]   Manage jobs: 2 微秒 (0.000114372%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 884190 微秒 (50.5635%)
[DEBUG]   Read all makefiles and decode: 232 微秒 (0.0132672%)
[DEBUG]   Start jobs that are waiting for the load to go down: 2 微秒 (0.000114372%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
*******************************************************************************
[DEBUG] 总耗时: 15504 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 14378 微秒 (92.7374%)
[DEBUG]   Manifest Parsing and Rebuilding: 636 微秒 (4.10217%)
[DEBUG]   Initialization: 417 微秒 (2.68963%)
[DEBUG]   Execution Preparation: 2 微秒 (0.0128999%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 14411 微秒 (92.9502%)
[DEBUG]   Update goal chain: 14368 微秒 (92.6729%)
[DEBUG]   The whole process of reading the makefile: 440 微秒 (2.83798%)
[DEBUG]   Argument Parsing: 46 微秒 (0.296698%)
[DEBUG]   Dependency Graph Construction: 43 微秒 (0.277348%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 14031 微秒 (90.4992%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 417 微秒 (2.68963%)
[DEBUG]   Iterate over all double-colon entries for this file: 365 微秒 (2.35423%)
[DEBUG]   Free a chain of struct nameseq.: 58 微秒 (0.374097%)
[DEBUG]   Setup jobservers: 12 微秒 (0.0773994%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 14014 微秒 (90.3896%)
[DEBUG]   Read any stdin makefiles into temporary files: 404 微秒 (2.60578%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 345 微秒 (2.22523%)
[DEBUG]   Manage jobs: 4 微秒 (0.0257998%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 306 微秒 (1.97368%)
[DEBUG]   Read all makefiles and decode: 263 微秒 (1.69634%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[ 68%] Building CXX object examples/run/CMakeFiles/llama-run.dir/linenoise.cpp/linenoise.cpp.o
[ 68%] Built target test-sampling
[DEBUG] starting profiling
[ 68%] Building CXX object examples/speculative/CMakeFiles/llama-speculative.dir/speculative.cpp.o
*******************************************************************************
[DEBUG] 总耗时: 17821 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 16446 微秒 (92.2844%)
[DEBUG]   Manifest Parsing and Rebuilding: 700 微秒 (3.92795%)
[DEBUG]   Initialization: 440 微秒 (2.469%)
[DEBUG]   Execution Preparation: 3 微秒 (0.0168341%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 16485 微秒 (92.5032%)
[DEBUG]   Update goal chain: 16437 微秒 (92.2339%)
[DEBUG]   The whole process of reading the makefile: 490 微秒 (2.74957%)
[DEBUG]   Argument Parsing: 48 微秒 (0.269345%)
[DEBUG]   Dependency Graph Construction: 45 微秒 (0.252511%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 16094 微秒 (90.3092%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 466 微秒 (2.61489%)
[DEBUG]   Iterate over all double-colon entries for this file: 377 微秒 (2.11548%)
[DEBUG]   Free a chain of struct nameseq.: 61 微秒 (0.342293%)
[DEBUG]   Setup jobservers: 12 微秒 (0.0673363%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 16074 微秒 (90.197%)
[DEBUG]   Read any stdin makefiles into temporary files: 450 微秒 (2.52511%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 357 微秒 (2.00325%)
[DEBUG]   Manage jobs: 4 微秒 (0.0224454%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (0.00561136%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Read all makefiles and decode: 340 微秒 (1.90786%)
[DEBUG]   Save the old value of 'commands_started': 314 微秒 (1.76197%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[ 68%] Linking CXX executable ../bin/test-quantize-perf
[ 68%] Building CXX object examples/speculative-simple/CMakeFiles/llama-speculative-simple.dir/speculative-simple.cpp.o
[ 69%] Linking CXX executable ../../bin/llama-lookup-merge
[ 70%] Linking CXX executable ../../bin/llama-lookup
[ 70%] Linking CXX executable ../bin/test-llama-grammar
*******************************************************************************
[DEBUG] 总耗时: 1872357 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1871240 微秒 (99.9403%)
[DEBUG]   Manifest Parsing and Rebuilding: 577 微秒 (0.0308168%)
[DEBUG]   Initialization: 475 微秒 (0.0253691%)
[DEBUG]   Execution Preparation: 4 微秒 (0.000213634%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1871305 微秒 (99.9438%)
[DEBUG]   Update goal chain: 1871231 微秒 (99.9399%)
[DEBUG]   The whole process of reading the makefile: 368 微秒 (0.0196544%)
[DEBUG]   Argument Parsing: 37 微秒 (0.00197612%)
[DEBUG]   Dependency Graph Construction: 37 微秒 (0.00197612%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1870096 微秒 (99.8792%)
[DEBUG]   Iterate over all double-colon entries for this file: 1183 微秒 (0.0631824%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 348 微秒 (0.0185862%)
[DEBUG]   Free a chain of struct nameseq.: 56 微秒 (0.00299088%)
[DEBUG]   Setup jobservers: 10 微秒 (0.000534086%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1870063 微秒 (99.8775%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 1128 微秒 (0.0602449%)
[DEBUG]   Read any stdin makefiles into temporary files: 334 微秒 (0.0178385%)
[DEBUG]   Manage jobs: 3 微秒 (0.000160226%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 1078 微秒 (0.0575745%)
[DEBUG]   Read all makefiles and decode: 243 微秒 (0.0129783%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 70%] Built target llama-embedding
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 11952 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 11113 微秒 (92.9803%)
[DEBUG]   Manifest Parsing and Rebuilding: 423 微秒 (3.53916%)
[DEBUG]   Initialization: 320 微秒 (2.67738%)
[DEBUG]   Execution Preparation: 1 微秒 (0.0083668%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 11129 微秒 (93.1141%)
[DEBUG]   Update goal chain: 11105 微秒 (92.9133%)
[DEBUG]   The whole process of reading the makefile: 294 微秒 (2.45984%)
[DEBUG]   Argument Parsing: 29 微秒 (0.242637%)
[DEBUG]   Dependency Graph Construction: 26 微秒 (0.217537%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 10847 微秒 (90.7547%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 279 微秒 (2.33434%)
[DEBUG]   Iterate over all double-colon entries for this file: 270 微秒 (2.25904%)
[DEBUG]   Free a chain of struct nameseq.: 37 微秒 (0.309572%)
[DEBUG]   Setup jobservers: 8 微秒 (0.0669344%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 10830 微秒 (90.6124%)
[DEBUG]   Read any stdin makefiles into temporary files: 270 微秒 (2.25904%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 254 微秒 (2.12517%)
[DEBUG]   Manage jobs: 2 微秒 (0.0167336%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 225 微秒 (1.88253%)
[DEBUG]   Read all makefiles and decode: 173 微秒 (1.44746%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 798532 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 797526 微秒 (99.874%)
[DEBUG]   Manifest Parsing and Rebuilding: 543 微秒 (0.0679998%)
[DEBUG]   Initialization: 390 微秒 (0.0488396%)
[DEBUG]   Execution Preparation: 2 微秒 (0.00025046%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 797557 微秒 (99.8779%)
[DEBUG]   Update goal chain: 797517 微秒 (99.8729%)
[DEBUG]   The whole process of reading the makefile: 366 微秒 (0.0458341%)
[DEBUG]   Argument Parsing: 43 微秒 (0.00538488%)
[DEBUG]   Dependency Graph Construction: 37 微秒 (0.0046335%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 796289 微秒 (99.7191%)
[DEBUG]   Iterate over all double-colon entries for this file: 1246 微秒 (0.156036%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 346 微秒 (0.0433295%)
[DEBUG]   Free a chain of struct nameseq.: 52 微秒 (0.00651195%)
[DEBUG]   Setup jobservers: 10 微秒 (0.0012523%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 796262 微秒 (99.7157%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 1222 微秒 (0.153031%)
[DEBUG]   Read any stdin makefiles into temporary files: 333 微秒 (0.0417015%)
[DEBUG]   Manage jobs: 3 微秒 (0.000375689%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 1176 微秒 (0.14727%)
[DEBUG]   Read all makefiles and decode: 238 微秒 (0.0298047%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 70%] Building CXX object examples/tokenize/CMakeFiles/llama-tokenize.dir/tokenize.cpp.o
*******************************************************************************
[DEBUG] 总耗时: 1924071 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1923082 微秒 (99.9486%)
[DEBUG]   Manifest Parsing and Rebuilding: 549 微秒 (0.0285333%)
[DEBUG]   Initialization: 352 微秒 (0.0182945%)
[DEBUG]   Execution Preparation: 2 微秒 (0.000103946%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1923113 微秒 (99.9502%)
[DEBUG]   Update goal chain: 1923072 微秒 (99.9481%)
[DEBUG]   The whole process of reading the makefile: 385 微秒 (0.0200097%)
[DEBUG]   Dependency Graph Construction: 34 微秒 (0.00176709%)
[DEBUG]   Argument Parsing: 31 微秒 (0.00161117%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1370232 微秒 (71.2153%)
[DEBUG]   Iterate over all double-colon entries for this file: 552853 微秒 (28.7335%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 365 微秒 (0.0189702%)
[DEBUG]   Free a chain of struct nameseq.: 56 微秒 (0.0029105%)
[DEBUG]   Setup jobservers: 10 微秒 (0.000519731%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1368540 微秒 (71.1273%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 552826 微秒 (28.7321%)
[DEBUG]   Start jobs that are waiting for the load to go down: 1647 微秒 (0.0855998%)
[DEBUG]   Read any stdin makefiles into temporary files: 352 微秒 (0.0182945%)
[DEBUG]   Manage jobs: 3 微秒 (0.000155919%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 552757 微秒 (28.7285%)
[DEBUG]   Read all makefiles and decode: 260 微秒 (0.013513%)
[DEBUG]   Start jobs that are waiting for the load to go down: 4 微秒 (0.000207893%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 70%] Linking CXX executable ../../bin/llama-infill
[ 70%] Built target llama-lookup-merge
[DEBUG] starting profiling
[ 70%] Built target test-quantize-perf
*******************************************************************************
[DEBUG] 总耗时: 1947455 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1946469 微秒 (99.9494%)
[DEBUG]   Manifest Parsing and Rebuilding: 557 微秒 (0.0286014%)
[DEBUG]   Initialization: 374 微秒 (0.0192046%)
[DEBUG]   Execution Preparation: 2 微秒 (0.000102698%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1946501 微秒 (99.951%)
[DEBUG]   Update goal chain: 1946460 微秒 (99.9489%)
[DEBUG]   The whole process of reading the makefile: 374 微秒 (0.0192046%)
[DEBUG]   Argument Parsing: 48 微秒 (0.00246476%)
[DEBUG]   Dependency Graph Construction: 34 微秒 (0.00174587%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1313084 微秒 (67.4256%)
[DEBUG]   Iterate over all double-colon entries for this file: 633389 微秒 (32.5239%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 357 微秒 (0.0183316%)
[DEBUG]   Free a chain of struct nameseq.: 55 微秒 (0.0028242%)
[DEBUG]   Setup jobservers: 8 微秒 (0.000410793%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1312699 微秒 (67.4059%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 633359 微秒 (32.5224%)
[DEBUG]   Read any stdin makefiles into temporary files: 343 微秒 (0.0176127%)
[DEBUG]   Start jobs that are waiting for the load to go down: 339 微秒 (0.0174073%)
[DEBUG]   Manage jobs: 3 微秒 (0.000154047%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 633296 微秒 (32.5192%)
[DEBUG]   Read all makefiles and decode: 257 微秒 (0.0131967%)
[DEBUG]   Start jobs that are waiting for the load to go down: 2 微秒 (0.000102698%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 16817 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 15642 微秒 (93.013%)
[DEBUG]   Manifest Parsing and Rebuilding: 634 微秒 (3.76999%)
[DEBUG]   Initialization: 454 微秒 (2.69965%)
[DEBUG]   Execution Preparation: 3 微秒 (0.0178391%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 15685 微秒 (93.2687%)
[DEBUG]   Update goal chain: 15634 微秒 (92.9655%)
[DEBUG]   The whole process of reading the makefile: 408 微秒 (2.42612%)
[DEBUG]   Argument Parsing: 52 微秒 (0.309211%)
[DEBUG]   Dependency Graph Construction: 43 微秒 (0.255694%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 15279 微秒 (90.8545%)
[DEBUG]   Iterate over all double-colon entries for this file: 390 微秒 (2.31908%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 384 微秒 (2.2834%)
[DEBUG]   Free a chain of struct nameseq.: 60 微秒 (0.356782%)
[DEBUG]   Setup jobservers: 13 微秒 (0.0773027%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 15259 微秒 (90.7356%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 371 微秒 (2.2061%)
[DEBUG]   Read any stdin makefiles into temporary files: 370 微秒 (2.20015%)
[DEBUG]   Manage jobs: 4 微秒 (0.0237855%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (0.00594636%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 329 微秒 (1.95635%)
[DEBUG]   Read all makefiles and decode: 267 微秒 (1.58768%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[ 70%] Built target test-llama-grammar
*******************************************************************************
[DEBUG] 总耗时: 16930 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 15757 微秒 (93.0715%)
[DEBUG]   Manifest Parsing and Rebuilding: 674 微秒 (3.9811%)
[DEBUG]   Initialization: 430 微秒 (2.53987%)
[DEBUG]   Execution Preparation: 3 微秒 (0.01772%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 15795 微秒 (93.2959%)
[DEBUG]   Update goal chain: 15747 微秒 (93.0124%)
[DEBUG]   The whole process of reading the makefile: 474 微秒 (2.79976%)
[DEBUG]   Dependency Graph Construction: 45 微秒 (0.2658%)
[DEBUG]   Argument Parsing: 42 微秒 (0.24808%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 15401 微秒 (90.9687%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 450 微秒 (2.658%)
[DEBUG]   Iterate over all double-colon entries for this file: 378 微秒 (2.23272%)
[DEBUG]   Free a chain of struct nameseq.: 61 微秒 (0.360307%)
[DEBUG]   Setup jobservers: 12 微秒 (0.0708801%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 15384 微秒 (90.8683%)
[DEBUG]   Read any stdin makefiles into temporary files: 435 微秒 (2.5694%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 357 微秒 (2.10868%)
[DEBUG]   Manage jobs: 4 微秒 (0.0236267%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 316 微秒 (1.86651%)
[DEBUG]   Read all makefiles and decode: 293 微秒 (1.73066%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[DEBUG] starting profiling
[ 70%] Building CXX object examples/tts/CMakeFiles/llama-tts.dir/tts.cpp.o
[ 71%] Building CXX object examples/gen-docs/CMakeFiles/llama-gen-docs.dir/gen-docs.cpp.o
*******************************************************************************
[DEBUG] 总耗时: 17162 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 15929 微秒 (92.8155%)
[DEBUG]   Manifest Parsing and Rebuilding: 673 微秒 (3.92145%)
[DEBUG]   Initialization: 426 微秒 (2.48223%)
[DEBUG]   Execution Preparation: 3 微秒 (0.0174805%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 15965 微秒 (93.0253%)
[DEBUG]   Update goal chain: 15920 微秒 (92.7631%)
[DEBUG]   The whole process of reading the makefile: 462 微秒 (2.69199%)
[DEBUG]   Argument Parsing: 51 微秒 (0.297168%)
[DEBUG]   Dependency Graph Construction: 44 微秒 (0.25638%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 15551 微秒 (90.613%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 440 微秒 (2.5638%)
[DEBUG]   Iterate over all double-colon entries for this file: 400 微秒 (2.33073%)
[DEBUG]   Free a chain of struct nameseq.: 59 微秒 (0.343783%)
[DEBUG]   Setup jobservers: 12 微秒 (0.0699219%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 15530 微秒 (90.4906%)
[DEBUG]   Read any stdin makefiles into temporary files: 425 微秒 (2.4764%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 377 微秒 (2.19671%)
[DEBUG]   Manage jobs: 5 微秒 (0.0291341%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 339 微秒 (1.97529%)
[DEBUG]   Read all makefiles and decode: 287 微秒 (1.6723%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[ 72%] Linking CXX executable ../bin/test-gguf
[ 73%] Linking CXX executable ../../bin/llama-lookup-create
[ 74%] Building CXX object examples/convert-llama2c-to-ggml/CMakeFiles/llama-convert-llama2c-to-ggml.dir/convert-llama2c-to-ggml.cpp.o
*******************************************************************************
[DEBUG] 总耗时: 2003290 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 2002410 微秒 (99.9561%)
[DEBUG]   Manifest Parsing and Rebuilding: 500 微秒 (0.0249589%)
[DEBUG]   Initialization: 322 微秒 (0.0160736%)
[DEBUG]   Execution Preparation: 3 微秒 (0.000149754%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 2002444 微秒 (99.9578%)
[DEBUG]   Update goal chain: 2002401 微秒 (99.9556%)
[DEBUG]   The whole process of reading the makefile: 331 微秒 (0.0165228%)
[DEBUG]   Argument Parsing: 37 微秒 (0.00184696%)
[DEBUG]   Dependency Graph Construction: 32 微秒 (0.00159737%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1353100 微秒 (67.5439%)
[DEBUG]   Iterate over all double-colon entries for this file: 649313 微秒 (32.4123%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 316 微秒 (0.0157741%)
[DEBUG]   Free a chain of struct nameseq.: 54 微秒 (0.00269557%)
[DEBUG]   Setup jobservers: 7 微秒 (0.000349425%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1352685 微秒 (67.5232%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 649285 微秒 (32.4109%)
[DEBUG]   Start jobs that are waiting for the load to go down: 355 微秒 (0.0177208%)
[DEBUG]   Read any stdin makefiles into temporary files: 304 微秒 (0.015175%)
[DEBUG]   Manage jobs: 3 微秒 (0.000149754%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 649216 微秒 (32.4075%)
[DEBUG]   Read all makefiles and decode: 239 微秒 (0.0119304%)
[DEBUG]   Start jobs that are waiting for the load to go down: 2 微秒 (9.98358e-05%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 74%] Built target test-arg-parser
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 17020 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 15873 微秒 (93.2609%)
[DEBUG]   Manifest Parsing and Rebuilding: 601 微秒 (3.53114%)
[DEBUG]   Initialization: 465 微秒 (2.73208%)
[DEBUG]   Execution Preparation: 3 微秒 (0.0176263%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 15909 微秒 (93.4724%)
[DEBUG]   Update goal chain: 15864 微秒 (93.208%)
[DEBUG]   The whole process of reading the makefile: 408 微秒 (2.39718%)
[DEBUG]   Argument Parsing: 42 微秒 (0.246769%)
[DEBUG]   Dependency Graph Construction: 41 微秒 (0.240893%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 14282 微秒 (83.913%)
[DEBUG]   Iterate over all double-colon entries for this file: 1610 微秒 (9.45946%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 386 微秒 (2.26792%)
[DEBUG]   Free a chain of struct nameseq.: 55 微秒 (0.323149%)
[DEBUG]   Setup jobservers: 11 微秒 (0.0646298%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 14262 微秒 (83.7955%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 1592 微秒 (9.3537%)
[DEBUG]   Read any stdin makefiles into temporary files: 373 微秒 (2.19154%)
[DEBUG]   Manage jobs: 4 微秒 (0.0235018%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (0.00587544%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 1551 微秒 (9.11281%)
[DEBUG]   Read all makefiles and decode: 266 微秒 (1.56287%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 75%] Linking CXX executable ../../bin/llama-lookahead
[DEBUG] starting profiling
[ 76%] Building CXX object examples/cvector-generator/CMakeFiles/llama-cvector-generator.dir/cvector-generator.cpp.o
*******************************************************************************
[DEBUG] 总耗时: 1786099 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1784828 微秒 (99.9288%)
[DEBUG]   Manifest Parsing and Rebuilding: 764 微秒 (0.0427748%)
[DEBUG]   Initialization: 433 微秒 (0.0242428%)
[DEBUG]   Execution Preparation: 4 微秒 (0.000223952%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1784867 微秒 (99.931%)
[DEBUG]   Update goal chain: 1784819 微秒 (99.9283%)
[DEBUG]   The whole process of reading the makefile: 558 微秒 (0.0312413%)
[DEBUG]   Argument Parsing: 45 微秒 (0.00251946%)
[DEBUG]   Dependency Graph Construction: 44 微秒 (0.00246347%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1783613 微秒 (99.8608%)
[DEBUG]   Iterate over all double-colon entries for this file: 1231 微秒 (0.0689212%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 534 微秒 (0.0298976%)
[DEBUG]   Free a chain of struct nameseq.: 173 微秒 (0.00968591%)
[DEBUG]   Setup jobservers: 13 微秒 (0.000727843%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1783582 微秒 (99.8591%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 1205 微秒 (0.0674655%)
[DEBUG]   Read any stdin makefiles into temporary files: 519 微秒 (0.0290577%)
[DEBUG]   Manage jobs: 5 微秒 (0.00027994%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (5.59879e-05%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 1153 微秒 (0.0645541%)
[DEBUG]   Read all makefiles and decode: 407 微秒 (0.0227871%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
*******************************************************************************
[DEBUG] 总耗时: 2090037 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 2089162 微秒 (99.9581%)
[DEBUG]   Manifest Parsing and Rebuilding: 488 微秒 (0.0233489%)
[DEBUG]   Initialization: 329 微秒 (0.0157413%)
[DEBUG]   Execution Preparation: 1 微秒 (4.7846e-05%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 2089187 微秒 (99.9593%)
[DEBUG]   Update goal chain: 2089156 微秒 (99.9578%)
[DEBUG]   The whole process of reading the makefile: 355 微秒 (0.0169853%)
[DEBUG]   Argument Parsing: 32 微秒 (0.00153107%)
[DEBUG]   Dependency Graph Construction: 25 微秒 (0.00119615%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1355533 微秒 (64.8569%)
[DEBUG]   Iterate over all double-colon entries for this file: 733629 微秒 (35.1012%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 339 微秒 (0.0162198%)
[DEBUG]   Free a chain of struct nameseq.: 47 微秒 (0.00224876%)
[DEBUG]   Setup jobservers: 8 微秒 (0.000382768%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1355494 微秒 (64.855%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 733606 微秒 (35.1001%)
[DEBUG]   Read any stdin makefiles into temporary files: 328 微秒 (0.0156935%)
[DEBUG]   Manage jobs: 3 微秒 (0.000143538%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 733555 微秒 (35.0977%)
[DEBUG]   Read all makefiles and decode: 243 微秒 (0.0116266%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 76%] Built target llama-lookup
[DEBUG] starting profiling
[ 76%] Built target test-gguf
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 17500 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 16354 微秒 (93.4514%)
[DEBUG]   Manifest Parsing and Rebuilding: 654 微秒 (3.73714%)
[DEBUG]   Initialization: 417 微秒 (2.38286%)
[DEBUG]   Execution Preparation: 3 微秒 (0.0171429%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 16389 微秒 (93.6514%)
[DEBUG]   Update goal chain: 16344 微秒 (93.3943%)
[DEBUG]   The whole process of reading the makefile: 450 微秒 (2.57143%)
[DEBUG]   Argument Parsing: 48 微秒 (0.274286%)
[DEBUG]   Dependency Graph Construction: 43 微秒 (0.245714%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 15982 微秒 (91.3257%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 427 微秒 (2.44%)
[DEBUG]   Iterate over all double-colon entries for this file: 392 微秒 (2.24%)
[DEBUG]   Free a chain of struct nameseq.: 57 微秒 (0.325714%)
[DEBUG]   Setup jobservers: 12 微秒 (0.0685714%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 15961 微秒 (91.2057%)
[DEBUG]   Read any stdin makefiles into temporary files: 411 微秒 (2.34857%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 372 微秒 (2.12571%)
[DEBUG]   Manage jobs: 4 微秒 (0.0228571%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (0.00571429%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 331 微秒 (1.89143%)
[DEBUG]   Read all makefiles and decode: 301 微秒 (1.72%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
*******************************************************************************
[DEBUG] 总耗时: 12979 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 12067 微秒 (92.9733%)
[DEBUG]   Manifest Parsing and Rebuilding: 464 微秒 (3.57501%)
[DEBUG]   Initialization: 385 微秒 (2.96633%)
[DEBUG]   Execution Preparation: 1 微秒 (0.00770475%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 12086 微秒 (93.1197%)
[DEBUG]   Update goal chain: 12058 微秒 (92.9039%)
[DEBUG]   The whole process of reading the makefile: 324 微秒 (2.49634%)
[DEBUG]   Argument Parsing: 36 微秒 (0.277371%)
[DEBUG]   Dependency Graph Construction: 28 微秒 (0.215733%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 11771 微秒 (90.6927%)
[DEBUG]   Iterate over all double-colon entries for this file: 303 微秒 (2.33454%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 294 微秒 (2.2652%)
[DEBUG]   Free a chain of struct nameseq.: 37 微秒 (0.285076%)
[DEBUG]   Setup jobservers: 8 微秒 (0.061638%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 11754 微秒 (90.5617%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 286 微秒 (2.20356%)
[DEBUG]   Read any stdin makefiles into temporary files: 283 微秒 (2.18045%)
[DEBUG]   Manage jobs: 4 微秒 (0.030819%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 257 微秒 (1.98012%)
[DEBUG]   Read all makefiles and decode: 209 微秒 (1.61029%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[DEBUG] starting profiling
[ 77%] Building CXX object examples/export-lora/CMakeFiles/llama-export-lora.dir/export-lora.cpp.o
[ 78%] Building CXX object examples/llava/CMakeFiles/llama-llava-cli.dir/llava-cli.cpp.o
[ 78%] Linking CXX executable ../bin/test-chat-template
*******************************************************************************
[DEBUG] 总耗时: 2179169 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 2178202 微秒 (99.9556%)
[DEBUG]   Manifest Parsing and Rebuilding: 532 微秒 (0.024413%)
[DEBUG]   Initialization: 376 微秒 (0.0172543%)
[DEBUG]   Execution Preparation: 2 微秒 (9.17781e-05%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 2178234 微秒 (99.9571%)
[DEBUG]   Update goal chain: 2178192 微秒 (99.9552%)
[DEBUG]   The whole process of reading the makefile: 361 微秒 (0.0165659%)
[DEBUG]   Argument Parsing: 37 微秒 (0.00169789%)
[DEBUG]   Dependency Graph Construction: 35 微秒 (0.00160612%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 2177420 微秒 (99.9197%)
[DEBUG]   Iterate over all double-colon entries for this file: 791 微秒 (0.0362982%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 342 微秒 (0.0156941%)
[DEBUG]   Free a chain of struct nameseq.: 55 微秒 (0.0025239%)
[DEBUG]   Setup jobservers: 9 微秒 (0.000413001%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 2177388 微秒 (99.9183%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 768 微秒 (0.0352428%)
[DEBUG]   Read any stdin makefiles into temporary files: 329 微秒 (0.0150975%)
[DEBUG]   Manage jobs: 4 微秒 (0.000183556%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 716 微秒 (0.0328566%)
[DEBUG]   Read all makefiles and decode: 243 微秒 (0.011151%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 78%] Built target llama-infill
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 18742 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 17746 微秒 (94.6857%)
[DEBUG]   Manifest Parsing and Rebuilding: 535 微秒 (2.85455%)
[DEBUG]   Initialization: 390 微秒 (2.08089%)
[DEBUG]   Execution Preparation: 2 微秒 (0.0106712%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 17771 微秒 (94.8191%)
[DEBUG]   Update goal chain: 17737 微秒 (94.6377%)
[DEBUG]   The whole process of reading the makefile: 359 微秒 (1.91548%)
[DEBUG]   Argument Parsing: 43 微秒 (0.229431%)
[DEBUG]   Dependency Graph Construction: 39 微秒 (0.208089%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 16537 微秒 (88.235%)
[DEBUG]   Iterate over all double-colon entries for this file: 1220 微秒 (6.50944%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 340 微秒 (1.81411%)
[DEBUG]   Free a chain of struct nameseq.: 48 微秒 (0.256109%)
[DEBUG]   Setup jobservers: 10 微秒 (0.0533561%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 16416 微秒 (87.5894%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 1201 微秒 (6.40807%)
[DEBUG]   Read any stdin makefiles into temporary files: 328 微秒 (1.75008%)
[DEBUG]   Manage jobs: 3 微秒 (0.0160068%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 1166 微秒 (6.22132%)
[DEBUG]   Read all makefiles and decode: 235 微秒 (1.25387%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[ 78%] Building CXX object examples/llava/CMakeFiles/llama-minicpmv-cli.dir/minicpmv-cli.cpp.o
*******************************************************************************
[DEBUG] 总耗时: 1571530 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1570255 微秒 (99.9189%)
[DEBUG]   Manifest Parsing and Rebuilding: 741 微秒 (0.0471515%)
[DEBUG]   Initialization: 400 微秒 (0.0254529%)
[DEBUG]   Execution Preparation: 4 微秒 (0.000254529%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1570297 微秒 (99.9215%)
[DEBUG]   Update goal chain: 1570246 微秒 (99.9183%)
[DEBUG]   The whole process of reading the makefile: 421 微秒 (0.0267892%)
[DEBUG]   Argument Parsing: 48 微秒 (0.00305435%)
[DEBUG]   Dependency Graph Construction: 45 微秒 (0.00286345%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1568496 微秒 (99.8069%)
[DEBUG]   Iterate over all double-colon entries for this file: 1778 微秒 (0.113138%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 397 微秒 (0.025262%)
[DEBUG]   Free a chain of struct nameseq.: 60 微秒 (0.00381794%)
[DEBUG]   Setup jobservers: 13 微秒 (0.000827219%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1568466 微秒 (99.805%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 1751 微秒 (0.11142%)
[DEBUG]   Read any stdin makefiles into temporary files: 382 微秒 (0.0243075%)
[DEBUG]   Manage jobs: 4 微秒 (0.000254529%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (6.36323e-05%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 1691 微秒 (0.107602%)
[DEBUG]   Read all makefiles and decode: 277 微秒 (0.0176261%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 78%] Built target llama-lookup-create
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 16943 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 15779 微秒 (93.1299%)
[DEBUG]   Manifest Parsing and Rebuilding: 641 微秒 (3.78327%)
[DEBUG]   Initialization: 409 微秒 (2.41398%)
[DEBUG]   Execution Preparation: 3 微秒 (0.0177064%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 15814 微秒 (93.3365%)
[DEBUG]   Update goal chain: 15771 微秒 (93.0827%)
[DEBUG]   The whole process of reading the makefile: 446 微秒 (2.63236%)
[DEBUG]   Dependency Graph Construction: 44 微秒 (0.259694%)
[DEBUG]   Argument Parsing: 42 微秒 (0.24789%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 14391 微秒 (84.9377%)
[DEBUG]   Iterate over all double-colon entries for this file: 1409 微秒 (8.31612%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 422 微秒 (2.4907%)
[DEBUG]   Free a chain of struct nameseq.: 59 微秒 (0.348226%)
[DEBUG]   Setup jobservers: 12 微秒 (0.0708257%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 14371 微秒 (84.8197%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 1389 微秒 (8.19808%)
[DEBUG]   Read any stdin makefiles into temporary files: 407 微秒 (2.40217%)
[DEBUG]   Manage jobs: 5 微秒 (0.0295107%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (0.00590214%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 1348 微秒 (7.95609%)
[DEBUG]   Read all makefiles and decode: 293 微秒 (1.72933%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[ 78%] Building CXX object examples/llava/CMakeFiles/llama-qwen2vl-cli.dir/qwen2vl-cli.cpp.o
*******************************************************************************
[DEBUG] 总耗时: 2016539 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 2015543 微秒 (99.9506%)
[DEBUG]   Manifest Parsing and Rebuilding: 618 微秒 (0.0306466%)
[DEBUG]   Initialization: 322 微秒 (0.015968%)
[DEBUG]   Execution Preparation: 2 微秒 (9.91798e-05%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 2015577 微秒 (99.9523%)
[DEBUG]   Update goal chain: 2015533 微秒 (99.9501%)
[DEBUG]   The whole process of reading the makefile: 401 微秒 (0.0198856%)
[DEBUG]   Argument Parsing: 64 微秒 (0.00317375%)
[DEBUG]   Dependency Graph Construction: 42 微秒 (0.00208278%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 2014010 微秒 (99.8746%)
[DEBUG]   Iterate over all double-colon entries for this file: 1546 微秒 (0.076666%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 380 微秒 (0.0188442%)
[DEBUG]   Free a chain of struct nameseq.: 53 微秒 (0.00262827%)
[DEBUG]   Setup jobservers: 11 微秒 (0.000545489%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 2013977 微秒 (99.873%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 1522 微秒 (0.0754759%)
[DEBUG]   Read any stdin makefiles into temporary files: 366 微秒 (0.0181499%)
[DEBUG]   Manage jobs: 4 微秒 (0.00019836%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (4.95899e-05%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 1474 微秒 (0.0730955%)
[DEBUG]   Read all makefiles and decode: 264 微秒 (0.0130917%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 78%] Built target llama-lookahead
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 18702 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 17284 微秒 (92.4179%)
[DEBUG]   Manifest Parsing and Rebuilding: 903 微秒 (4.82836%)
[DEBUG]   Initialization: 437 微秒 (2.33665%)
[DEBUG]   Execution Preparation: 3 微秒 (0.0160411%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 17319 微秒 (92.6051%)
[DEBUG]   Update goal chain: 17275 微秒 (92.3698%)
[DEBUG]   The whole process of reading the makefile: 439 微秒 (2.34734%)
[DEBUG]   Argument Parsing: 48 微秒 (0.256657%)
[DEBUG]   Dependency Graph Construction: 43 微秒 (0.229922%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 14501 微秒 (77.5372%)
[DEBUG]   Iterate over all double-colon entries for this file: 2803 微秒 (14.9877%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 416 微秒 (2.22436%)
[DEBUG]   Free a chain of struct nameseq.: 59 微秒 (0.315474%)
[DEBUG]   Setup jobservers: 12 微秒 (0.0641643%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 14481 微秒 (77.4302%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 2784 微秒 (14.8861%)
[DEBUG]   Read any stdin makefiles into temporary files: 401 微秒 (2.14416%)
[DEBUG]   Manage jobs: 4 微秒 (0.0213881%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 2743 微秒 (14.6669%)
[DEBUG]   Read all makefiles and decode: 296 微秒 (1.58272%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[ 78%] Building CXX object examples/llava/CMakeFiles/llama-llava-clip-quantize-cli.dir/clip-quantize-cli.cpp.o
*******************************************************************************
[DEBUG] 总耗时: 2382084 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 2381156 微秒 (99.961%)
[DEBUG]   Manifest Parsing and Rebuilding: 564 微秒 (0.0236767%)
[DEBUG]   Initialization: 310 微秒 (0.0130138%)
[DEBUG]   Execution Preparation: 2 微秒 (8.39601e-05%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 2381190 微秒 (99.9625%)
[DEBUG]   Update goal chain: 2381148 微秒 (99.9607%)
[DEBUG]   The whole process of reading the makefile: 393 微秒 (0.0164982%)
[DEBUG]   Argument Parsing: 39 微秒 (0.00163722%)
[DEBUG]   Dependency Graph Construction: 32 微秒 (0.00134336%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1901041 微秒 (79.8058%)
[DEBUG]   Iterate over all double-colon entries for this file: 480122 微秒 (20.1555%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 373 微秒 (0.0156586%)
[DEBUG]   Free a chain of struct nameseq.: 53 微秒 (0.00222494%)
[DEBUG]   Setup jobservers: 9 微秒 (0.00037782%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1900997 微秒 (79.8039%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 480093 微秒 (20.1543%)
[DEBUG]   Read any stdin makefiles into temporary files: 360 微秒 (0.0151128%)
[DEBUG]   Manage jobs: 4 微秒 (0.00016792%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 480033 微秒 (20.1518%)
[DEBUG]   Read all makefiles and decode: 274 微秒 (0.0115025%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 78%] Built target test-chat-template
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 14545 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 13590 微秒 (93.4342%)
[DEBUG]   Manifest Parsing and Rebuilding: 514 微秒 (3.53386%)
[DEBUG]   Initialization: 352 微秒 (2.42008%)
[DEBUG]   Execution Preparation: 2 微秒 (0.0137504%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 13622 微秒 (93.6542%)
[DEBUG]   Update goal chain: 13582 微秒 (93.3792%)
[DEBUG]   The whole process of reading the makefile: 341 微秒 (2.34445%)
[DEBUG]   Argument Parsing: 39 微秒 (0.268133%)
[DEBUG]   Dependency Graph Construction: 36 微秒 (0.247508%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 13253 微秒 (91.1172%)
[DEBUG]   Iterate over all double-colon entries for this file: 355 微秒 (2.4407%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 321 微秒 (2.20694%)
[DEBUG]   Free a chain of struct nameseq.: 51 微秒 (0.350636%)
[DEBUG]   Setup jobservers: 10 微秒 (0.0687521%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 13235 微秒 (90.9935%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 339 微秒 (2.3307%)
[DEBUG]   Read any stdin makefiles into temporary files: 310 微秒 (2.13132%)
[DEBUG]   Manage jobs: 3 微秒 (0.0206256%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 303 微秒 (2.08319%)
[DEBUG]   Read all makefiles and decode: 218 微秒 (1.4988%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[ 78%] Building CXX object pocs/vdot/CMakeFiles/llama-vdot.dir/vdot.cpp.o
[ 79%] Linking CXX executable ../../bin/llama-lookup-stats
[DEBUG] starting profiling
*******************************************************************************
[DEBUG] 总耗时: 17304 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 16203 微秒 (93.6373%)
[DEBUG]   Manifest Parsing and Rebuilding: 589 微秒 (3.40384%)
[DEBUG]   Initialization: 439 微秒 (2.53699%)
[DEBUG]   Execution Preparation: 3 微秒 (0.017337%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 16238 微秒 (93.8396%)
[DEBUG]   Update goal chain: 16194 微秒 (93.5853%)
[DEBUG]   The whole process of reading the makefile: 388 微秒 (2.24226%)
[DEBUG]   Argument Parsing: 47 微秒 (0.271613%)
[DEBUG]   Dependency Graph Construction: 42 微秒 (0.242718%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 15846 微秒 (91.5742%)
[DEBUG]   Iterate over all double-colon entries for this file: 378 微秒 (2.18447%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 365 微秒 (2.10934%)
[DEBUG]   Free a chain of struct nameseq.: 56 微秒 (0.323625%)
[DEBUG]   Setup jobservers: 11 微秒 (0.0635691%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 15800 微秒 (91.3084%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 359 微秒 (2.07466%)
[DEBUG]   Read any stdin makefiles into temporary files: 351 微秒 (2.02843%)
[DEBUG]   Manage jobs: 4 微秒 (0.023116%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (0.00577901%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 320 微秒 (1.84928%)
[DEBUG]   Read all makefiles and decode: 250 微秒 (1.44475%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[ 79%] Building CXX object pocs/vdot/CMakeFiles/llama-q8dot.dir/q8dot.cpp.o
*******************************************************************************
[DEBUG] 总耗时: 1621613 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1620552 微秒 (99.9346%)
[DEBUG]   Manifest Parsing and Rebuilding: 594 微秒 (0.0366302%)
[DEBUG]   Initialization: 386 微秒 (0.0238035%)
[DEBUG]   Execution Preparation: 3 微秒 (0.000185001%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1620586 微秒 (99.9367%)
[DEBUG]   Update goal chain: 1620542 微秒 (99.934%)
[DEBUG]   The whole process of reading the makefile: 402 微秒 (0.0247901%)
[DEBUG]   Dependency Graph Construction: 41 微秒 (0.00252835%)
[DEBUG]   Argument Parsing: 40 微秒 (0.00246668%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1619813 微秒 (99.889%)
[DEBUG]   Iterate over all double-colon entries for this file: 730 微秒 (0.0450169%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 380 微秒 (0.0234335%)
[DEBUG]   Free a chain of struct nameseq.: 57 微秒 (0.00351502%)
[DEBUG]   Setup jobservers: 12 微秒 (0.000740004%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1619779 微秒 (99.8869%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 705 微秒 (0.0434752%)
[DEBUG]   Read any stdin makefiles into temporary files: 366 微秒 (0.0225701%)
[DEBUG]   Manage jobs: 4 微秒 (0.000246668%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (6.1667e-05%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 655 微秒 (0.0403919%)
[DEBUG]   Read all makefiles and decode: 261 微秒 (0.0160951%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 79%] Built target llama-lookup-stats
[ 80%] Linking CXX executable ../../bin/llama-tokenize
*******************************************************************************
[DEBUG] 总耗时: 1022824 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1021558 微秒 (99.8762%)
[DEBUG]   Manifest Parsing and Rebuilding: 621 微秒 (0.0607143%)
[DEBUG]   Initialization: 506 微秒 (0.0494709%)
[DEBUG]   Execution Preparation: 3 微秒 (0.000293306%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1021592 微秒 (99.8795%)
[DEBUG]   Update goal chain: 1021549 微秒 (99.8753%)
[DEBUG]   The whole process of reading the makefile: 411 微秒 (0.0401829%)
[DEBUG]   Argument Parsing: 50 微秒 (0.00488843%)
[DEBUG]   Dependency Graph Construction: 43 微秒 (0.00420405%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1020706 微秒 (99.7929%)
[DEBUG]   Iterate over all double-colon entries for this file: 863 微秒 (0.0843742%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 387 微秒 (0.0378364%)
[DEBUG]   Free a chain of struct nameseq.: 57 微秒 (0.00557281%)
[DEBUG]   Setup jobservers: 13 微秒 (0.00127099%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1020673 微秒 (99.7897%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 839 微秒 (0.0820278%)
[DEBUG]   Read any stdin makefiles into temporary files: 372 微秒 (0.0363699%)
[DEBUG]   Manage jobs: 4 微秒 (0.000391074%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (9.77685e-05%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 787 微秒 (0.0769438%)
[DEBUG]   Read all makefiles and decode: 268 微秒 (0.026202%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 80%] Built target llama-tokenize
[ 81%] Linking CXX executable ../../bin/llama-save-load-state
[ 82%] Linking CXX executable ../../bin/llama-llava-clip-quantize-cli
[ 83%] Linking CXX executable ../../bin/llama-passkey
[ 84%] Linking CXX executable ../../bin/llama-speculative-simple
[ 85%] Linking CXX executable ../../bin/llama-parallel
*******************************************************************************
[DEBUG] 总耗时: 857530 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 856090 微秒 (99.8321%)
[DEBUG]   Manifest Parsing and Rebuilding: 918 微秒 (0.107052%)
[DEBUG]   Initialization: 429 微秒 (0.0500274%)
[DEBUG]   Execution Preparation: 3 微秒 (0.000349842%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 856129 微秒 (99.8366%)
[DEBUG]   Update goal chain: 856081 微秒 (99.831%)
[DEBUG]   The whole process of reading the makefile: 432 微秒 (0.0503772%)
[DEBUG]   Dependency Graph Construction: 317 微秒 (0.0369666%)
[DEBUG]   Argument Parsing: 47 微秒 (0.00548086%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 853851 微秒 (99.571%)
[DEBUG]   Iterate over all double-colon entries for this file: 2255 微秒 (0.262965%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 409 微秒 (0.0476951%)
[DEBUG]   Free a chain of struct nameseq.: 58 微秒 (0.00676361%)
[DEBUG]   Setup jobservers: 12 微秒 (0.00139937%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 853819 微秒 (99.5672%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 2229 微秒 (0.259933%)
[DEBUG]   Read any stdin makefiles into temporary files: 394 微秒 (0.0459459%)
[DEBUG]   Manage jobs: 4 微秒 (0.000466456%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 2172 微秒 (0.253286%)
[DEBUG]   Read all makefiles and decode: 289 微秒 (0.0337014%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 85%] Built target llama-llava-clip-quantize-cli
[ 86%] Linking CXX executable ../../bin/llama-vdot
*******************************************************************************
[DEBUG] 总耗时: 1551876 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1550857 微秒 (99.9343%)
[DEBUG]   Manifest Parsing and Rebuilding: 574 微秒 (0.0369875%)
[DEBUG]   Initialization: 379 微秒 (0.0244221%)
[DEBUG]   Execution Preparation: 2 微秒 (0.000128876%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1550890 微秒 (99.9365%)
[DEBUG]   Update goal chain: 1550849 微秒 (99.9338%)
[DEBUG]   The whole process of reading the makefile: 384 微秒 (0.0247442%)
[DEBUG]   Argument Parsing: 45 微秒 (0.00289972%)
[DEBUG]   Dependency Graph Construction: 41 微秒 (0.00264196%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1550075 微秒 (99.8839%)
[DEBUG]   Iterate over all double-colon entries for this file: 793 微秒 (0.0510994%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 364 微秒 (0.0234555%)
[DEBUG]   Free a chain of struct nameseq.: 54 微秒 (0.00347966%)
[DEBUG]   Setup jobservers: 10 微秒 (0.000644381%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1550043 微秒 (99.8819%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 768 微秒 (0.0494885%)
[DEBUG]   Read any stdin makefiles into temporary files: 351 微秒 (0.0226178%)
[DEBUG]   Manage jobs: 3 微秒 (0.000193314%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (6.44381e-05%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 722 微秒 (0.0465243%)
[DEBUG]   Read all makefiles and decode: 250 微秒 (0.0161095%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 86%] Built target llama-save-load-state
*******************************************************************************
[DEBUG] 总耗时: 1811606 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1810419 微秒 (99.9345%)
[DEBUG]   Manifest Parsing and Rebuilding: 674 微秒 (0.0372046%)
[DEBUG]   Initialization: 439 微秒 (0.0242326%)
[DEBUG]   Execution Preparation: 4 微秒 (0.000220799%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1810459 微秒 (99.9367%)
[DEBUG]   Update goal chain: 1810411 微秒 (99.934%)
[DEBUG]   The whole process of reading the makefile: 453 微秒 (0.0250054%)
[DEBUG]   Argument Parsing: 55 微秒 (0.00303598%)
[DEBUG]   Dependency Graph Construction: 47 微秒 (0.00259438%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1809468 微秒 (99.882%)
[DEBUG]   Iterate over all double-colon entries for this file: 970 微秒 (0.0535437%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 429 微秒 (0.0236806%)
[DEBUG]   Free a chain of struct nameseq.: 58 微秒 (0.00320158%)
[DEBUG]   Setup jobservers: 12 微秒 (0.000662396%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1809437 微秒 (99.8803%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 947 微秒 (0.0522741%)
[DEBUG]   Read any stdin makefiles into temporary files: 412 微秒 (0.0227423%)
[DEBUG]   Manage jobs: 5 微秒 (0.000275998%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (5.51996e-05%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 897 微秒 (0.0495141%)
[DEBUG]   Read all makefiles and decode: 300 微秒 (0.0165599%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
*******************************************************************************
[DEBUG] 总耗时: 896380 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 895239 微秒 (99.8727%)
[DEBUG]   Manifest Parsing and Rebuilding: 622 微秒 (0.0693902%)
[DEBUG]   Initialization: 447 微秒 (0.0498672%)
[DEBUG]   Execution Preparation: 3 微秒 (0.000334679%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 895285 微秒 (99.8778%)
[DEBUG]   Update goal chain: 895233 微秒 (99.872%)
[DEBUG]   The whole process of reading the makefile: 418 微秒 (0.046632%)
[DEBUG]   Argument Parsing: 43 微秒 (0.00479707%)
[DEBUG]   Dependency Graph Construction: 42 微秒 (0.00468551%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 894458 微秒 (99.7856%)
[DEBUG]   Iterate over all double-colon entries for this file: 806 微秒 (0.0899172%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 394 微秒 (0.0439546%)
[DEBUG]   Free a chain of struct nameseq.: 60 微秒 (0.00669359%)
[DEBUG]   Setup jobservers: 12 微秒 (0.00133872%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 894429 微秒 (99.7823%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 782 微秒 (0.0872398%)
[DEBUG]   Read any stdin makefiles into temporary files: 379 微秒 (0.0422812%)
[DEBUG]   Manage jobs: 4 微秒 (0.000446239%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (0.00011156%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 733 微秒 (0.0817734%)
[DEBUG]   Read all makefiles and decode: 271 微秒 (0.0302327%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 87%] Linking CXX executable ../../bin/llama-quantize
[ 87%] Built target llama-vdot
[ 87%] Built target llama-passkey
[ 87%] Linking CXX executable ../../bin/llama-gen-docs
*******************************************************************************
[DEBUG] 总耗时: 1800005 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1798255 微秒 (99.9028%)
[DEBUG]   Manifest Parsing and Rebuilding: 1244 微秒 (0.0691109%)
[DEBUG]   Initialization: 420 微秒 (0.0233333%)
[DEBUG]   Execution Preparation: 3 微秒 (0.000166666%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1798321 微秒 (99.9064%)
[DEBUG]   Update goal chain: 1798246 微秒 (99.9023%)
[DEBUG]   The whole process of reading the makefile: 1012 微秒 (0.0562221%)
[DEBUG]   Dependency Graph Construction: 45 微秒 (0.00249999%)
[DEBUG]   Argument Parsing: 43 微秒 (0.00238888%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1797369 微秒 (99.8536%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 991 微秒 (0.0550554%)
[DEBUG]   Iterate over all double-colon entries for this file: 930 微秒 (0.0516665%)
[DEBUG]   Free a chain of struct nameseq.: 60 微秒 (0.00333332%)
[DEBUG]   Setup jobservers: 11 微秒 (0.000611109%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1797310 微秒 (99.8503%)
[DEBUG]   Read any stdin makefiles into temporary files: 976 微秒 (0.0542221%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 904 微秒 (0.0502221%)
[DEBUG]   Start jobs that are waiting for the load to go down: 24 微秒 (0.00133333%)
[DEBUG]   Manage jobs: 4 微秒 (0.000222222%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 852 微秒 (0.0473332%)
[DEBUG]   Read all makefiles and decode: 281 微秒 (0.0156111%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 87%] Built target llama-quantize
*******************************************************************************
[DEBUG] 总耗时: 1640073 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1639013 微秒 (99.9354%)
[DEBUG]   Manifest Parsing and Rebuilding: 562 微秒 (0.0342668%)
[DEBUG]   Initialization: 419 微秒 (0.0255476%)
[DEBUG]   Execution Preparation: 2 微秒 (0.000121946%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1639043 微秒 (99.9372%)
[DEBUG]   Update goal chain: 1639004 微秒 (99.9348%)
[DEBUG]   The whole process of reading the makefile: 384 微秒 (0.0234136%)
[DEBUG]   Argument Parsing: 41 微秒 (0.00249989%)
[DEBUG]   Dependency Graph Construction: 36 微秒 (0.00219502%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1638263 微秒 (99.8896%)
[DEBUG]   Iterate over all double-colon entries for this file: 760 微秒 (0.0463394%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 364 微秒 (0.0221941%)
[DEBUG]   Free a chain of struct nameseq.: 53 微秒 (0.00323156%)
[DEBUG]   Setup jobservers: 11 微秒 (0.000670702%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1638233 微秒 (99.8878%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 737 微秒 (0.044937%)
[DEBUG]   Read any stdin makefiles into temporary files: 351 微秒 (0.0214015%)
[DEBUG]   Manage jobs: 3 微秒 (0.000182919%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (6.09729e-05%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 691 微秒 (0.0421323%)
[DEBUG]   Read all makefiles and decode: 251 微秒 (0.0153042%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 87%] Built target llama-speculative-simple
*******************************************************************************
[DEBUG] 总耗时: 2093232 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 2092123 微秒 (99.947%)
[DEBUG]   Manifest Parsing and Rebuilding: 650 微秒 (0.0310525%)
[DEBUG]   Initialization: 387 微秒 (0.0184882%)
[DEBUG]   Execution Preparation: 3 微秒 (0.000143319%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 2092153 微秒 (99.9485%)
[DEBUG]   Update goal chain: 2092113 微秒 (99.9465%)
[DEBUG]   The whole process of reading the makefile: 451 微秒 (0.0215456%)
[DEBUG]   Argument Parsing: 45 微秒 (0.00214979%)
[DEBUG]   Dependency Graph Construction: 44 微秒 (0.00210201%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 2091310 微秒 (99.9082%)
[DEBUG]   Iterate over all double-colon entries for this file: 822 微秒 (0.0392694%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 428 微秒 (0.0204468%)
[DEBUG]   Free a chain of struct nameseq.: 84 微秒 (0.00401293%)
[DEBUG]   Setup jobservers: 12 微秒 (0.000573276%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 2091279 微秒 (99.9067%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 796 微秒 (0.0380273%)
[DEBUG]   Read any stdin makefiles into temporary files: 412 微秒 (0.0196825%)
[DEBUG]   Manage jobs: 5 微秒 (0.000238865%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 752 微秒 (0.0359253%)
[DEBUG]   Read all makefiles and decode: 302 微秒 (0.0144274%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 87%] Built target llama-parallel
[ 87%] Linking CXX executable ../../bin/llama-llava-cli
[ 88%] Linking CXX executable ../../bin/llama-retrieval
*******************************************************************************
[DEBUG] 总耗时: 1530683 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1529511 微秒 (99.9234%)
[DEBUG]   Manifest Parsing and Rebuilding: 613 微秒 (0.0400475%)
[DEBUG]   Initialization: 442 微秒 (0.028876%)
[DEBUG]   Execution Preparation: 2 微秒 (0.000130661%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1529539 微秒 (99.9253%)
[DEBUG]   Update goal chain: 1529499 微秒 (99.9226%)
[DEBUG]   The whole process of reading the makefile: 425 微秒 (0.0277654%)
[DEBUG]   Argument Parsing: 44 微秒 (0.00287453%)
[DEBUG]   Dependency Graph Construction: 41 微秒 (0.00267854%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1528505 微秒 (99.8577%)
[DEBUG]   Iterate over all double-colon entries for this file: 1013 微秒 (0.0661796%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 403 微秒 (0.0263281%)
[DEBUG]   Free a chain of struct nameseq.: 59 微秒 (0.00385449%)
[DEBUG]   Setup jobservers: 12 微秒 (0.000783964%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1528474 微秒 (99.8557%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 992 微秒 (0.0648077%)
[DEBUG]   Read any stdin makefiles into temporary files: 389 微秒 (0.0254135%)
[DEBUG]   Manage jobs: 4 微秒 (0.000261321%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 947 微秒 (0.0618678%)
[DEBUG]   Read all makefiles and decode: 278 微秒 (0.0181618%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 89%] Linking CXX executable ../../bin/llama-q8dot
[ 89%] Built target llama-gen-docs
*******************************************************************************
[DEBUG] 总耗时: 1917869 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1916817 微秒 (99.9451%)
[DEBUG]   Manifest Parsing and Rebuilding: 620 微秒 (0.0323275%)
[DEBUG]   Initialization: 365 微秒 (0.0190315%)
[DEBUG]   Execution Preparation: 3 微秒 (0.000156424%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1916850 微秒 (99.9469%)
[DEBUG]   Update goal chain: 1916808 微秒 (99.9447%)
[DEBUG]   The whole process of reading the makefile: 424 微秒 (0.0221079%)
[DEBUG]   Dependency Graph Construction: 54 微秒 (0.00281563%)
[DEBUG]   Argument Parsing: 37 微秒 (0.00192922%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1895261 微秒 (98.8212%)
[DEBUG]   Iterate over all double-colon entries for this file: 21559 微秒 (1.12411%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 404 微秒 (0.021065%)
[DEBUG]   Free a chain of struct nameseq.: 70 微秒 (0.00364988%)
[DEBUG]   Setup jobservers: 10 微秒 (0.000521412%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1894881 微秒 (98.8014%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 21530 微秒 (1.1226%)
[DEBUG]   Read any stdin makefiles into temporary files: 390 微秒 (0.0203351%)
[DEBUG]   Start jobs that are waiting for the load to go down: 335 微秒 (0.0174673%)
[DEBUG]   Manage jobs: 4 微秒 (0.000208565%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 21468 微秒 (1.11937%)
[DEBUG]   Read all makefiles and decode: 289 微秒 (0.0150688%)
[DEBUG]   Start jobs that are waiting for the load to go down: 3 微秒 (0.000156424%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[DEBUG] starting profiling
[ 89%] Building CXX object examples/server/CMakeFiles/llama-server.dir/server.cpp.o
*******************************************************************************
[DEBUG] 总耗时: 891702 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 890457 微秒 (99.8604%)
[DEBUG]   Manifest Parsing and Rebuilding: 750 微秒 (0.0841088%)
[DEBUG]   Initialization: 420 微秒 (0.0471009%)
[DEBUG]   Execution Preparation: 3 微秒 (0.000336435%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 890495 微秒 (99.8646%)
[DEBUG]   Update goal chain: 890449 微秒 (99.8595%)
[DEBUG]   The whole process of reading the makefile: 548 微秒 (0.0614555%)
[DEBUG]   Dependency Graph Construction: 44 微秒 (0.00493438%)
[DEBUG]   Argument Parsing: 43 微秒 (0.00482224%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 889760 微秒 (99.7822%)
[DEBUG]   Iterate over all double-colon entries for this file: 695 微秒 (0.0779408%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 523 微秒 (0.0586519%)
[DEBUG]   Free a chain of struct nameseq.: 60 微秒 (0.00672871%)
[DEBUG]   Setup jobservers: 12 微秒 (0.00134574%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 889731 微秒 (99.779%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 670 微秒 (0.0751372%)
[DEBUG]   Read any stdin makefiles into temporary files: 508 微秒 (0.0569697%)
[DEBUG]   Manage jobs: 4 微秒 (0.00044858%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (0.000112145%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 620 微秒 (0.06953%)
[DEBUG]   Read all makefiles and decode: 272 微秒 (0.0305035%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 89%] Linking CXX executable ../../bin/llama-imatrix
[ 89%] Built target llama-q8dot
*******************************************************************************
[DEBUG] 总耗时: 1491066 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1489811 微秒 (99.9158%)
[DEBUG]   Manifest Parsing and Rebuilding: 631 微秒 (0.0423187%)
[DEBUG]   Initialization: 395 微秒 (0.0264911%)
[DEBUG]   Execution Preparation: 3 微秒 (0.000201198%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1489853 微秒 (99.9186%)
[DEBUG]   Update goal chain: 1489804 微秒 (99.9154%)
[DEBUG]   The whole process of reading the makefile: 416 微秒 (0.0278995%)
[DEBUG]   Argument Parsing: 62 微秒 (0.0041581%)
[DEBUG]   Dependency Graph Construction: 41 微秒 (0.00274971%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1489039 微秒 (99.8641%)
[DEBUG]   Iterate over all double-colon entries for this file: 792 微秒 (0.0531164%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 396 微秒 (0.0265582%)
[DEBUG]   Free a chain of struct nameseq.: 57 微秒 (0.00382277%)
[DEBUG]   Setup jobservers: 10 微秒 (0.000670661%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1489011 微秒 (99.8622%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 769 微秒 (0.0515738%)
[DEBUG]   Read any stdin makefiles into temporary files: 383 微秒 (0.0256863%)
[DEBUG]   Manage jobs: 4 微秒 (0.000268264%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (6.70661e-05%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 722 微秒 (0.0484217%)
[DEBUG]   Read all makefiles and decode: 265 微秒 (0.0177725%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 89%] Built target llama-llava-cli
*******************************************************************************
[DEBUG] 总耗时: 2041548 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 2040412 微秒 (99.9444%)
[DEBUG]   Manifest Parsing and Rebuilding: 630 微秒 (0.0308589%)
[DEBUG]   Initialization: 404 微秒 (0.0197889%)
[DEBUG]   Execution Preparation: 3 微秒 (0.000146947%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 2040473 微秒 (99.9473%)
[DEBUG]   Update goal chain: 2040403 微秒 (99.9439%)
[DEBUG]   The whole process of reading the makefile: 405 微秒 (0.0198379%)
[DEBUG]   Argument Parsing: 45 微秒 (0.00220421%)
[DEBUG]   Dependency Graph Construction: 43 微秒 (0.00210624%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 2039677 微秒 (99.9084%)
[DEBUG]   Iterate over all double-colon entries for this file: 774 微秒 (0.0379124%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 385 微秒 (0.0188582%)
[DEBUG]   Free a chain of struct nameseq.: 54 微秒 (0.00264505%)
[DEBUG]   Setup jobservers: 10 微秒 (0.000489824%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 2039642 微秒 (99.9066%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 751 微秒 (0.0367858%)
[DEBUG]   Read any stdin makefiles into temporary files: 371 微秒 (0.0181725%)
[DEBUG]   Manage jobs: 4 微秒 (0.00019593%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 702 微秒 (0.0343857%)
[DEBUG]   Read all makefiles and decode: 263 微秒 (0.0128824%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 89%] Built target llama-retrieval
*******************************************************************************
[DEBUG] 总耗时: 3731107 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 3730159 微秒 (99.9746%)
[DEBUG]   Manifest Parsing and Rebuilding: 570 微秒 (0.015277%)
[DEBUG]   Initialization: 325 微秒 (0.00871055%)
[DEBUG]   Execution Preparation: 3 微秒 (8.04051e-05%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 3730222 微秒 (99.9763%)
[DEBUG]   Update goal chain: 3730150 微秒 (99.9744%)
[DEBUG]   The whole process of reading the makefile: 364 微秒 (0.00975582%)
[DEBUG]   Dependency Graph Construction: 36 微秒 (0.000964861%)
[DEBUG]   Argument Parsing: 35 微秒 (0.000938059%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 3729441 微秒 (99.9553%)
[DEBUG]   Iterate over all double-colon entries for this file: 760 微秒 (0.0203693%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 345 微秒 (0.00924659%)
[DEBUG]   Free a chain of struct nameseq.: 57 微秒 (0.0015277%)
[DEBUG]   Setup jobservers: 9 微秒 (0.000241215%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 3729411 微秒 (99.9545%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 736 微秒 (0.019726%)
[DEBUG]   Read any stdin makefiles into temporary files: 332 微秒 (0.00889816%)
[DEBUG]   Manage jobs: 3 微秒 (8.04051e-05%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 656 微秒 (0.0175819%)
[DEBUG]   Read all makefiles and decode: 240 微秒 (0.00643241%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 89%] Built target llama-imatrix
[ 90%] Linking CXX executable ../../bin/llama-minicpmv-cli
[ 90%] Linking CXX executable ../../bin/llama-cli
*******************************************************************************
[DEBUG] 总耗时: 1699321 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1698191 微秒 (99.9335%)
[DEBUG]   Manifest Parsing and Rebuilding: 627 微秒 (0.0368971%)
[DEBUG]   Initialization: 433 微秒 (0.0254808%)
[DEBUG]   Execution Preparation: 3 微秒 (0.000176541%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1698226 微秒 (99.9356%)
[DEBUG]   Update goal chain: 1698182 微秒 (99.933%)
[DEBUG]   The whole process of reading the makefile: 424 微秒 (0.0249511%)
[DEBUG]   Argument Parsing: 48 微秒 (0.00282466%)
[DEBUG]   Dependency Graph Construction: 44 微秒 (0.00258927%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1694731 微秒 (99.7299%)
[DEBUG]   Iterate over all double-colon entries for this file: 3472 微秒 (0.204317%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 401 微秒 (0.0235977%)
[DEBUG]   Free a chain of struct nameseq.: 57 微秒 (0.00335428%)
[DEBUG]   Setup jobservers: 12 微秒 (0.000706164%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1694699 微秒 (99.728%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 3446 微秒 (0.202787%)
[DEBUG]   Read any stdin makefiles into temporary files: 386 微秒 (0.022715%)
[DEBUG]   Manage jobs: 4 微秒 (0.000235388%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (5.8847e-05%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 3389 微秒 (0.199433%)
[DEBUG]   Read all makefiles and decode: 279 微秒 (0.0164183%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 90%] Built target llama-minicpmv-cli
[ 91%] Linking CXX executable ../../bin/llama-qwen2vl-cli
[ 91%] Linking CXX executable ../../bin/llama-convert-llama2c-to-ggml
*******************************************************************************
[DEBUG] 总耗时: 2804802 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 2804026 微秒 (99.9723%)
[DEBUG]   Manifest Parsing and Rebuilding: 419 微秒 (0.0149387%)
[DEBUG]   Initialization: 310 微秒 (0.0110525%)
[DEBUG]   Execution Preparation: 1 微秒 (3.56531e-05%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 2804043 微秒 (99.9729%)
[DEBUG]   Update goal chain: 2804016 微秒 (99.972%)
[DEBUG]   The whole process of reading the makefile: 285 微秒 (0.0101611%)
[DEBUG]   Argument Parsing: 36 微秒 (0.00128351%)
[DEBUG]   Dependency Graph Construction: 25 微秒 (0.000891329%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 2803433 微秒 (99.9512%)
[DEBUG]   Iterate over all double-colon entries for this file: 590 微秒 (0.0210354%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 270 微秒 (0.00962635%)
[DEBUG]   Free a chain of struct nameseq.: 37 微秒 (0.00131917%)
[DEBUG]   Setup jobservers: 8 微秒 (0.000285225%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 2803402 微秒 (99.9501%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 569 微秒 (0.0202866%)
[DEBUG]   Read any stdin makefiles into temporary files: 261 微秒 (0.00930547%)
[DEBUG]   Manage jobs: 2 微秒 (7.13063e-05%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 531 微秒 (0.0189318%)
[DEBUG]   Read all makefiles and decode: 196 微秒 (0.00698802%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 91%] Built target llama-cli
*******************************************************************************
[DEBUG] 总耗时: 2063564 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 2062146 微秒 (99.9313%)
[DEBUG]   Manifest Parsing and Rebuilding: 923 微秒 (0.0447284%)
[DEBUG]   Initialization: 416 微秒 (0.0201593%)
[DEBUG]   Execution Preparation: 4 微秒 (0.000193839%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 2062162 微秒 (99.9321%)
[DEBUG]   Update goal chain: 2062114 微秒 (99.9297%)
[DEBUG]   The whole process of reading the makefile: 456 微秒 (0.0220977%)
[DEBUG]   Argument Parsing: 301 微秒 (0.0145864%)
[DEBUG]   Dependency Graph Construction: 45 微秒 (0.00218069%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 2061409 微秒 (99.8956%)
[DEBUG]   Iterate over all double-colon entries for this file: 732 微秒 (0.0354726%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 432 微秒 (0.0209347%)
[DEBUG]   Free a chain of struct nameseq.: 59 微秒 (0.00285913%)
[DEBUG]   Setup jobservers: 12 微秒 (0.000581518%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 2061379 微秒 (99.8941%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 710 微秒 (0.0344065%)
[DEBUG]   Read any stdin makefiles into temporary files: 415 微秒 (0.0201108%)
[DEBUG]   Manage jobs: 5 微秒 (0.000242299%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (4.84598e-05%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 663 微秒 (0.0321289%)
[DEBUG]   Read all makefiles and decode: 304 微秒 (0.0147318%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 91%] Built target llama-convert-llama2c-to-ggml
*******************************************************************************
[DEBUG] 总耗时: 1800025 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 1798873 微秒 (99.936%)
[DEBUG]   Manifest Parsing and Rebuilding: 650 微秒 (0.0361106%)
[DEBUG]   Initialization: 433 微秒 (0.0240552%)
[DEBUG]   Execution Preparation: 3 微秒 (0.000166664%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 1798911 微秒 (99.9381%)
[DEBUG]   Update goal chain: 1798866 微秒 (99.9356%)
[DEBUG]   The whole process of reading the makefile: 452 微秒 (0.0251108%)
[DEBUG]   Argument Parsing: 44 微秒 (0.00244441%)
[DEBUG]   Dependency Graph Construction: 41 微秒 (0.00227775%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 1797351 微秒 (99.8514%)
[DEBUG]   Iterate over all double-colon entries for this file: 1540 微秒 (0.0855544%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 428 微秒 (0.0237774%)
[DEBUG]   Free a chain of struct nameseq.: 59 微秒 (0.00327773%)
[DEBUG]   Setup jobservers: 12 微秒 (0.000666657%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 1797322 微秒 (99.8498%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 1517 微秒 (0.0842766%)
[DEBUG]   Read any stdin makefiles into temporary files: 413 微秒 (0.0229441%)
[DEBUG]   Manage jobs: 4 微秒 (0.000222219%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (5.55548e-05%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 1468 微秒 (0.0815544%)
[DEBUG]   Read all makefiles and decode: 305 微秒 (0.0169442%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 91%] Built target llama-qwen2vl-cli
[ 91%] Linking CXX executable ../../bin/llama-export-lora
*******************************************************************************
[DEBUG] 总耗时: 2124095 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 2122987 微秒 (99.9478%)
[DEBUG]   Manifest Parsing and Rebuilding: 627 微秒 (0.0295185%)
[DEBUG]   Initialization: 400 微秒 (0.0188315%)
[DEBUG]   Execution Preparation: 3 微秒 (0.000141237%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 2123048 微秒 (99.9507%)
[DEBUG]   Update goal chain: 2122978 微秒 (99.9474%)
[DEBUG]   The whole process of reading the makefile: 408 微秒 (0.0192082%)
[DEBUG]   Dependency Graph Construction: 44 微秒 (0.00207147%)
[DEBUG]   Argument Parsing: 43 微秒 (0.00202439%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 2122263 微秒 (99.9138%)
[DEBUG]   Iterate over all double-colon entries for this file: 763 微秒 (0.0359212%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 386 微秒 (0.0181724%)
[DEBUG]   Free a chain of struct nameseq.: 55 微秒 (0.00258934%)
[DEBUG]   Setup jobservers: 12 微秒 (0.000564946%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 2122237 微秒 (99.9125%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 741 微秒 (0.0348854%)
[DEBUG]   Read any stdin makefiles into temporary files: 371 微秒 (0.0174663%)
[DEBUG]   Manage jobs: 4 微秒 (0.000188315%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (4.70789e-05%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 667 微秒 (0.0314016%)
[DEBUG]   Read all makefiles and decode: 262 微秒 (0.0123347%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 91%] Built target llama-export-lora
[ 91%] Linking CXX executable ../../bin/llama-cvector-generator
[ 92%] Linking CXX executable ../../bin/llama-speculative
*******************************************************************************
[DEBUG] 总耗时: 2364776 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 2363694 微秒 (99.9542%)
[DEBUG]   Manifest Parsing and Rebuilding: 567 微秒 (0.0239769%)
[DEBUG]   Initialization: 445 微秒 (0.0188178%)
[DEBUG]   Execution Preparation: 2 微秒 (8.45746e-05%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 2363726 微秒 (99.9556%)
[DEBUG]   Update goal chain: 2363686 微秒 (99.9539%)
[DEBUG]   The whole process of reading the makefile: 389 微秒 (0.0164498%)
[DEBUG]   Argument Parsing: 43 微秒 (0.00181835%)
[DEBUG]   Dependency Graph Construction: 36 微秒 (0.00152234%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 2362988 微秒 (99.9244%)
[DEBUG]   Iterate over all double-colon entries for this file: 715 微秒 (0.0302354%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 367 微秒 (0.0155194%)
[DEBUG]   Free a chain of struct nameseq.: 48 微秒 (0.00202979%)
[DEBUG]   Setup jobservers: 12 微秒 (0.000507448%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 2362959 微秒 (99.9232%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 694 微秒 (0.0293474%)
[DEBUG]   Read any stdin makefiles into temporary files: 354 微秒 (0.0149697%)
[DEBUG]   Manage jobs: 3 微秒 (0.000126862%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (4.22873e-05%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 653 微秒 (0.0276136%)
[DEBUG]   Read all makefiles and decode: 241 微秒 (0.0101912%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 92%] Built target llama-cvector-generator
*******************************************************************************
[DEBUG] 总耗时: 2746635 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 2745515 微秒 (99.9592%)
[DEBUG]   Manifest Parsing and Rebuilding: 652 微秒 (0.0237381%)
[DEBUG]   Initialization: 397 微秒 (0.0144541%)
[DEBUG]   Execution Preparation: 3 微秒 (0.000109225%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 2745556 微秒 (99.9607%)
[DEBUG]   Update goal chain: 2745508 微秒 (99.959%)
[DEBUG]   The whole process of reading the makefile: 447 微秒 (0.0162745%)
[DEBUG]   Argument Parsing: 48 微秒 (0.00174759%)
[DEBUG]   Dependency Graph Construction: 43 微秒 (0.00156555%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 2744858 微秒 (99.9353%)
[DEBUG]   Iterate over all double-colon entries for this file: 679 微秒 (0.0247212%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 424 微秒 (0.0154371%)
[DEBUG]   Free a chain of struct nameseq.: 58 微秒 (0.00211167%)
[DEBUG]   Setup jobservers: 12 微秒 (0.000436898%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 2744829 微秒 (99.9342%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 656 微秒 (0.0238838%)
[DEBUG]   Read any stdin makefiles into temporary files: 408 微秒 (0.0148545%)
[DEBUG]   Manage jobs: 5 微秒 (0.000182041%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 609 微秒 (0.0221726%)
[DEBUG]   Read all makefiles and decode: 303 微秒 (0.0110317%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 92%] Built target llama-speculative
[ 93%] Linking CXX executable ../bin/test-grammar-integration
[ 93%] Linking CXX executable ../../bin/llama-perplexity
*******************************************************************************
[DEBUG] 总耗时: 5331095 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 5330080 微秒 (99.981%)
[DEBUG]   Manifest Parsing and Rebuilding: 613 微秒 (0.0114986%)
[DEBUG]   Initialization: 339 微秒 (0.00635892%)
[DEBUG]   Execution Preparation: 2 微秒 (3.75157e-05%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 5330112 微秒 (99.9816%)
[DEBUG]   Update goal chain: 5330071 微秒 (99.9808%)
[DEBUG]   The whole process of reading the makefile: 442 微秒 (0.00829098%)
[DEBUG]   Dependency Graph Construction: 38 微秒 (0.000712799%)
[DEBUG]   Argument Parsing: 33 微秒 (0.00061901%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 3653034 微秒 (68.5231%)
[DEBUG]   Iterate over all double-colon entries for this file: 1677053 微秒 (31.4579%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 423 微秒 (0.00793458%)
[DEBUG]   Free a chain of struct nameseq.: 54 微秒 (0.00101293%)
[DEBUG]   Setup jobservers: 10 微秒 (0.000187579%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 3652652 微秒 (68.516%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 1677025 微秒 (31.4574%)
[DEBUG]   Read any stdin makefiles into temporary files: 409 微秒 (0.00767197%)
[DEBUG]   Start jobs that are waiting for the load to go down: 335 微秒 (0.00628389%)
[DEBUG]   Manage jobs: 4 微秒 (7.50315e-05%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 1676968 微秒 (31.4564%)
[DEBUG]   Read all makefiles and decode: 313 微秒 (0.00587121%)
[DEBUG]   Start jobs that are waiting for the load to go down: 2 微秒 (3.75157e-05%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 93%] Built target test-grammar-integration
*******************************************************************************
[DEBUG] 总耗时: 3820413 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 3819294 微秒 (99.9707%)
[DEBUG]   Manifest Parsing and Rebuilding: 661 微秒 (0.0173018%)
[DEBUG]   Initialization: 393 微秒 (0.0102868%)
[DEBUG]   Execution Preparation: 2 微秒 (5.23504e-05%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 3819335 微秒 (99.9718%)
[DEBUG]   Update goal chain: 3819287 微秒 (99.9705%)
[DEBUG]   The whole process of reading the makefile: 400 微秒 (0.0104701%)
[DEBUG]   Dependency Graph Construction: 108 微秒 (0.00282692%)
[DEBUG]   Argument Parsing: 40 微秒 (0.00104701%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 3818617 微秒 (99.953%)
[DEBUG]   Iterate over all double-colon entries for this file: 698 微秒 (0.0182703%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 380 微秒 (0.00994657%)
[DEBUG]   Free a chain of struct nameseq.: 59 微秒 (0.00154434%)
[DEBUG]   Setup jobservers: 11 微秒 (0.000287927%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 3818588 微秒 (99.9522%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 677 微秒 (0.0177206%)
[DEBUG]   Read any stdin makefiles into temporary files: 366 微秒 (0.00958012%)
[DEBUG]   Manage jobs: 3 微秒 (7.85255e-05%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 631 微秒 (0.0165165%)
[DEBUG]   Read all makefiles and decode: 260 微秒 (0.00680555%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 93%] Built target llama-perplexity
[ 94%] Linking CXX executable ../../bin/llama-run
*******************************************************************************
[DEBUG] 总耗时: 4044213 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 4042963 微秒 (99.9691%)
[DEBUG]   Manifest Parsing and Rebuilding: 648 微秒 (0.0160229%)
[DEBUG]   Initialization: 472 微秒 (0.011671%)
[DEBUG]   Execution Preparation: 2 微秒 (4.94534e-05%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 4042998 微秒 (99.97%)
[DEBUG]   Update goal chain: 4042954 微秒 (99.9689%)
[DEBUG]   The whole process of reading the makefile: 447 微秒 (0.0110528%)
[DEBUG]   Argument Parsing: 50 微秒 (0.00123633%)
[DEBUG]   Dependency Graph Construction: 41 微秒 (0.00101379%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 4012529 微秒 (99.2166%)
[DEBUG]   Iterate over all double-colon entries for this file: 30420 微秒 (0.752186%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 422 微秒 (0.0104347%)
[DEBUG]   Free a chain of struct nameseq.: 55 微秒 (0.00135997%)
[DEBUG]   Setup jobservers: 13 微秒 (0.000321447%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 4012107 微秒 (99.2061%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 30393 微秒 (0.751518%)
[DEBUG]   Read any stdin makefiles into temporary files: 406 微秒 (0.010039%)
[DEBUG]   Start jobs that are waiting for the load to go down: 381 微秒 (0.00942087%)
[DEBUG]   Manage jobs: 5 微秒 (0.000123633%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 30337 微秒 (0.750134%)
[DEBUG]   Read all makefiles and decode: 294 微秒 (0.00726965%)
[DEBUG]   Start jobs that are waiting for the load to go down: 2 微秒 (4.94534e-05%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 94%] Built target llama-run
[ 95%] Linking CXX executable ../bin/test-json-schema-to-grammar
*******************************************************************************
[DEBUG] 总耗时: 7330412 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 7329460 微秒 (99.987%)
[DEBUG]   Manifest Parsing and Rebuilding: 546 微秒 (0.00744842%)
[DEBUG]   Initialization: 349 微秒 (0.00476099%)
[DEBUG]   Execution Preparation: 2 微秒 (2.72836e-05%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 7329493 微秒 (99.9875%)
[DEBUG]   Update goal chain: 7329453 微秒 (99.9869%)
[DEBUG]   The whole process of reading the makefile: 377 微秒 (0.00514296%)
[DEBUG]   Argument Parsing: 37 微秒 (0.000504747%)
[DEBUG]   Dependency Graph Construction: 33 微秒 (0.000450179%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 5810604 微秒 (79.2671%)
[DEBUG]   Iterate over all double-colon entries for this file: 1518861 微秒 (20.72%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 358 微秒 (0.00488376%)
[DEBUG]   Free a chain of struct nameseq.: 55 微秒 (0.000750299%)
[DEBUG]   Setup jobservers: 10 微秒 (0.000136418%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 5810567 微秒 (79.2666%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 1518835 微秒 (20.7196%)
[DEBUG]   Read any stdin makefiles into temporary files: 347 微秒 (0.0047337%)
[DEBUG]   Manage jobs: 2 微秒 (2.72836e-05%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 1518777 微秒 (20.7188%)
[DEBUG]   Read all makefiles and decode: 260 微秒 (0.00354687%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 95%] Built target test-json-schema-to-grammar
[ 96%] Linking CXX executable ../../bin/llama-bench
*******************************************************************************
[DEBUG] 总耗时: 7512565 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 7511582 微秒 (99.9869%)
[DEBUG]   Manifest Parsing and Rebuilding: 578 微秒 (0.00769378%)
[DEBUG]   Initialization: 346 微秒 (0.00460562%)
[DEBUG]   Execution Preparation: 3 微秒 (3.99331e-05%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 7511642 微秒 (99.9877%)
[DEBUG]   Update goal chain: 7511572 微秒 (99.9868%)
[DEBUG]   The whole process of reading the makefile: 370 微秒 (0.00492508%)
[DEBUG]   Dependency Graph Construction: 39 微秒 (0.00051913%)
[DEBUG]   Argument Parsing: 36 微秒 (0.000479197%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 7510365 微秒 (99.9707%)
[DEBUG]   Iterate over all double-colon entries for this file: 1258 微秒 (0.0167453%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 351 微秒 (0.00467217%)
[DEBUG]   Free a chain of struct nameseq.: 55 微秒 (0.000732107%)
[DEBUG]   Setup jobservers: 9 微秒 (0.000119799%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 7510337 微秒 (99.9703%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 1235 微秒 (0.0164391%)
[DEBUG]   Read any stdin makefiles into temporary files: 338 微秒 (0.00449913%)
[DEBUG]   Manage jobs: 4 微秒 (5.32441e-05%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 1188 微秒 (0.0158135%)
[DEBUG]   Read all makefiles and decode: 246 微秒 (0.00327451%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 96%] Built target llama-bench
[ 96%] Building CXX object tests/CMakeFiles/test-chat.dir/get-model.cpp.o
[ 97%] Linking CXX executable ../bin/test-chat
*******************************************************************************
[DEBUG] 总耗时: 8849362 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 8848379 微秒 (99.9889%)
[DEBUG]   Manifest Parsing and Rebuilding: 555 微秒 (0.00627164%)
[DEBUG]   Initialization: 368 微秒 (0.00415849%)
[DEBUG]   Execution Preparation: 2 微秒 (2.26005e-05%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 8848432 微秒 (99.9895%)
[DEBUG]   Update goal chain: 8848371 微秒 (99.9888%)
[DEBUG]   The whole process of reading the makefile: 368 微秒 (0.00415849%)
[DEBUG]   Argument Parsing: 37 微秒 (0.000418109%)
[DEBUG]   Dependency Graph Construction: 33 微秒 (0.000372908%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 8561094 微秒 (96.7425%)
[DEBUG]   Iterate over all double-colon entries for this file: 287314 微秒 (3.24672%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 349 微秒 (0.00394379%)
[DEBUG]   Free a chain of struct nameseq.: 56 微秒 (0.000632814%)
[DEBUG]   Setup jobservers: 9 微秒 (0.000101702%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 8560708 微秒 (96.7381%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 287290 微秒 (3.24645%)
[DEBUG]   Read any stdin makefiles into temporary files: 336 微秒 (0.00379688%)
[DEBUG]   Start jobs that are waiting for the load to go down: 325 微秒 (0.00367258%)
[DEBUG]   Manage jobs: 3 微秒 (3.39007e-05%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 287211 微秒 (3.24556%)
[DEBUG]   Read all makefiles and decode: 255 微秒 (0.00288156%)
[DEBUG]   Start jobs that are waiting for the load to go down: 2 微秒 (2.26005e-05%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 97%] Built target test-chat
[ 98%] Linking CXX executable ../../bin/llama-tts
[ 98%] Building CXX object tests/CMakeFiles/test-backend-ops.dir/get-model.cpp.o
[ 99%] Linking CXX executable ../bin/test-backend-ops
*******************************************************************************
[DEBUG] 总耗时: 8268049 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 8266893 微秒 (99.986%)
[DEBUG]   Manifest Parsing and Rebuilding: 621 微秒 (0.00751084%)
[DEBUG]   Initialization: 464 微秒 (0.00561196%)
[DEBUG]   Execution Preparation: 2 微秒 (2.41895e-05%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 8266935 微秒 (99.9865%)
[DEBUG]   Update goal chain: 8266887 微秒 (99.9859%)
[DEBUG]   The whole process of reading the makefile: 415 微秒 (0.00501932%)
[DEBUG]   Argument Parsing: 46 微秒 (0.000556359%)
[DEBUG]   Dependency Graph Construction: 44 微秒 (0.000532169%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 8264946 微秒 (99.9625%)
[DEBUG]   Iterate over all double-colon entries for this file: 1970 微秒 (0.0238267%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 391 微秒 (0.00472905%)
[DEBUG]   Free a chain of struct nameseq.: 58 微秒 (0.000701496%)
[DEBUG]   Setup jobservers: 12 微秒 (0.000145137%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 8264918 微秒 (99.9621%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 1946 微秒 (0.0235364%)
[DEBUG]   Read any stdin makefiles into temporary files: 376 微秒 (0.00454763%)
[DEBUG]   Manage jobs: 4 微秒 (4.8379e-05%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (1.20948e-05%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 1897 微秒 (0.0229437%)
[DEBUG]   Read all makefiles and decode: 269 微秒 (0.00325349%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 99%] Built target llama-tts
*******************************************************************************
[DEBUG] 总耗时: 10253252 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 10252477 微秒 (99.9924%)
[DEBUG]   Manifest Parsing and Rebuilding: 446 微秒 (0.00434984%)
[DEBUG]   Initialization: 283 微秒 (0.0027601%)
[DEBUG]   Execution Preparation: 1 微秒 (9.753e-06%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 10252498 微秒 (99.9926%)
[DEBUG]   Update goal chain: 10252471 微秒 (99.9924%)
[DEBUG]   The whole process of reading the makefile: 317 微秒 (0.0030917%)
[DEBUG]   Argument Parsing: 33 微秒 (0.000321849%)
[DEBUG]   Dependency Graph Construction: 24 微秒 (0.000234072%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 9442517 微秒 (92.0929%)
[DEBUG]   Iterate over all double-colon entries for this file: 809959 微秒 (7.89953%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 298 微秒 (0.00290639%)
[DEBUG]   Free a chain of struct nameseq.: 36 微秒 (0.000351108%)
[DEBUG]   Setup jobservers: 10 微秒 (9.753e-05%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 9442221 微秒 (92.09%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 809937 微秒 (7.89932%)
[DEBUG]   Read any stdin makefiles into temporary files: 287 微秒 (0.00279911%)
[DEBUG]   Start jobs that are waiting for the load to go down: 241 微秒 (0.00235047%)
[DEBUG]   Manage jobs: 3 微秒 (2.9259e-05%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 809892 微秒 (7.89888%)
[DEBUG]   Read all makefiles and decode: 223 微秒 (0.00217492%)
[DEBUG]   Start jobs that are waiting for the load to go down: 2 微秒 (1.9506e-05%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[ 99%] Built target test-backend-ops
[100%] Linking CXX executable ../../bin/llama-server
*******************************************************************************
[DEBUG] 总耗时: 22914956 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 22913849 微秒 (99.9952%)
[DEBUG]   Manifest Parsing and Rebuilding: 628 微秒 (0.00274057%)
[DEBUG]   Initialization: 396 微秒 (0.00172813%)
[DEBUG]   Execution Preparation: 2 微秒 (8.72792e-06%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 22913890 微秒 (99.9953%)
[DEBUG]   Update goal chain: 22913842 微秒 (99.9951%)
[DEBUG]   The whole process of reading the makefile: 432 微秒 (0.00188523%)
[DEBUG]   Argument Parsing: 42 微秒 (0.000183286%)
[DEBUG]   Dependency Graph Construction: 41 微秒 (0.000178922%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 22912989 微秒 (99.9914%)
[DEBUG]   Iterate over all double-colon entries for this file: 880 微秒 (0.00384029%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 409 微秒 (0.00178486%)
[DEBUG]   Free a chain of struct nameseq.: 55 微秒 (0.000240018%)
[DEBUG]   Setup jobservers: 11 微秒 (4.80036e-05%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 22912957 微秒 (99.9913%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 855 微秒 (0.00373119%)
[DEBUG]   Read any stdin makefiles into temporary files: 396 微秒 (0.00172813%)
[DEBUG]   Manage jobs: 3 微秒 (1.30919e-05%)
[DEBUG]   Set varibles for makefile reading: 1 微秒 (4.36396e-06%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 802 微秒 (0.0034999%)
[DEBUG]   Read all makefiles and decode: 265 微秒 (0.00115645%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
[100%] Built target llama-server
*******************************************************************************
[DEBUG] 总耗时: 61460373 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 61456975 微秒 (99.9945%)
[DEBUG]   Manifest Parsing and Rebuilding: 3090 微秒 (0.00502763%)
[DEBUG]   Initialization: 256 微秒 (0.000416529%)
[DEBUG]   Execution Preparation: 1 微秒 (1.62706e-06%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 61456983 微秒 (99.9945%)
[DEBUG]   Update goal chain: 61456969 微秒 (99.9945%)
[DEBUG]   The whole process of reading the makefile: 2980 微秒 (0.00484865%)
[DEBUG]   Dependency Graph Construction: 34 微秒 (5.53202e-05%)
[DEBUG]   Argument Parsing: 30 微秒 (4.88119e-05%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Variable initalzation: 58752669 微秒 (95.5944%)
[DEBUG]   Iterate over all double-colon entries for this file: 2704034 微秒 (4.39964%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 2966 微秒 (0.00482587%)
[DEBUG]   Free a chain of struct nameseq.: 34 微秒 (5.53202e-05%)
[DEBUG]   Setup jobservers: 7 微秒 (1.13895e-05%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Wait for a child to die: 58752167 微秒 (95.5936%)
[DEBUG]   Ensuring that build targets are checked and updated properly: 2703848 微秒 (4.39934%)
[DEBUG]   Read any stdin makefiles into temporary files: 2955 微秒 (0.00480798%)
[DEBUG]   Manage jobs: 3 微秒 (4.88119e-06%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 2703522 微秒 (4.39881%)
[DEBUG]   Read all makefiles and decode: 2892 微秒 (0.00470547%)
[DEBUG]   Start jobs that are waiting for the load to go down: 26 微秒 (4.23037e-05%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
*******************************************************************************
[DEBUG] 总耗时: 61491130 微秒
[DEBUG] Command used: $MAKE_PATH -j32 -l32 2>&1 | tee -a "$LOG_FILE"
[DEBUG] finish profiling

[DEBUG] Level 0 前 5 个耗时最多的记录:
[DEBUG]   Run Build: 61489865 微秒 (99.9979%)
[DEBUG]   Manifest Parsing and Rebuilding: 965 微秒 (0.00156933%)
[DEBUG]   Initialization: 248 微秒 (0.00040331%)
[DEBUG]   Execution Preparation: 1 微秒 (1.62625e-06%)

[DEBUG] Level 1 前 5 个耗时最多的记录:
[DEBUG]   Update all the goals: 61489861 微秒 (99.9979%)
[DEBUG]   Update goal chain: 61489853 微秒 (99.9979%)
[DEBUG]   The whole process of reading the makefile: 866 微秒 (0.00140833%)
[DEBUG]   Dependency Graph Construction: 30 微秒 (4.87875e-05%)
[DEBUG]   Argument Parsing: 18 微秒 (2.92725e-05%)

[DEBUG] Level 2 前 5 个耗时最多的记录:
[DEBUG]   Iterate over all double-colon entries for this file: 61489844 微秒 (99.9979%)
[DEBUG]   Set varibles and Read makefiles into temporary files: 858 微秒 (0.00139532%)
[DEBUG]   Free a chain of struct nameseq.: 35 微秒 (5.69188e-05%)
[DEBUG]   Variable initalzation: 9 微秒 (1.46363e-05%)
[DEBUG]   Set MAKE_COMMAND variable: 2 微秒 (3.2525e-06%)

[DEBUG] Level 3 前 5 个耗时最多的记录:
[DEBUG]   Ensuring that build targets are checked and updated properly: 61489835 微秒 (99.9979%)
[DEBUG]   Read any stdin makefiles into temporary files: 798 微秒 (0.00129775%)
[DEBUG]   Manage jobs: 52 微秒 (8.4565e-05%)
[DEBUG]   Wait for a child to die: 3 微秒 (4.87875e-06%)
[DEBUG]   Set varibles for makefile reading: 0 微秒 (0%)

[DEBUG] Level 4 前 5 个耗时最多的记录:
[DEBUG]   Save the old value of 'commands_started': 61489812 微秒 (99.9979%)
[DEBUG]   Read all makefiles and decode: 715 微秒 (0.00116277%)
[DEBUG]   Keep track if any double-colon entry is not finished: 0 微秒 (0%)
[DEBUG]   Set the goal's 'changed' flag: 0 微秒 (0%)
--------------------------------------------------
CMake time: 1150000.00 microseconds
Make total time: 61491130 microseconds
Total time: 62641130.00 microseconds
CMake ratio: 1.00%
Make ratio: 98.00%
Level 0 Global Percentages:
  Run Build: 61489865 microseconds (98.00%)
  Manifest Parsing and Rebuilding: 965 microseconds (0%)
  Initialization: 248 microseconds (0%)
